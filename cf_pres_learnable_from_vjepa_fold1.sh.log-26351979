/home/gridsan/nchutisilp/.conda/envs/jepa/bin/python
INFO:root:called-params configs/evals/vitl16_cf_pres_16x2x3_from_vjepa_fold1.yaml
INFO:root:loaded params...
{   'data': {   'dataset_test': '/home/gridsan/nchutisilp/projects/ModelsGenesis/notebooks/tabular_data/cf_pres_test.csv',
                'dataset_train': '/home/gridsan/nchutisilp/projects/ModelsGenesis/notebooks/tabular_data/cf_pres_train_fold1.csv',
                'dataset_type': 'VideoDataset',
                'dataset_val': '/home/gridsan/nchutisilp/projects/ModelsGenesis/notebooks/tabular_data/cf_pres_val_fold1.csv',
                'frame_step': 3,
                'frames_per_clip': 128,
                'num_classes': 2,
                'num_segments': 1,
                'num_views_per_segment': 1},
    'eval_name': 'video_classification_frozen',
    'nodes': 8,
    'optimization': {   'attend_across_segments': True,
                        'batch_size': 2,
                        'final_lr': 0.0,
                        'freeze_encoder': False,
                        'lr': 0.001,
                        'num_epochs': 150,
                        'resolution': 224,
                        'start_lr': 0.001,
                        'use_bfloat16': True,
                        'warmup': 0.0,
                        'weight_decay': 0.01},
    'pretrain': {   'checkpoint': 'jepa-latest.pth.tar',
                    'checkpoint_key': 'target_encoder',
                    'clip_duration': None,
                    'folder': '/home/gridsan/nchutisilp/projects/jepa/pretrain_models',
                    'frames_per_clip': 16,
                    'model_name': 'vit_large',
                    'patch_size': 16,
                    'tight_silu': False,
                    'tubelet_size': 2,
                    'uniform_power': True,
                    'use_sdpa': True,
                    'use_silu': False,
                    'write_tag': 'jepa'},
    'resume_checkpoint': False,
    'tag': 'cf-pres-from-vjepa-16x2x3-fold1',
    'tasks_per_node': 8}
Random port is ... 49484
INFO:root:Running... (rank: 0/1)
INFO:root:Running evaluation: video_classification_frozen
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:Loading pretrained model from /home/gridsan/nchutisilp/projects/jepa/pretrain_models/jepa-latest.pth.tar
VisionTransformer(
  (patch_embed): PatchEmbed3D(
    (proj): Conv3d(3, 1024, kernel_size=(2, 16, 16), stride=(2, 16, 16))
  )
  (blocks): ModuleList(
    (0-23): 24 x Block(
      (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
      (attn): Attention(
        (qkv): Linear(in_features=1024, out_features=3072, bias=True)
        (attn_drop): Dropout(p=0.0, inplace=False)
        (proj): Linear(in_features=1024, out_features=1024, bias=True)
        (proj_drop): Dropout(p=0.0, inplace=False)
      )
      (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
      (mlp): MLP(
        (fc1): Linear(in_features=1024, out_features=4096, bias=True)
        (act): GELU(approximate='none')
        (fc2): Linear(in_features=4096, out_features=1024, bias=True)
        (drop): Dropout(p=0.0, inplace=False)
      )
    )
  )
  (norm): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
)
INFO:root:loaded pretrained model with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch: 300
 path: /home/gridsan/nchutisilp/projects/jepa/pretrain_models/jepa-latest.pth.tar
INFO:root:VideoDataset dataset created
INFO:root:VideoDataset unsupervised data loader created
INFO:root:VideoDataset dataset created
INFO:root:VideoDataset unsupervised data loader created
INFO:root:Dataloader created... iterations per epoch: 53
INFO:root:Unfreezing encoder...
INFO:root:Using AdamW
INFO:root:Epoch 1
/home/gridsan/nchutisilp/.local/lib/python3.9/site-packages/torch/backends/cuda/__init__.py:342: FutureWarning: torch.backends.cuda.sdp_kernel() is deprecated. In the future, this context manager will be removed. Please see, torch.nn.attention.sdpa_kernel() for the new context manager, with updated signature.
  warnings.warn(
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4235, 0.5765], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4546, 0.5454], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 0.670) [mem: 2.39e+04]
Training min-max: tensor(0.) tensor(0.8794)
Training Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.5605e-14, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.1201e-14, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.2125e-14, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.7859e-14, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9044e-13, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.6095e-12, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.8072e-13, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.1612e-13, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.3269e-13, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.2598e-13, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.6673e-09, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.5647e-10, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 1.8733e-08], device='cuda:0')
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 9.0890e-39], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 2.6666e-24], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Output torch.Size([2]) tensor([2.0415e-21, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.2300e-22, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([8.5948e-21, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 5.7564e-11], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 5.7116e-11], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 5.1817e-09], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 7.1381e-09], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.2825e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.6727e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 52.381% (loss: 18.039) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0800e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([9.5307e-09, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3552, 0.6448], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3519, 0.6481], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1442, 0.8558], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1402, 0.8598], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9997e-01, 3.2445e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9997e-01, 3.2318e-05], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9964e-01, 3.6401e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9964e-01, 3.5907e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0061, 0.9939], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0020, 0.9980], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8708, 0.1292], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8774, 0.1226], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4854, 0.5146], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4932, 0.5068], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9981, 0.0019], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9979, 0.0021], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9662, 0.0338], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9746, 0.0254], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Output torch.Size([2]) tensor([8.2555e-04, 9.9917e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.2027e-09, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.8488e-09, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.7577e-14, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.4695e-14, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.3244e-15, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.9208e-15, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.7538e-16, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([9.8421e-16, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.4818e-14, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.1928e-13, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.8751e-12, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([8.8783e-13, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.1349e-09, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.1266e-09, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9975e-01, 2.5316e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5465, 0.4535], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 53.659% (loss: 4.443) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0046, 0.9954], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0045, 0.9955], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9864, 0.0136], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9891, 0.0109], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9990e-01, 9.4983e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9990e-01, 9.5169e-05], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9967e-01, 3.2695e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9968e-01, 3.1720e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9952e-01, 4.8265e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9950e-01, 4.9602e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7603, 0.2397], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7628, 0.2372], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.6930e-05, 9.9995e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.3737e-05, 9.9997e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.6474e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.0843e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.3920e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([9.1504e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.9854e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.9466e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0100, 0.9900], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0058, 0.9942], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.0000)
Training Output torch.Size([2]) tensor([0.9974, 0.0026], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 30, Training ones: 65 / 75
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([9.9994e-01, 6.1990e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9994e-01, 6.0259e-05], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: 9.703) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([9.9994e-01, 5.7332e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9994e-01, 6.1268e-05], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([9.9994e-01, 6.3958e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9994e-01, 6.0791e-05], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([9.9994e-01, 6.0318e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9994e-01, 5.9036e-05], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([9.9994e-01, 5.9499e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9994e-01, 5.8462e-05], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([9.9994e-01, 5.8178e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9994e-01, 5.9325e-05], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([9.9994e-01, 6.3833e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9994e-01, 5.7894e-05], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([9.9994e-01, 6.1388e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9994e-01, 5.9151e-05], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([9.9994e-01, 6.0732e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9994e-01, 5.9325e-05], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([9.9994e-01, 6.0436e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9994e-01, 6.0436e-05], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([9.9994e-01, 5.9151e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9994e-01, 5.9966e-05], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([9.9994e-01, 6.1328e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9994e-01, 6.0436e-05], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([9.9994e-01, 6.0024e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9994e-01, 5.9907e-05], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[    1] train: 50.000% test: 23.077%
INFO:root:Accuracy: 0.50476, Precision: 0.58667, Recall: 0.67692, F1: 0.62857
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.0
INFO:root:Epoch 2
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9994e-01, 6.0732e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9991e-01, 9.4520e-05], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 4.856) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9965e-01, 3.5178e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9967e-01, 3.2663e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8802, 0.1198], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9206, 0.0794], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([4.0606e-04, 9.9959e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.8016e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3546e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.0974e-10, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.0013e-10, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.7970e-10, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.6052e-09, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.1250e-09, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.4904e-09, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.8737e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.8519e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.1614e-05, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0130e-05, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0103, 0.9897], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0114, 0.9886], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9828, 0.0172], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9835, 0.0165], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9962e-01, 3.8296e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9964e-01, 3.5732e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9946e-01, 5.3526e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9934e-01, 6.6216e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9889, 0.0111], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9864, 0.0136], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.3469, 0.6531], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3136, 0.6864], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1084, 0.8916], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1522, 0.8478], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2862, 0.7138], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3028, 0.6972], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0773, 0.9227], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0998, 0.9002], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1593, 0.8407], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1655, 0.8345], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0587, 0.9413], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0465, 0.9535], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 35.714% (loss: 2.952) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1398, 0.8602], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1145, 0.8855], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8521, 0.1479], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9332, 0.0668], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9418, 0.0582], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9451, 0.0549], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6940)
Training Output torch.Size([2]) tensor([0.7610, 0.2390], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7609, 0.2391], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0522, 0.9478], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0440, 0.9560], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0533, 0.9467], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0541, 0.9459], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1511, 0.8489], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1488, 0.8512], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5948, 0.4052], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6777, 0.3223], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6537, 0.3463], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6840, 0.3160], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4772, 0.5228], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4586, 0.5414], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1252, 0.8748], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1143, 0.8857], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0067, 0.9933], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0207, 0.9793], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.4971e-04, 9.9985e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.5416e-04, 9.9985e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.3399e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.7853e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.1736e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.2887e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.9370e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.6198e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.2958e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.9374e-05, 9.9998e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.4576e-10, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.2240e-10, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.9532e-16, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.8242e-16, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.3459e-04, 9.9977e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.1823e-05, 9.9996e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 47.561% (loss: 5.043) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0161, 0.9839], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0158, 0.9842], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2863, 0.7137], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2584, 0.7416], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3393, 0.6607], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2729, 0.7271], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9530, 0.0470], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9445, 0.0555], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9997e-01, 3.2572e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9997e-01, 3.3869e-05], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8864)
Training Output torch.Size([2]) tensor([1.0000e+00, 9.7215e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 9.0262e-07], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 2.7158e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 2.7158e-06], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9953e-01, 4.7009e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9949e-01, 5.0728e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1631, 0.8369], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2920, 0.7080], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.4602e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([6.1202e-06, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.3705e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3759e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.5558e-09, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 34, Training ones: 65 / 71
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.8427e-10, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.9338e-10, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.000) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([4.0905e-10, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.9032e-10, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.8427e-10, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.9338e-10, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.9338e-10, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.9957e-10, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.9646e-10, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([4.0587e-10, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([4.0587e-10, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.9957e-10, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.8427e-10, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([4.0587e-10, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.9338e-10, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.9957e-10, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.9338e-10, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.9646e-10, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.9338e-10, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.9338e-10, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.9957e-10, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.9646e-10, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.9032e-10, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.9338e-10, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.9646e-10, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.9646e-10, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 0, Training ones: 20 / 26
INFO:root:[    2] train: 49.057% test: 76.923%
INFO:root:Accuracy: 0.48571, Precision: 0.57746, Recall: 0.63077, F1: 0.60294
INFO:root:Val Accuracy: 0.76923, Precision: 0.76923, Recall: 1.00000, F1: 0.86957
INFO:root:New best F1: 0.86957 improved from 0.0, saving to /home/gridsan/nchutisilp/projects/jepa/pretrain_models/video_classification_frozen/cf-pres-from-vjepa-16x2x3-fold1/jepa-best.pth.tar
INFO:root:Epoch 3
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.9463e-10, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.9233e-10, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 10.977) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.8505e-09, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.5254e-09, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6824)
Training Output torch.Size([2]) tensor([1.5053e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0970e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.6675e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([6.9331e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.8071e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.8071e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.4539e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.4731e-05, 9.9998e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0280, 0.9720], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0257, 0.9743], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4429, 0.5571], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3407, 0.6593], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9966, 0.0034], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9965, 0.0035], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9925e-01, 7.4516e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9954e-01, 4.6281e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9987e-01, 1.2706e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9996e-01, 4.0854e-05], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9984e-01, 1.6125e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9988e-01, 1.1502e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9955, 0.0045], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9936, 0.0064], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2946, 0.7054], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3842, 0.6158], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8235)
Training Output torch.Size([2]) tensor([3.3080e-04, 9.9967e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.0845e-04, 9.9959e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.1126e-05, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1345e-05, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.8010e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.0929e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.0064e-05, 9.9996e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.6981e-05, 9.9996e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.6475e-04, 9.9984e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.5355e-05, 9.9990e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0023, 0.9977], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0041, 0.9959], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0084, 0.9916], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0121, 0.9879], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 50.000% (loss: 4.596) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1283, 0.8717], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1859, 0.8141], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9408, 0.0592], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9417, 0.0583], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9333)
Training Output torch.Size([2]) tensor([0.9809, 0.0191], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9882, 0.0118], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9816, 0.0184], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9779, 0.0221], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8864, 0.1136], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8426, 0.1574], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2975, 0.7025], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3057, 0.6943], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0902, 0.9098], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1254, 0.8746], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2353, 0.7647], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2007, 0.7993], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6938)
Training Output torch.Size([2]) tensor([0.1058, 0.8942], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1044, 0.8956], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1351, 0.8649], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1633, 0.8367], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1043, 0.8957], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1062, 0.8938], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0133, 0.9867], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0198, 0.9802], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.2719e-04, 9.9907e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.2358e-04, 9.9908e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.1569e-04, 9.9988e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.4983e-05, 9.9990e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.9665e-05, 9.9995e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.8529e-05, 9.9996e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7987)
Training Output torch.Size([2]) tensor([3.7490e-05, 9.9996e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.9212e-05, 9.9996e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.2659e-05, 9.9994e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.3274e-05, 9.9994e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.4596e-04, 9.9985e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.4585e-04, 9.9975e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.8651e-04, 9.9931e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.3993e-04, 9.9936e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 57.317% (loss: 2.655) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0830, 0.9170], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0401, 0.9599], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7605, 0.2395], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6456, 0.3544], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6442, 0.3558], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6397, 0.3603], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8001, 0.1999], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9759, 0.0241], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 6.2975e-11], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.6178e-09], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 6.4082e-12], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 6.7684e-12], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 1.1291e-11], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.7082e-11], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 6.8667e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 8.5458e-07], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.4901e-04, 9.9955e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.6632e-05, 9.9991e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.8321e-13, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.9810e-13, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.1621e-14, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.4922e-14, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.1769e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 32, Training ones: 65 / 73
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([9.9661e-04, 9.9900e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.001) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([9.9079e-04, 9.9901e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([9.7545e-04, 9.9902e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 0, Training ones: 20 / 26
INFO:root:[    3] train: 54.717% test: 76.923%
INFO:root:Accuracy: 0.54286, Precision: 0.61644, Recall: 0.69231, F1: 0.65217
INFO:root:Val Accuracy: 0.76923, Precision: 0.76923, Recall: 1.00000, F1: 0.86957
INFO:root:F1: 0.86957 did not improve from 0.8695651888847351
INFO:root:Epoch 4
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.2188e-04, 9.9968e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.4130e-04, 9.9966e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 3.992) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 9.0792e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.5444e-06], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 9.2222e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.6091e-06], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 3.0053e-08], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 9.5680e-09], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9999e-01, 9.8135e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 1.4639e-05], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9953, 0.0047], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9958, 0.0042], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.2980) tensor(1.)
Training Output torch.Size([2]) tensor([9.9936e-01, 6.3930e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9936e-01, 6.4118e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8578, 0.1422], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8585, 0.1415], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9675, 0.0325], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9765, 0.0235], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8157)
Training Output torch.Size([2]) tensor([0.1316, 0.8684], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1845, 0.8155], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5784, 0.4216], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7170, 0.2830], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0178, 0.9822], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0176, 0.9824], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.0980e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.2203e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.1019e-13, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([5.1786e-13, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.8421e-18, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([7.9203e-19, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.1530e-18, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1983e-18, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.2790e-13, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.3891e-14, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0696e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9896e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.7406e-04, 9.9923e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.4990e-04, 9.9925e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6123, 0.3877], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5767, 0.4233], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3927, 0.6073], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3115, 0.6885], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 45.238% (loss: 1.050) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.5098)
Training Output torch.Size([2]) tensor([0.3743, 0.6257], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3691, 0.6309], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9588, 0.0412], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9204, 0.0796], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5770, 0.4230], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7553, 0.2447], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.9109e-04, 9.9971e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3122e-04, 9.9987e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.3059) tensor(0.9834)
Training Output torch.Size([2]) tensor([1.0575e-05, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9985e-06, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0035, 0.9965], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9958, 0.0042], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9903, 0.0097], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9702)
Training Output torch.Size([2]) tensor([9.9988e-01, 1.1589e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9989e-01, 1.1189e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9914, 0.0086], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9752, 0.0248], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0077, 0.9923], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.2932e-10, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([6.4857e-10, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.3530e-16, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.4402e-16, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.3817e-22, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1790e-22, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2191) tensor(1.)
Training Output torch.Size([2]) tensor([1.4981e-27, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.5700e-27, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.5789e-28, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.8591e-28, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.3335e-28, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0960e-27, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.4945e-22, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.0329e-23, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.7263e-19, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.6344e-19, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.2442e-15, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([7.6054e-16, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9278)
Training Output torch.Size([2]) tensor([5.7452e-11, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([6.2251e-10, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 52.439% (loss: 10.602) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.7744e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.0496e-05, 9.9996e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2147, 0.7853], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2173, 0.7827], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7090, 0.2910], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7042, 0.2958], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7984)
Training Output torch.Size([2]) tensor([0.4111, 0.5889], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4125, 0.5875], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4206, 0.5794], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4173, 0.5827], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7607, 0.2393], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7546, 0.2454], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7256, 0.2744], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6719, 0.3281], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2686, 0.7314], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2210, 0.7790], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2193, 0.7807], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2531, 0.7469], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0546, 0.9454], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0602, 0.9398], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0681, 0.9319], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0707, 0.9293], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3264, 0.6736], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 36, Training ones: 65 / 69
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3242, 0.6758], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3255, 0.6745], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.393) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3277, 0.6723], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3247, 0.6753], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3230, 0.6770], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3251, 0.6749], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3259, 0.6741], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3259, 0.6741], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3255, 0.6745], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3264, 0.6736], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3264, 0.6736], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3259, 0.6741], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3212, 0.6788], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3272, 0.6728], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3251, 0.6749], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3264, 0.6736], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3251, 0.6749], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3264, 0.6736], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3251, 0.6749], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3251, 0.6749], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3255, 0.6745], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3251, 0.6749], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3251, 0.6749], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3247, 0.6753], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3255, 0.6745], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3251, 0.6749], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 0, Training ones: 20 / 26
INFO:root:[    4] train: 50.943% test: 76.923%
INFO:root:Accuracy: 0.50476, Precision: 0.59420, Recall: 0.63077, F1: 0.61194
INFO:root:Val Accuracy: 0.76923, Precision: 0.76923, Recall: 1.00000, F1: 0.86957
INFO:root:F1: 0.86957 did not improve from 0.8695651888847351
INFO:root:Epoch 5
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3264, 0.6736], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3290, 0.6710], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 0.754) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7029, 0.2971], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6859, 0.3141], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6628, 0.3372], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6872, 0.3128], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3103, 0.6897], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3012, 0.6988], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0297, 0.9703], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0283, 0.9717], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.2706) tensor(1.)
Training Output torch.Size([2]) tensor([0.0106, 0.9894], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0106, 0.9894], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0268, 0.9732], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0254, 0.9746], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6901)
Training Output torch.Size([2]) tensor([0.0125, 0.9875], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0115, 0.9885], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0305, 0.9695], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0303, 0.9697], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0353) tensor(1.)
Training Output torch.Size([2]) tensor([0.0167, 0.9833], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0157, 0.9843], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0433, 0.9567], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0438, 0.9562], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3449, 0.6551], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3603, 0.6397], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4189, 0.5811], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3908, 0.6092], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1569, 0.8431], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1407, 0.8593], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0053, 0.9947], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0059, 0.9941], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0044, 0.9956], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0219, 0.9781], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0244, 0.9756], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1869, 0.8131], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1869, 0.8131], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2264, 0.7736], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2456, 0.7544], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7240)
Training Output torch.Size([2]) tensor([0.4299, 0.5701], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4189, 0.5811], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3348, 0.6652], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4961, 0.5039], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 50.000% (loss: 0.897) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4647, 0.5353], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7072, 0.2928], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5751, 0.4249], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3677, 0.6323], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7932)
Training Output torch.Size([2]) tensor([0.0760, 0.9240], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0906, 0.9094], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.0610, 0.9390], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2583, 0.7417], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1512, 0.8488], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1859, 0.8141], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2959, 0.7041], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6914, 0.3086], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9662, 0.0338], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5860, 0.4140], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5889, 0.4111], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9848, 0.0152], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6705)
Training Output torch.Size([2]) tensor([0.3534, 0.6466], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3633, 0.6367], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4311, 0.5689], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3843, 0.6157], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3809, 0.6191], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1782, 0.8218], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0533, 0.9467], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1322, 0.8678], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0046, 0.9954], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0808, 0.9192], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([7.6472e-05, 9.9992e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.2409e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.4316e-05, 9.9992e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.1080e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.6465e-06, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.3369e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.1381e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.9561e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([6.0489e-06, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.4895e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.9319e-06, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([1.5059e-04, 9.9985e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 58.537% (loss: 4.403) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0215, 0.9785], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1082, 0.8918], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9357, 0.0643], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9253, 0.0747], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9934, 0.0066], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9899, 0.0101], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9672, 0.0328], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9670, 0.0330], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9380, 0.0620], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9698, 0.0302], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5200, 0.4800], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7331, 0.2669], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0382, 0.9618], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0083, 0.9917], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0025, 0.9975], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0047, 0.9953], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.6170e-04, 9.9974e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.2633e-04, 9.9937e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0306, 0.9694], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 21, Training ones: 65 / 84
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0541, 0.9459], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0577, 0.9423], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.058) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0653, 0.9347], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0558, 0.9442], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0533, 0.9467], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0566, 0.9434], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0579, 0.9421], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0603, 0.9397], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0598, 0.9402], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0627, 0.9373], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0619, 0.9381], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0599, 0.9401], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0524, 0.9476], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0644, 0.9356], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0554, 0.9446], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0605, 0.9395], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0570, 0.9430], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0600, 0.9400], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0572, 0.9428], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0576, 0.9424], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0600, 0.9400], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0582, 0.9418], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0558, 0.9442], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0570, 0.9430], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0583, 0.9417], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0581, 0.9419], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 0, Training ones: 20 / 26
INFO:root:[    5] train: 55.660% test: 76.923%
INFO:root:Accuracy: 0.55238, Precision: 0.60714, Recall: 0.78462, F1: 0.68456
INFO:root:Val Accuracy: 0.76923, Precision: 0.76923, Recall: 1.00000, F1: 0.86957
INFO:root:F1: 0.86957 did not improve from 0.8695651888847351
INFO:root:Epoch 6
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9971, 0.0029], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9887, 0.0113], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 2.935) [mem: 2.63e+04]
Training min-max: tensor(0.0886) tensor(1.)
Training Output torch.Size([2]) tensor([0.9831, 0.0169], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2696, 0.7304], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5683, 0.4317], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3020, 0.6980], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3357, 0.6643], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5634, 0.4366], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0612, 0.9388], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1785, 0.8215], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1792, 0.8208], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0133, 0.9867], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1791, 0.8209], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7458, 0.2542], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6974, 0.3026], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2580, 0.7420], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8714, 0.1286], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8212, 0.1788], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9468, 0.0532], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9478, 0.0522], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9608, 0.0392], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9923, 0.0077], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9812, 0.0188], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9421, 0.0579], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4927, 0.5073], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7070, 0.2930], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([0.0128, 0.9872], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0125, 0.9875], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.1875e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.4403e-06, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.0140e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.9597e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.4199e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.6268e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.0857e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.0253e-06, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.2196e-04, 9.9988e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3928e-04, 9.9986e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0245, 0.9755], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0219, 0.9781], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1073, 0.8927], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0768, 0.9232], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 45.238% (loss: 2.399) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8853, 0.1147], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8873, 0.1127], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9146, 0.0854], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9077, 0.0923], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4199, 0.5801], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4431, 0.5569], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5011, 0.4989], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4965, 0.5035], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6236, 0.3764], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6222, 0.3778], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2130, 0.7870], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1924, 0.8076], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1566, 0.8434], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2134, 0.7866], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5472, 0.4528], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5894, 0.4106], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5015, 0.4985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5675, 0.4325], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2740, 0.7260], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2794, 0.7206], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0528, 0.9472], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0703, 0.9297], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0074, 0.9926], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0048, 0.9952], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4118)
Training Output torch.Size([2]) tensor([1.7709e-04, 9.9982e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.9373e-04, 9.9981e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7644)
Training Output torch.Size([2]) tensor([8.9966e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.3142e-06, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.4764e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.4250e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.1069e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0599e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9991)
Training Output torch.Size([2]) tensor([3.5944e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.6994e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.3225e-05, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3433e-05, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.1148e-05, 9.9994e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.3192e-05, 9.9996e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([8.9519e-04, 9.9910e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 53.659% (loss: 3.510) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0907, 0.9093], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0845, 0.9155], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9816, 0.0184], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9733, 0.0267], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9941e-01, 5.8512e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9912e-01, 8.7746e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9982, 0.0018], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9906e-01, 9.3560e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9961e-01, 3.9061e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9971e-01, 2.8525e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9982, 0.0018], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9981, 0.0019], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9113, 0.0887], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9105, 0.0895], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9196)
Training Output torch.Size([2]) tensor([0.3438, 0.6562], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3298, 0.6702], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1255, 0.8745], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1219, 0.8781], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0232, 0.9768], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0225, 0.9775], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0145, 0.9855], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0158, 0.9842], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0327, 0.9673], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 39, Training ones: 65 / 66
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0212, 0.9788], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0211, 0.9789], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.021) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0207, 0.9793], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0212, 0.9788], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0212, 0.9788], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0212, 0.9788], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0211, 0.9789], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0209, 0.9791], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0209, 0.9791], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0208, 0.9792], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0208, 0.9792], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0210, 0.9790], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0213, 0.9787], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0208, 0.9792], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0212, 0.9788], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0209, 0.9791], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0211, 0.9789], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0209, 0.9791], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0210, 0.9790], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0211, 0.9789], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0208, 0.9792], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0209, 0.9791], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0212, 0.9788], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0211, 0.9789], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0210, 0.9790], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0210, 0.9790], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 0, Training ones: 20 / 26
INFO:root:[    6] train: 51.887% test: 76.923%
INFO:root:Accuracy: 0.51429, Precision: 0.60606, Recall: 0.61538, F1: 0.61069
INFO:root:Val Accuracy: 0.76923, Precision: 0.76923, Recall: 1.00000, F1: 0.86957
INFO:root:F1: 0.86957 did not improve from 0.8695651888847351
INFO:root:Epoch 7
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.0256, 0.9744], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0227, 0.9773], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 1.906) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0402, 0.9598], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0389, 0.9611], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0290, 0.9710], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0291, 0.9709], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0114, 0.9886], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0115, 0.9885], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0023, 0.9977], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0023, 0.9977], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0064, 0.9936], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0056, 0.9944], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0089, 0.9911], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0083, 0.9917], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0210, 0.9790], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0231, 0.9769], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0855, 0.9145], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0800, 0.9200], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1276, 0.8724], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1198, 0.8802], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1170, 0.8830], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1165, 0.8835], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0534, 0.9466], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0523, 0.9477], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0618, 0.9382], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0608, 0.9392], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1478, 0.8522], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0783, 0.9217], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1171, 0.8829], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5530, 0.4470], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1778, 0.8222], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1076, 0.8924], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1547, 0.8453], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1679, 0.8321], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1235, 0.8765], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1440, 0.8560], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 57.143% (loss: 2.015) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.2122, 0.7878], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2570, 0.7430], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5430, 0.4570], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5408, 0.4592], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3937, 0.6063], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3895, 0.6105], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7176, 0.2824], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4633, 0.5367], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0259, 0.9741], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0287, 0.9713], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.0353) tensor(1.)
Training Output torch.Size([2]) tensor([0.2202, 0.7798], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0683, 0.9317], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9973, 0.0027], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9978, 0.0022], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9927e-01, 7.2578e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9930e-01, 7.0004e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7351, 0.2649], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7184, 0.2816], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.0157) tensor(0.6471)
Training Output torch.Size([2]) tensor([1.3765e-05, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.0346e-05, 9.9993e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0862e-09, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.7561e-09, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9998)
Training Output torch.Size([2]) tensor([2.7504e-13, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.7290e-13, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.5330e-17, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0787e-16, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.4797e-18, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.9715e-19, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.0275) tensor(0.5373)
Training Output torch.Size([2]) tensor([4.6757e-17, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.3924e-17, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.4583e-14, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.7999e-14, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.0431) tensor(1.)
Training Output torch.Size([2]) tensor([1.1318e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.6965e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.3140e-04, 9.9957e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.7850e-04, 9.9962e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1735, 0.8265], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1434, 0.8566], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9921e-01, 7.9473e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9924e-01, 7.6207e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 59.756% (loss: 3.569) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9981e-01, 1.8778e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9982e-01, 1.8414e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9983e-01, 1.7031e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9990e-01, 9.5728e-05], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9961, 0.0039], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9966, 0.0034], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7417, 0.2583], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6259, 0.3741], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5452, 0.4548], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4983, 0.5017], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.0392) tensor(0.6863)
Training Output torch.Size([2]) tensor([0.2252, 0.7748], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1546, 0.8454], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0315, 0.9685], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0168, 0.9832], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0092, 0.9908], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0210, 0.9790], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0238, 0.9762], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0339, 0.9661], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0198, 0.9802], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0193, 0.9807], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8937)
Training Output torch.Size([2]) tensor([0.0773, 0.9227], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0579, 0.9421], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.3255) tensor(1.)
Training Output torch.Size([2]) tensor([0.2038, 0.7962], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 21, Training ones: 65 / 84
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3275, 0.6725], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3335, 0.6665], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.401) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3460, 0.6540], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3293, 0.6707], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3227, 0.6773], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3317, 0.6683], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3342, 0.6658], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3378, 0.6622], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3355, 0.6645], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3411, 0.6589], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3408, 0.6592], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3372, 0.6628], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3244, 0.6756], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3425, 0.6575], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3304, 0.6696], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3380, 0.6620], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3325, 0.6675], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3367, 0.6633], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3329, 0.6671], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3333, 0.6667], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3382, 0.6618], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3356, 0.6644], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3308, 0.6692], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3330, 0.6670], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3350, 0.6650], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3348, 0.6652], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 0, Training ones: 20 / 26
INFO:root:[    7] train: 61.321% test: 76.923%
INFO:root:Accuracy: 0.60952, Precision: 0.64286, Recall: 0.83077, F1: 0.72483
INFO:root:Val Accuracy: 0.76923, Precision: 0.76923, Recall: 1.00000, F1: 0.86957
INFO:root:F1: 0.86957 did not improve from 0.8695651888847351
INFO:root:Epoch 8
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3041, 0.6959], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3359, 0.6641], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 0.727) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5620, 0.4380], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5742, 0.4258], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5649, 0.4351], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6175, 0.3825], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4374, 0.5626], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4710, 0.5290], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1930, 0.8070], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1480, 0.8520], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1328, 0.8672], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1047, 0.8953], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2121, 0.7879], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2063, 0.7937], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1594, 0.8406], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1749, 0.8251], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2094, 0.7906], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1789, 0.8211], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1703, 0.8297], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2018, 0.7982], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2738, 0.7262], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2728, 0.7272], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4394, 0.5606], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4295, 0.5705], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5107, 0.4893], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4637, 0.5363], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4208, 0.5792], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3626, 0.6374], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4980)
Training Output torch.Size([2]) tensor([0.3227, 0.6773], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3216, 0.6784], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2618, 0.7382], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3022, 0.6978], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3317, 0.6683], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3741, 0.6259], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3985, 0.6015], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4960, 0.5040], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4108, 0.5892], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5181, 0.4819], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5489, 0.4511], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5092, 0.4908], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3429, 0.6571], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5305, 0.4695], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 47.619% (loss: 0.852) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4955, 0.5045], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3670, 0.6330], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.5558, 0.4442], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5279, 0.4721], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4260, 0.5740], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4044, 0.5956], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4395, 0.5605], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3948, 0.6052], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3505, 0.6495], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3652, 0.6348], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8983)
Training Output torch.Size([2]) tensor([0.5038, 0.4962], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4625, 0.5375], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7956, 0.2044], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6448, 0.3552], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6034, 0.3966], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8044, 0.1956], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6785, 0.3215], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5698, 0.4302], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3204, 0.6796], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2203, 0.7797], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0247, 0.9753], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0350, 0.9650], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.5386e-04, 9.9945e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.4118e-04, 9.9936e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0699e-05, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.2235e-06, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.9813e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0088e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9975)
Training Output torch.Size([2]) tensor([1.2408e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([9.7772e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.4764e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1818e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7373)
Training Output torch.Size([2]) tensor([0.1901, 0.8099], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1028, 0.8972], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.5548e-04, 9.9944e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.6281e-04, 9.9934e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.1016e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.0655e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.0811e-05, 9.9991e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.1722e-05, 9.9992e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 52.439% (loss: 4.707) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8090, 0.1910], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7823, 0.2177], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([1.0000e+00, 4.0041e-09], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 3.9885e-09], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 1.5134e-11], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.5075e-11], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 7.7321e-10], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 7.5530e-10], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 3.1618e-08], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 3.1991e-08], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9994e-01, 5.5785e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9995e-01, 4.9860e-05], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9479, 0.0521], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9453, 0.0547], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1154, 0.8846], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1162, 0.8838], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4542, 0.5458], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4528, 0.5472], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1509, 0.8491], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1514, 0.8486], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4052, 0.5948], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3986, 0.6014], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9739, 0.0261], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 33, Training ones: 65 / 72
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9470, 0.0530], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9448, 0.0552], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: 2.917) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9408, 0.0592], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9463, 0.0537], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9485, 0.0515], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9455, 0.0545], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9445, 0.0555], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9433, 0.0567], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9440, 0.0560], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9422, 0.0578], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9421, 0.0579], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9434, 0.0566], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9488, 0.0512], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9417, 0.0583], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9461, 0.0539], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9432, 0.0568], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9453, 0.0547], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9437, 0.0563], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9449, 0.0551], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9449, 0.0551], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9430, 0.0570], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9442, 0.0558], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9458, 0.0542], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9450, 0.0550], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9442, 0.0558], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9443, 0.0557], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[    8] train: 50.943% test: 23.077%
INFO:root:Accuracy: 0.51429, Precision: 0.59722, Recall: 0.66154, F1: 0.62774
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 9
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9769, 0.0231], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9451, 0.0549], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 1.912) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5535, 0.4465], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5559, 0.4441], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.0168, 0.9832], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0266, 0.9734], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7409)
Training Output torch.Size([2]) tensor([2.4974e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.6481e-05, 9.9997e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.3652e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0716e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.6813e-09, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1013e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7645)
Training Output torch.Size([2]) tensor([9.2764e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([8.6804e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2784) tensor(1.)
Training Output torch.Size([2]) tensor([1.5968e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0889e-05, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([7.5984e-04, 9.9924e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0345, 0.9655], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0365, 0.9635], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6862, 0.3138], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8008, 0.1992], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9450, 0.0550], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8284, 0.1716], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1000, 0.9000], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2681, 0.7319], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0034, 0.9966], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0076, 0.9924], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.1706e-04, 9.9988e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1301e-04, 9.9989e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.4119e-05, 9.9993e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.4264e-05, 9.9993e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9855e-04, 9.9900e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.3628e-04, 9.9906e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1950, 0.8050], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2531, 0.7469], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3948, 0.6052], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3937, 0.6063], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9830, 0.0170], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9836, 0.0164], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9821, 0.0179], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9847, 0.0153], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 50.000% (loss: 0.017) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.8550)
Training Output torch.Size([2]) tensor([9.9902e-01, 9.8117e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9990, 0.0010], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9988, 0.0012], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9983, 0.0017], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9839, 0.0161], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9636, 0.0364], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3015, 0.6985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3134, 0.6866], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1073, 0.8927], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1153, 0.8847], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2264, 0.7736], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1256, 0.8744], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4642, 0.5358], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4118, 0.5882], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8761, 0.1239], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8596, 0.1404], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9318, 0.0682], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9327, 0.0673], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9068, 0.0932], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9071, 0.0929], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7513, 0.2487], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7420, 0.2580], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6941)
Training Output torch.Size([2]) tensor([0.3291, 0.6709], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3387, 0.6613], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7841)
Training Output torch.Size([2]) tensor([0.0562, 0.9438], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0686, 0.9314], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8242)
Training Output torch.Size([2]) tensor([0.0059, 0.9941], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0054, 0.9946], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0040, 0.9960], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.9783e-04, 9.9920e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.2991e-04, 9.9907e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0051, 0.9949], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0083, 0.9917], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0030, 0.9970], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0058, 0.9942], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0181, 0.9819], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0185, 0.9815], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 50.000% (loss: 2.005) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2794, 0.7206], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2509, 0.7491], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9749, 0.0251], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9830, 0.0170], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.2875e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.2286e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.5848e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([8.8330e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8985, 0.1015], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9990, 0.0010], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8609)
Training Output torch.Size([2]) tensor([9.9908e-01, 9.1819e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9969, 0.0031], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.3925e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.6755e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.1301e-05, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.8256e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9994e-01, 5.8519e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9994e-01, 6.3028e-05], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9817, 0.0183], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9964e-01, 3.5732e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8736)
Training Output torch.Size([2]) tensor([1.0000e+00, 9.4708e-12], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.0423e-10], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 2.3953e-10], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 39, Training ones: 65 / 66
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9977, 0.0023], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9980, 0.0020], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: 6.141) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9985, 0.0015], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9978, 0.0022], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9976, 0.0024], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9979, 0.0021], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9981, 0.0019], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9982, 0.0018], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9981, 0.0019], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9984, 0.0016], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9984, 0.0016], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9982, 0.0018], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9973, 0.0027], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9984, 0.0016], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9978, 0.0022], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9982, 0.0018], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9979, 0.0021], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9982, 0.0018], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9980, 0.0020], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9980, 0.0020], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9983, 0.0017], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9981, 0.0019], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9979, 0.0021], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9980, 0.0020], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9981, 0.0019], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9981, 0.0019], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[    9] train: 45.283% test: 23.077%
INFO:root:Accuracy: 0.45714, Precision: 0.56061, Recall: 0.56923, F1: 0.56489
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 10
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9974, 0.0026], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9975, 0.0025], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 2.970) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.1552e-09, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.4097e-09, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0374e-16, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0133e-16, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.6631e-22, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([8.6441e-22, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.1716e-25, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.9166e-25, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.3176) tensor(1.)
Training Output torch.Size([2]) tensor([1.1272e-22, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3282e-22, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.7614e-15, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([6.2938e-15, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.1134e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.5135e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9957, 0.0043], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9955, 0.0045], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 2.8737e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.2168e-07], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 5.2012e-10], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 6.1226e-10], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9998e-01, 1.5251e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 1.7890e-05], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2902, 0.7098], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3280, 0.6720], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0180, 0.9820], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0131, 0.9869], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0163, 0.9837], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0162, 0.9838], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0574, 0.9426], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1461, 0.8539], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9874, 0.0126], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9858, 0.0142], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9988, 0.0012], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9984, 0.0016], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9979, 0.0021], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9984, 0.0016], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9619, 0.0381], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9607, 0.0393], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1466, 0.8534], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1403, 0.8597], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 45.238% (loss: 1.942) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0149, 0.9851], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0138, 0.9862], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0119, 0.9881], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0119, 0.9881], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0144, 0.9856], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0135, 0.9865], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4196, 0.5804], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4125, 0.5875], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9921, 0.0079], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9919, 0.0081], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9919e-01, 8.0910e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9927e-01, 7.3031e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7373)
Training Output torch.Size([2]) tensor([9.9934e-01, 6.5766e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9920e-01, 7.9696e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9964, 0.0036], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9966, 0.0034], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9464, 0.0536], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9460, 0.0540], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3933, 0.6067], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3909, 0.6091], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.3102) tensor(1.)
Training Output torch.Size([2]) tensor([0.0199, 0.9801], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0198, 0.9802], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.1165e-04, 9.9959e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.0925e-04, 9.9959e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.2756e-04, 9.9987e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1569e-04, 9.9988e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.5155e-05, 9.9993e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.3646e-05, 9.9994e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([4.9942e-04, 9.9950e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.3309e-04, 9.9957e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0067, 0.9933], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0068, 0.9932], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1275, 0.8725], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1217, 0.8783], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 50.000% (loss: 1.121) [mem: 2.63e+04]
Training min-max: tensor(0.0118) tensor(1.)
Training Output torch.Size([2]) tensor([0.9746, 0.0254], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9734, 0.0266], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9999e-01, 5.5076e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 5.6162e-06], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 6.2635e-08], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 6.1664e-08], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 5.4418e-08], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 5.5275e-08], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 5.2539e-08], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 4.8971e-08], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 1.1911e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.1726e-06], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9988e-01, 1.1683e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9988e-01, 1.2030e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9878, 0.0122], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9869, 0.0131], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9012)
Training Output torch.Size([2]) tensor([0.5074, 0.4926], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5209, 0.4791], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0305, 0.9695], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0305, 0.9695], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0228, 0.9772], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0209, 0.9791], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1781, 0.8219], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 46, Training ones: 65 / 59
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2661, 0.7339], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2661, 0.7339], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.309) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2655, 0.7345], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2661, 0.7339], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2663, 0.7337], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2659, 0.7341], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2659, 0.7341], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2657, 0.7343], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2655, 0.7345], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2655, 0.7345], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2659, 0.7341], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2659, 0.7341], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2663, 0.7337], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2655, 0.7345], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2661, 0.7339], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2657, 0.7343], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2659, 0.7341], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2663, 0.7337], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2659, 0.7341], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2663, 0.7337], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2661, 0.7339], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2663, 0.7337], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2661, 0.7339], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2663, 0.7337], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2661, 0.7339], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2663, 0.7337], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 0, Training ones: 20 / 26
INFO:root:[   10] train: 49.057% test: 76.923%
INFO:root:Accuracy: 0.48571, Precision: 0.59322, Recall: 0.53846, F1: 0.56452
INFO:root:Val Accuracy: 0.76923, Precision: 0.76923, Recall: 1.00000, F1: 0.86957
INFO:root:F1: 0.86957 did not improve from 0.8695651888847351
INFO:root:Epoch 11
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2651, 0.7349], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2477, 0.7523], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 0.852) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.9892)
Training Output torch.Size([2]) tensor([0.7096, 0.2904], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7262, 0.2738], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7372, 0.2628], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7351, 0.2649], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3580, 0.6420], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3558, 0.6442], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0306, 0.9694], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0311, 0.9689], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7620)
Training Output torch.Size([2]) tensor([0.0155, 0.9845], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0168, 0.9832], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0507, 0.9493], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0507, 0.9493], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0287, 0.9713], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0287, 0.9713], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0843, 0.9157], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0840, 0.9160], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0487, 0.9513], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0489, 0.9511], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1164, 0.8836], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1165, 0.8835], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5511, 0.4489], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5441, 0.4559], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6460, 0.3540], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6400, 0.3600], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4211, 0.5789], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4179, 0.5821], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1266, 0.8734], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1331, 0.8669], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1072, 0.8928], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1050, 0.8950], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4353)
Training Output torch.Size([2]) tensor([0.2201, 0.7799], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2198, 0.7802], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5884, 0.4116], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5894, 0.4106], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6892, 0.3108], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6906, 0.3094], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5633, 0.4367], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5619, 0.4381], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2609, 0.7391], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2614, 0.7386], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 30.952% (loss: 1.343) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2121, 0.7879], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2119, 0.7881], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3206, 0.6794], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3219, 0.6781], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2665, 0.7335], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2671, 0.7329], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3793, 0.6207], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3787, 0.6213], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6691, 0.3309], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6674, 0.3326], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7233, 0.2767], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7264, 0.2736], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6081, 0.3919], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6053, 0.3947], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.3520, 0.6480], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3528, 0.6472], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1266, 0.8734], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1268, 0.8732], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0893, 0.9107], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0882, 0.9118], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0394, 0.9606], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0367, 0.9633], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0082, 0.9918], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0083, 0.9917], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.4516e-04, 9.9925e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.3792e-04, 9.9926e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.8137e-05, 9.9995e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.2662e-05, 9.9995e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.3924e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.4111e-05, 9.9998e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.3212e-05, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.2756e-05, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.5840e-05, 9.9994e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.5840e-05, 9.9994e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.3922e-04, 9.9976e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.6669e-04, 9.9983e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.4100e-04, 9.9916e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.6937e-04, 9.9913e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.0447, 0.9553], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0437, 0.9563], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 50.000% (loss: 1.588) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.4414e-13, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.3849e-13, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.7299e-11, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([7.6858e-11, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.9751e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.9143e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9984, 0.0016], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9984, 0.0016], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 9.7042e-19], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 8.4311e-19], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 8.5229e-25], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 7.8824e-25], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 4.2496e-16], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 3.8019e-16], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9728, 0.0272], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9731, 0.0269], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6471, 0.3529], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6505, 0.3495], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0192, 0.9808], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0192, 0.9808], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0034, 0.9966], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0035, 0.9965], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 32, Training ones: 65 / 73
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.003) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 0, Training ones: 20 / 26
INFO:root:[   11] train: 49.057% test: 76.923%
INFO:root:Accuracy: 0.48571, Precision: 0.57534, Recall: 0.64615, F1: 0.60870
INFO:root:Val Accuracy: 0.76923, Precision: 0.76923, Recall: 1.00000, F1: 0.86957
INFO:root:F1: 0.86957 did not improve from 0.8695651888847351
INFO:root:Epoch 12
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0027, 0.9973], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 2.986) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0073, 0.9927], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0076, 0.9924], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0068, 0.9932], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0068, 0.9932], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0020, 0.9980], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0020, 0.9980], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.3015e-04, 9.9967e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.5350e-04, 9.9965e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.2871e-04, 9.9977e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.2983e-04, 9.9977e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.1904e-04, 9.9938e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.1273e-04, 9.9939e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0084, 0.9916], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0083, 0.9917], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0132, 0.9868], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0133, 0.9867], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0649, 0.9351], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0651, 0.9349], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.5015, 0.4985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5005, 0.4995], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7617, 0.2383], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7605, 0.2395], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7094, 0.2906], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7096, 0.2904], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3702, 0.6298], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3702, 0.6298], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3464, 0.6536], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3504, 0.6496], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6824)
Training Output torch.Size([2]) tensor([0.6049, 0.3951], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6046, 0.3954], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5533, 0.4467], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5472, 0.4528], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2600, 0.7400], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2604, 0.7396], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2504, 0.7496], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2511, 0.7489], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1051, 0.8949], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1046, 0.8954], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: 2.255) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1125, 0.8875], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1124, 0.8876], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2607, 0.7393], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2605, 0.7395], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2509, 0.7491], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2512, 0.7488], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4400, 0.5600], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4460, 0.5540], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9894)
Training Output torch.Size([2]) tensor([0.8098, 0.1902], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8138, 0.1862], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8791, 0.1209], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8808, 0.1192], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8246, 0.1754], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8241, 0.1759], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.1098) tensor(0.9647)
Training Output torch.Size([2]) tensor([0.5768, 0.4232], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5768, 0.4232], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1899, 0.8101], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1901, 0.8099], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9997)
Training Output torch.Size([2]) tensor([0.1028, 0.8972], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1027, 0.8973], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0334, 0.9666], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0335, 0.9665], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6824)
Training Output torch.Size([2]) tensor([0.0069, 0.9931], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0069, 0.9931], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.9170e-04, 9.9911e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.2178e-04, 9.9908e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.1844e-04, 9.9988e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1821e-04, 9.9988e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.5189e-05, 9.9994e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.5840e-05, 9.9994e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.1447e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.0124e-05, 9.9997e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7265)
Training Output torch.Size([2]) tensor([6.8149e-05, 9.9993e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.6311e-05, 9.9993e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.3499e-04, 9.9986e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3819e-04, 9.9986e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6824)
Training Output torch.Size([2]) tensor([2.6582e-04, 9.9973e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.7001e-04, 9.9973e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 52.439% (loss: 3.173) [mem: 2.63e+04]
Training min-max: tensor(0.0667) tensor(1.)
Training Output torch.Size([2]) tensor([0.0236, 0.9764], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0234, 0.9766], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6165)
Training Output torch.Size([2]) tensor([0.4612, 0.5388], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4447, 0.5553], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7861, 0.2139], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7852, 0.2148], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7447, 0.2553], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7421, 0.2579], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8815, 0.1185], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8831, 0.1169], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8141, 0.1859], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8189, 0.1811], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5113, 0.4887], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5111, 0.4889], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1795, 0.8205], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1841, 0.8159], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1297, 0.8703], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1298, 0.8702], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0652, 0.9348], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0678, 0.9322], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7919)
Training Output torch.Size([2]) tensor([0.0623, 0.9377], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0649, 0.9351], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.2110) tensor(1.)
Training Output torch.Size([2]) tensor([0.0982, 0.9018], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 28, Training ones: 65 / 77
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0897, 0.9103], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0899, 0.9101], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.094) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0902, 0.9098], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0898, 0.9102], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0897, 0.9103], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0900, 0.9100], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0900, 0.9100], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0900, 0.9100], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0902, 0.9098], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0902, 0.9098], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0900, 0.9100], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0899, 0.9101], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0894, 0.9106], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0904, 0.9096], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0897, 0.9103], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0901, 0.9099], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0898, 0.9102], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0901, 0.9099], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0899, 0.9101], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0899, 0.9101], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0900, 0.9100], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0898, 0.9102], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0899, 0.9101], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0898, 0.9102], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0899, 0.9101], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0899, 0.9101], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 0, Training ones: 20 / 26
INFO:root:[   12] train: 52.830% test: 76.923%
INFO:root:Accuracy: 0.52381, Precision: 0.59740, Recall: 0.70769, F1: 0.64789
INFO:root:Val Accuracy: 0.76923, Precision: 0.76923, Recall: 1.00000, F1: 0.86957
INFO:root:F1: 0.86957 did not improve from 0.8695651888847351
INFO:root:Epoch 13
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0897, 0.9103], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0900, 0.9100], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 1.251) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1333, 0.8667], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1361, 0.8639], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1135, 0.8865], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1129, 0.8871], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0518, 0.9482], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0523, 0.9477], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0113, 0.9887], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0111, 0.9889], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0067, 0.9933], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0062, 0.9938], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.2941) tensor(1.)
Training Output torch.Size([2]) tensor([0.0088, 0.9912], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0088, 0.9912], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0056, 0.9944], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0055, 0.9945], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7647)
Training Output torch.Size([2]) tensor([0.0087, 0.9913], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0085, 0.9915], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0056, 0.9944], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0060, 0.9940], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0093, 0.9907], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0091, 0.9909], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0270, 0.9730], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0275, 0.9725], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0339, 0.9661], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0353, 0.9647], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9998)
Training Output torch.Size([2]) tensor([0.0234, 0.9766], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0239, 0.9761], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0091, 0.9909], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0087, 0.9913], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0069, 0.9931], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0069, 0.9931], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0105, 0.9895], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0106, 0.9894], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0253, 0.9747], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0255, 0.9745], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0323, 0.9677], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0316, 0.9684], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7958)
Training Output torch.Size([2]) tensor([0.0591, 0.9409], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0587, 0.9413], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0655, 0.9345], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0653, 0.9347], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 59.524% (loss: 2.728) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0997, 0.9003], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1009, 0.8991], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1846, 0.8154], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1863, 0.8137], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9961)
Training Output torch.Size([2]) tensor([0.2263, 0.7737], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2249, 0.7751], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3275, 0.6725], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3265, 0.6735], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5116, 0.4884], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5126, 0.4874], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.0627) tensor(1.)
Training Output torch.Size([2]) tensor([0.6014, 0.3986], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6005, 0.3995], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5670, 0.4330], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5670, 0.4330], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([0.4531, 0.5469], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4529, 0.5471], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3128, 0.6872], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3125, 0.6875], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2908, 0.7092], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2908, 0.7092], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2330, 0.7670], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2333, 0.7667], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1366, 0.8634], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1366, 0.8634], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0362, 0.9638], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0361, 0.9639], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9961)
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([3.2377e-04, 9.9968e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.2251e-04, 9.9968e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.5731e-05, 9.9994e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.6278e-05, 9.9994e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.2806e-04, 9.9987e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.2509e-04, 9.9987e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.7857e-04, 9.9972e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.8967e-04, 9.9971e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.8612e-04, 9.9941e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.8326e-04, 9.9942e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0199, 0.9801], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0194, 0.9806], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 64.634% (loss: 1.981) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9715, 0.0285], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9726, 0.0274], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 5.5275e-08], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 5.3784e-08], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 1.4056e-09], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.3946e-09], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9999e-01, 6.9351e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 6.9351e-06], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8958, 0.1042], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8958, 0.1042], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6743)
Training Output torch.Size([2]) tensor([2.8954e-09, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.9181e-09, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.1499e-18, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.2153e-18, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.5118e-19, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.5315e-19, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.2914e-14, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.2541e-14, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.1159e-10, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.1895e-10, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0064, 0.9936], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0067, 0.9933], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 1.5899e-08], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 17, Training ones: 65 / 88
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.0000e+00, 4.1375e-12], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0000e+00, 4.1618e-12], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: 26.211) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.0000e+00, 4.2356e-12], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0000e+00, 4.1537e-12], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.0000e+00, 4.0893e-12], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0000e+00, 4.1537e-12], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.0000e+00, 4.1537e-12], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0000e+00, 4.1618e-12], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.0000e+00, 4.1699e-12], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0000e+00, 4.2356e-12], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.0000e+00, 4.1781e-12], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0000e+00, 4.2273e-12], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.0000e+00, 4.0893e-12], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0000e+00, 4.2356e-12], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.0000e+00, 4.1537e-12], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0000e+00, 4.2356e-12], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.0000e+00, 4.1537e-12], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0000e+00, 4.1699e-12], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.0000e+00, 4.1618e-12], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0000e+00, 4.1618e-12], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.0000e+00, 4.2356e-12], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0000e+00, 4.1618e-12], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.0000e+00, 4.1537e-12], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0000e+00, 4.1537e-12], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.0000e+00, 4.2191e-12], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0000e+00, 4.1699e-12], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   13] train: 62.264% test: 23.077%
INFO:root:Accuracy: 0.62857, Precision: 0.64773, Recall: 0.87692, F1: 0.74510
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 14
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 4.1537e-12], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 4.2439e-12], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 13.102) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.9953)
Training Output torch.Size([2]) tensor([1.0000e+00, 5.3979e-10], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 5.4190e-10], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9986e-01, 1.3579e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9986e-01, 1.3552e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0101, 0.9899], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0101, 0.9899], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.7198e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([6.6156e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.5196e-09, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.5196e-09, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9312e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9312e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.1653e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.1653e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.4104e-04, 9.9946e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.4315e-04, 9.9946e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0255, 0.9745], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0256, 0.9744], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8356, 0.1644], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8353, 0.1647], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9691, 0.0309], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9692, 0.0308], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9086, 0.0914], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9085, 0.0915], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2366, 0.7634], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2355, 0.7645], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0020, 0.9980], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.7744e-04, 9.9982e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.7097e-04, 9.9983e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.7813e-04, 9.9982e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.6315e-04, 9.9984e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.5380e-04, 9.9905e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0027, 0.9973], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0027, 0.9973], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0280, 0.9720], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0272, 0.9728], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9971)
Training Output torch.Size([2]) tensor([0.0469, 0.9531], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0453, 0.9547], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: 3.076) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2242, 0.7758], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2261, 0.7739], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8103, 0.1897], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8115, 0.1885], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9188, 0.0812], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9194, 0.0806], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8803, 0.1197], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8803, 0.1197], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6373, 0.3627], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6400, 0.3600], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1895, 0.8105], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1892, 0.8108], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1024, 0.8976], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1031, 0.8969], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1189, 0.8811], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1195, 0.8805], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0765, 0.9235], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0765, 0.9235], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9208)
Training Output torch.Size([2]) tensor([0.0936, 0.9064], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0948, 0.9052], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0689, 0.9311], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0687, 0.9313], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0306, 0.9694], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0308, 0.9692], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0078, 0.9922], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0081, 0.9919], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.7640e-04, 9.9902e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.7449e-04, 9.9903e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.4297e-04, 9.9966e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.4096e-04, 9.9966e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.3110e-04, 9.9987e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3672e-04, 9.9986e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.0008e-04, 9.9980e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.9949e-04, 9.9980e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.7857e-04, 9.9972e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.8629e-04, 9.9971e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.9938e-04, 9.9960e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.7666e-04, 9.9962e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0020, 0.9980], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0020, 0.9980], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 52.439% (loss: 3.110) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0337, 0.9663], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0335, 0.9665], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7078, 0.2922], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7070, 0.2930], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9380, 0.0620], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9379, 0.0621], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9036, 0.0964], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9038, 0.0962], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9646, 0.0354], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9643, 0.0357], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.0510) tensor(0.7176)
Training Output torch.Size([2]) tensor([0.9205, 0.0795], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9197, 0.0803], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5667, 0.4333], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5660, 0.4340], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0759, 0.9241], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0759, 0.9241], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6666)
Training Output torch.Size([2]) tensor([0.0347, 0.9653], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0346, 0.9654], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0055, 0.9945], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0055, 0.9945], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9529)
Training Output torch.Size([2]) tensor([0.0097, 0.9903], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0098, 0.9902], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1579, 0.8421], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 32, Training ones: 65 / 73
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1247, 0.8753], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1247, 0.8753], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.133) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1246, 0.8754], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1247, 0.8753], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1247, 0.8753], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1246, 0.8754], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1247, 0.8753], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1246, 0.8754], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1247, 0.8753], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1246, 0.8754], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1246, 0.8754], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1247, 0.8753], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1247, 0.8753], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1246, 0.8754], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1246, 0.8754], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1246, 0.8754], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1247, 0.8753], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1246, 0.8754], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1247, 0.8753], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1246, 0.8754], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1247, 0.8753], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1247, 0.8753], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1247, 0.8753], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1247, 0.8753], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1247, 0.8753], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1246, 0.8754], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 0, Training ones: 20 / 26
INFO:root:[   14] train: 50.943% test: 76.923%
INFO:root:Accuracy: 0.50476, Precision: 0.58904, Recall: 0.66154, F1: 0.62319
INFO:root:Val Accuracy: 0.76923, Precision: 0.76923, Recall: 1.00000, F1: 0.86957
INFO:root:F1: 0.86957 did not improve from 0.8695651888847351
INFO:root:Epoch 15
Training min-max: tensor(0.) tensor(0.9647)
Training Output torch.Size([2]) tensor([0.1252, 0.8748], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1246, 0.8754], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 1.108) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4762, 0.5238], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4766, 0.5234], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4410, 0.5590], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4407, 0.5593], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1856, 0.8144], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1858, 0.8142], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.0321, 0.9679], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0321, 0.9679], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0233, 0.9767], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0233, 0.9767], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0523, 0.9477], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0523, 0.9477], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0660, 0.9340], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0660, 0.9340], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1711, 0.8289], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1697, 0.8303], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2200, 0.7800], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2180, 0.7820], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.0431) tensor(1.)
Training Output torch.Size([2]) tensor([0.4710, 0.5290], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4656, 0.5344], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8795, 0.1205], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8790, 0.1210], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9424, 0.0576], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9418, 0.0582], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9015, 0.0985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8982, 0.1018], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6325, 0.3675], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6354, 0.3646], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1999, 0.8001], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1948, 0.8052], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1169, 0.8831], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1157, 0.8843], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1306, 0.8694], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1310, 0.8690], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1008, 0.8992], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1006, 0.8994], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1218, 0.8782], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1215, 0.8785], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1073, 0.8927], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1076, 0.8924], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 45.238% (loss: 2.230) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1317, 0.8683], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1325, 0.8675], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2117, 0.7883], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2106, 0.7894], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2318, 0.7682], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2310, 0.7690], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3169, 0.6831], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3171, 0.6829], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5001, 0.4999], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5023, 0.4977], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6218, 0.3782], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6105, 0.3895], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2284, 0.7716], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2189, 0.7811], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5273, 0.4727], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5308, 0.4692], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7371)
Training Output torch.Size([2]) tensor([0.2444, 0.7556], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2471, 0.7529], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.0078) tensor(0.4078)
Training Output torch.Size([2]) tensor([0.4632, 0.5368], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4601, 0.5399], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3101, 0.6899], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3072, 0.6928], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0438, 0.9562], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0398, 0.9602], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.0582e-04, 9.9979e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.4062e-04, 9.9976e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.6327e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.9897e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.8846e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.9520e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.2556e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.3181e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5450)
Training Output torch.Size([2]) tensor([0.0038, 0.9962], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0048, 0.9952], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0353) tensor(1.)
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.8886e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.8520e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.4808e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.5634e-05, 9.9996e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 54.878% (loss: 5.121) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3998, 0.6002], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4340, 0.5660], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 1.0408e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.3125e-07], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 1.0613e-09], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 9.3472e-10], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 5.7815e-08], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 5.6808e-08], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 4.5304e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 4.4952e-06], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.0784) tensor(1.)
Training Output torch.Size([2]) tensor([0.9700, 0.0300], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9696, 0.0304], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.1137e-04, 9.9969e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.2758e-04, 9.9967e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.0104e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.0661e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5765)
Training Output torch.Size([2]) tensor([3.9825e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.9670e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.7156e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.7668e-06, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.4182e-04, 9.9916e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.6261e-04, 9.9914e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5633)
Training Output torch.Size([2]) tensor([0.2480, 0.7520], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 24, Training ones: 65 / 81
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5310, 0.4690], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5305, 0.4695], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: 0.757) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5288, 0.4712], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5307, 0.4693], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5315, 0.4685], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5305, 0.4695], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5302, 0.4698], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5300, 0.4700], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5300, 0.4700], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5295, 0.4705], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5293, 0.4707], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5297, 0.4703], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5317, 0.4683], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5290, 0.4710], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5307, 0.4693], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5300, 0.4700], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5305, 0.4695], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5302, 0.4698], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5305, 0.4695], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5302, 0.4698], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5297, 0.4703], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5300, 0.4700], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5310, 0.4690], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5305, 0.4695], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5305, 0.4695], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5305, 0.4695], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   15] train: 52.830% test: 23.077%
INFO:root:Accuracy: 0.52381, Precision: 0.59259, Recall: 0.73846, F1: 0.65753
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 16
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5339, 0.4661], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5395, 0.4605], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 0.690) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1978, 0.8022], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1986, 0.8014], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0045, 0.9955], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0049, 0.9951], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.9825e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.9670e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.2624e-09, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.3635e-09, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.3983e-09, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.2426e-09, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.5657e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.6091e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.9794e-04, 9.9980e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.9036e-04, 9.9981e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1413, 0.8587], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1421, 0.8579], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2524, 0.7476], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2505, 0.7495], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6168, 0.3832], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6164, 0.3836], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4871, 0.5129], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4841, 0.5159], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1279, 0.8721], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1280, 0.8720], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0092, 0.9908], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0088, 0.9912], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.0145e-04, 9.9980e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.9148e-04, 9.9981e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.6950e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.5516e-05, 9.9997e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.6224e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.6481e-05, 9.9997e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.3316e-04, 9.9987e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3712e-04, 9.9986e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.5386e-04, 9.9945e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.1226e-04, 9.9949e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0062, 0.9938], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0061, 0.9939], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9961)
Training Output torch.Size([2]) tensor([0.0173, 0.9827], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0171, 0.9829], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 59.524% (loss: 4.062) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1031, 0.8969], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1057, 0.8943], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5708, 0.4292], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5715, 0.4285], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7451, 0.2549], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7445, 0.2555], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6729, 0.3271], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6730, 0.3270], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4482, 0.5518], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4482, 0.5518], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4202, 0.5798], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4204, 0.5796], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5084, 0.4916], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5082, 0.4918], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5245, 0.4755], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5248, 0.4752], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4466, 0.5534], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4460, 0.5540], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4630, 0.5370], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4637, 0.5363], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4015, 0.5985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4017, 0.5983], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2789, 0.7211], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2791, 0.7209], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1307, 0.8693], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1300, 0.8700], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0252, 0.9748], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0253, 0.9747], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0120, 0.9880], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0122, 0.9878], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.0723e-04, 9.9919e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.4429e-04, 9.9916e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.7009e-04, 9.9953e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.4509e-04, 9.9955e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0023, 0.9977], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 59.756% (loss: 3.017) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0638, 0.9362], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0625, 0.9375], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8480, 0.1520], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8456, 0.1544], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8230, 0.1770], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8230, 0.1770], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0027, 0.9973], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0700, 0.9300], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0745, 0.9255], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0238, 0.9762], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0238, 0.9762], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8005)
Training Output torch.Size([2]) tensor([0.1153, 0.8847], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1159, 0.8841], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9823, 0.0177], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9820, 0.0180], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2863) tensor(1.)
Training Output torch.Size([2]) tensor([0.9209, 0.0791], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9209, 0.0791], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9971e-01, 2.8854e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9971e-01, 2.8840e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9553)
Training Output torch.Size([2]) tensor([0.9973, 0.0027], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 25, Training ones: 65 / 80
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5098, 0.4902], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5103, 0.4897], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: 0.713) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5103, 0.4897], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5103, 0.4897], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5098, 0.4902], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5103, 0.4897], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5103, 0.4897], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5107, 0.4893], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5107, 0.4893], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5103, 0.4897], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5107, 0.4893], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5103, 0.4897], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5098, 0.4902], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5107, 0.4893], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5103, 0.4897], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5103, 0.4897], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5103, 0.4897], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5103, 0.4897], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5103, 0.4897], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5103, 0.4897], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5103, 0.4897], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5103, 0.4897], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5103, 0.4897], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5103, 0.4897], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5103, 0.4897], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5103, 0.4897], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   16] train: 54.717% test: 23.077%
INFO:root:Accuracy: 0.55238, Precision: 0.61250, Recall: 0.75385, F1: 0.67586
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 17
Training min-max: tensor(0.) tensor(0.7761)
Training Output torch.Size([2]) tensor([0.5127, 0.4873], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5088, 0.4912], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 0.697) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1790, 0.8210], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1798, 0.8202], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0624, 0.9376], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0626, 0.9374], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0087, 0.9913], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0088, 0.9912], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.3182e-04, 9.9957e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.2909e-04, 9.9957e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.7602e-05, 9.9993e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.6961e-05, 9.9993e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.6293e-05, 9.9995e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.5420e-05, 9.9995e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.6372e-05, 9.9996e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.6479e-05, 9.9996e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.3180e-04, 9.9987e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3110e-04, 9.9987e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.2825e-04, 9.9957e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.1488e-04, 9.9959e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9982)
Training Output torch.Size([2]) tensor([0.0046, 0.9954], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0046, 0.9954], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1190, 0.8810], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1193, 0.8807], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4047, 0.5953], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4038, 0.5962], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3901, 0.6099], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3919, 0.6081], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1328, 0.8672], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1317, 0.8683], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1359, 0.8641], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1355, 0.8645], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3584, 0.6416], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3544, 0.6456], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8624, 0.1376], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8649, 0.1351], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9317, 0.0683], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9294, 0.0706], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8615, 0.1385], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8603, 0.1397], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4743, 0.5257], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4743, 0.5257], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 50.000% (loss: 0.746) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3845, 0.6155], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3802, 0.6198], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5742, 0.4258], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5755, 0.4245], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4756, 0.5244], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4671, 0.5329], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6326, 0.3674], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6390, 0.3610], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5375, 0.4625], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5390, 0.4610], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2469, 0.7531], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2463, 0.7537], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2142, 0.7858], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2144, 0.7856], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3462, 0.6538], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3461, 0.6539], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2998, 0.7002], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3015, 0.6985], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4324, 0.5676], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4336, 0.5664], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3759, 0.6241], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3749, 0.6251], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2017, 0.7983], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2019, 0.7981], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0621, 0.9379], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0622, 0.9378], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0116, 0.9884], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0117, 0.9883], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0053, 0.9947], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0053, 0.9947], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.5776e-04, 9.9904e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.4224e-04, 9.9906e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 57.317% (loss: 3.177) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0065, 0.9935], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0066, 0.9934], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0424, 0.9576], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0412, 0.9588], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0919, 0.9081], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0959, 0.9041], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.2510) tensor(1.)
Training Output torch.Size([2]) tensor([0.3170, 0.6830], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3162, 0.6838], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8187, 0.1813], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8239, 0.1761], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9118, 0.0882], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9144, 0.0856], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8380, 0.1620], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8347, 0.1653], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8455)
Training Output torch.Size([2]) tensor([0.5112, 0.4888], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5093, 0.4907], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.2980) tensor(1.)
Training Output torch.Size([2]) tensor([0.1849, 0.8151], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1849, 0.8151], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0528, 0.9472], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0520, 0.9480], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0351, 0.9649], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0356, 0.9644], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0478, 0.9522], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 22, Training ones: 65 / 83
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0420, 0.9580], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0419, 0.9581], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.043) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0418, 0.9582], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0420, 0.9580], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0420, 0.9580], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0419, 0.9581], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0419, 0.9581], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0419, 0.9581], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0419, 0.9581], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0418, 0.9582], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0419, 0.9581], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0419, 0.9581], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0421, 0.9579], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0419, 0.9581], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0420, 0.9580], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0419, 0.9581], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0420, 0.9580], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0419, 0.9581], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0419, 0.9581], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0419, 0.9581], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0419, 0.9581], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0419, 0.9581], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0420, 0.9580], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0419, 0.9581], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0419, 0.9581], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0419, 0.9581], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 0, Training ones: 20 / 26
INFO:root:[   17] train: 54.717% test: 76.923%
INFO:root:Accuracy: 0.54286, Precision: 0.60241, Recall: 0.76923, F1: 0.67568
INFO:root:Val Accuracy: 0.76923, Precision: 0.76923, Recall: 1.00000, F1: 0.86957
INFO:root:F1: 0.86957 did not improve from 0.8695651888847351
INFO:root:Epoch 18
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0430, 0.9570], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0419, 0.9581], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 1.608) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0649, 0.9351], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0649, 0.9351], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0568, 0.9432], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0558, 0.9442], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0253, 0.9747], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0257, 0.9743], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0058, 0.9942], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0060, 0.9940], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0031, 0.9969], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0030, 0.9970], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0039, 0.9961], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0028, 0.9972], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0029, 0.9971], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0048, 0.9952], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0043, 0.9957], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0042, 0.9958], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0085, 0.9915], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0083, 0.9917], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0287, 0.9713], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0289, 0.9711], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0443, 0.9557], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0419, 0.9581], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.0333, 0.9667], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0322, 0.9678], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0049) tensor(1.)
Training Output torch.Size([2]) tensor([0.0150, 0.9850], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0142, 0.9858], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0133, 0.9867], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0132, 0.9868], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0244, 0.9756], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0244, 0.9756], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.0006) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.0660, 0.9340], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0627, 0.9373], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0907, 0.9093], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0869, 0.9131], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1659, 0.8341], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1638, 0.8362], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1868, 0.8132], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1855, 0.8145], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 59.524% (loss: 1.681) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2779, 0.7221], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2792, 0.7208], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4619, 0.5381], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4658, 0.5342], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([0.5195, 0.4805], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5150, 0.4850], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.4843, 0.5157], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4847, 0.5153], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5582, 0.4418], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5445, 0.4555], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4962, 0.5038], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5150, 0.4850], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4326, 0.5674], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3942, 0.6058], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5177, 0.4823], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4929, 0.5071], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2333, 0.7667], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1916, 0.8084], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4232, 0.5768], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3364, 0.6636], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0870, 0.9130], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1076, 0.8924], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0748, 0.9252], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0395, 0.9605], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.4491e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.3830e-05, 9.9996e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.6692e-09, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.6273e-09, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.0151) tensor(1.)
Training Output torch.Size([2]) tensor([4.3133e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([6.9196e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.1704e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([9.0792e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9965e-01, 3.4599e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9984, 0.0016], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9969, 0.0031], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9966, 0.0034], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.9745e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.2552e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.4710e-04, 9.9985e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.8234e-05, 9.9994e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 59.756% (loss: 4.875) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9926e-01, 7.4081e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9967, 0.0033], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 1.1922e-13], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.3404e-13], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 7.0890e-16], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 5.0269e-16], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 1.0543e-12], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.0461e-12], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([1.0000e+00, 5.5692e-10], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 5.5475e-10], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9990e-01, 1.0043e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9983e-01, 1.7290e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0040, 0.9960], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.7299e-04, 9.9983e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.8200e-04, 9.9982e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0268, 0.9732], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0273, 0.9727], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0106, 0.9894], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0145, 0.9855], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2630, 0.7370], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2623, 0.7377], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9558, 0.0442], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 23, Training ones: 65 / 82
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9640, 0.0360], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9638, 0.0362], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: 3.321) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9632, 0.0368], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9640, 0.0360], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9641, 0.0359], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9639, 0.0361], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9637, 0.0363], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9636, 0.0364], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9636, 0.0364], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9634, 0.0366], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9634, 0.0366], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9635, 0.0365], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9641, 0.0359], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9634, 0.0366], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9639, 0.0361], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9635, 0.0365], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9639, 0.0361], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9636, 0.0364], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9637, 0.0363], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9638, 0.0362], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9634, 0.0366], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9636, 0.0364], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9639, 0.0361], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9637, 0.0363], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9637, 0.0363], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9636, 0.0364], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   18] train: 56.604% test: 23.077%
INFO:root:Accuracy: 0.57143, Precision: 0.62195, Recall: 0.78462, F1: 0.69388
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 19
Training min-max: tensor(0.) tensor(0.6469)
Training Output torch.Size([2]) tensor([0.9691, 0.0309], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9638, 0.0362], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 1.757) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8477, 0.1523], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8216, 0.1784], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2893, 0.7107], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2892, 0.7108], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0241, 0.9759], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0270, 0.9730], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.3732e-04, 9.9966e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.1488e-04, 9.9959e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.6484e-05, 9.9991e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.8952e-05, 9.9993e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.0235e-04, 9.9950e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.8501e-04, 9.9951e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0293, 0.9707], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0294, 0.9706], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0292, 0.9708], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0320, 0.9680], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1132, 0.8868], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1156, 0.8844], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6981, 0.3019], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6993, 0.3007], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7125, 0.2875], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7131, 0.2869], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0158) tensor(0.5020)
Training Output torch.Size([2]) tensor([0.2685, 0.7315], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2678, 0.7322], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0390, 0.9610], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0391, 0.9609], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8395)
Training Output torch.Size([2]) tensor([0.0325, 0.9675], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0332, 0.9668], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0826, 0.9174], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0825, 0.9175], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3764, 0.6236], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3775, 0.6225], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5395, 0.4605], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5366, 0.4634], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4359, 0.5641], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4359, 0.5641], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7449)
Training Output torch.Size([2]) tensor([0.1907, 0.8093], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1907, 0.8093], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 45.238% (loss: 1.657) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1555, 0.8445], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1548, 0.8452], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2393, 0.7607], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2393, 0.7607], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1998, 0.8002], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1999, 0.8001], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2975, 0.7025], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2971, 0.7029], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6025, 0.3975], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6025, 0.3975], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6770, 0.3230], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6770, 0.3230], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.0040) tensor(1.)
Training Output torch.Size([2]) tensor([0.5511, 0.4489], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5482, 0.4518], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2898, 0.7102], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2890, 0.7110], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0893, 0.9107], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0894, 0.9106], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0502, 0.9498], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0501, 0.9499], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0190, 0.9810], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0190, 0.9810], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.0048, 0.9952], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0048, 0.9952], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.0017e-04, 9.9920e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.0369e-04, 9.9920e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.3148e-04, 9.9987e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3097e-04, 9.9987e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.5859e-05, 9.9993e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.5219e-05, 9.9993e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.7198e-05, 9.9996e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.7344e-05, 9.9996e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([6.6700e-05, 9.9993e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.5666e-05, 9.9993e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.1323e-04, 9.9989e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1334e-04, 9.9989e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.8182e-04, 9.9982e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.8235e-04, 9.9982e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.1316) tensor(1.)
Training Output torch.Size([2]) tensor([7.4588e-04, 9.9925e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.3720e-04, 9.9926e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 57.317% (loss: 3.606) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0058, 0.9942], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0058, 0.9942], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0682, 0.9318], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0684, 0.9316], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1957, 0.8043], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1970, 0.8030], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5820, 0.4180], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5818, 0.4182], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9416, 0.0584], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9423, 0.0577], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9740, 0.0260], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9735, 0.0265], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9517, 0.0483], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9512, 0.0488], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8200, 0.1800], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8189, 0.1811], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4863, 0.5137], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4865, 0.5135], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1819, 0.8181], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1809, 0.8191], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.0431) tensor(1.)
Training Output torch.Size([2]) tensor([0.1137, 0.8863], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1141, 0.8859], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1233, 0.8767], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 26, Training ones: 65 / 79
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1029, 0.8971], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1028, 0.8972], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.108) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1029, 0.8971], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1028, 0.8972], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1028, 0.8972], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1028, 0.8972], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1029, 0.8971], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1029, 0.8971], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1029, 0.8971], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1030, 0.8970], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1029, 0.8971], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1029, 0.8971], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1028, 0.8972], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1029, 0.8971], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1029, 0.8971], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1030, 0.8970], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1029, 0.8971], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1029, 0.8971], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1029, 0.8971], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1029, 0.8971], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1029, 0.8971], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1029, 0.8971], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1028, 0.8972], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1029, 0.8971], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1030, 0.8970], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1030, 0.8970], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 0, Training ones: 20 / 26
INFO:root:[   19] train: 56.604% test: 76.923%
INFO:root:Accuracy: 0.56190, Precision: 0.62025, Recall: 0.75385, F1: 0.68056
INFO:root:Val Accuracy: 0.76923, Precision: 0.76923, Recall: 1.00000, F1: 0.86957
INFO:root:F1: 0.86957 did not improve from 0.8695651888847351
INFO:root:Epoch 20
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1026, 0.8974], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1028, 0.8972], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 1.192) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.8077)
Training Output torch.Size([2]) tensor([0.1386, 0.8614], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1387, 0.8613], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1206, 0.8794], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1206, 0.8794], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0607, 0.9393], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0608, 0.9392], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0159, 0.9841], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0158, 0.9842], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8155)
Training Output torch.Size([2]) tensor([0.0090, 0.9910], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0089, 0.9911], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0114, 0.9886], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0115, 0.9885], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0069, 0.9931], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0070, 0.9930], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0096, 0.9904], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0096, 0.9904], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0063, 0.9937], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0063, 0.9937], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0093, 0.9907], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0095, 0.9905], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0280, 0.9720], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0275, 0.9725], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0341, 0.9659], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0342, 0.9658], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0205, 0.9795], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0205, 0.9795], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0065, 0.9935], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0064, 0.9936], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0047, 0.9953], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0047, 0.9953], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0073, 0.9927], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0072, 0.9928], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.0392) tensor(1.)
Training Output torch.Size([2]) tensor([0.0191, 0.9809], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0193, 0.9807], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0246, 0.9754], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0239, 0.9761], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0480, 0.9520], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0478, 0.9522], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0532, 0.9468], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0532, 0.9468], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 59.524% (loss: 2.934) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0854, 0.9146], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0856, 0.9144], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1646, 0.8354], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1641, 0.8359], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2019, 0.7981], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2027, 0.7973], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2908, 0.7092], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2912, 0.7088], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4367, 0.5633], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4367, 0.5633], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6318, 0.3682], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6319, 0.3681], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6897, 0.3103], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6907, 0.3093], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6361, 0.3639], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6349, 0.3651], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4797, 0.5203], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4797, 0.5203], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4409, 0.5591], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4411, 0.5589], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2992, 0.7008], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2991, 0.7009], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5966)
Training Output torch.Size([2]) tensor([0.1191, 0.8809], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1191, 0.8809], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0082, 0.9918], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0082, 0.9918], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.9870e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.9792e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0635e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0594e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.3763e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.2241e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0199, 0.9801], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0220, 0.9780], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.2064e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.5979e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.3552e-04, 9.9986e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.4884e-04, 9.9985e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 62.195% (loss: 4.406) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1205, 0.8795], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1239, 0.8761], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9565, 0.0435], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9562, 0.0438], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8943, 0.1057], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8932, 0.1068], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5098, 0.4902], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5093, 0.4907], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5414, 0.4586], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5419, 0.4581], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.3643, 0.6357], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3639, 0.6361], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0791, 0.9209], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0792, 0.9208], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0461, 0.9539], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0455, 0.9545], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0977, 0.9023], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0981, 0.9019], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0552, 0.9448], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0552, 0.9448], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1229, 0.8771], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1225, 0.8775], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5927, 0.4073], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 15, Training ones: 65 / 90
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7402, 0.2598], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7402, 0.2598], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: 1.348) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7409, 0.2591], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7409, 0.2591], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7402, 0.2598], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7402, 0.2598], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7402, 0.2598], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7409, 0.2591], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7402, 0.2598], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7409, 0.2591], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7409, 0.2591], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7409, 0.2591], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7409, 0.2591], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7402, 0.2598], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7402, 0.2598], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7409, 0.2591], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7402, 0.2598], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7409, 0.2591], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7409, 0.2591], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7402, 0.2598], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7409, 0.2591], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7402, 0.2598], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7402, 0.2598], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7409, 0.2591], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7409, 0.2591], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7409, 0.2591], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   20] train: 58.491% test: 23.077%
INFO:root:Accuracy: 0.59048, Precision: 0.62222, Recall: 0.86154, F1: 0.72258
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 21
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7402, 0.2598], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7402, 0.2598], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 0.824) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5176, 0.4824], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5156, 0.4844], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.3922)
Training Output torch.Size([2]) tensor([0.0767, 0.9233], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0767, 0.9233], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.4078e-05, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.4272e-05, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.3379e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3353e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.2223e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.2538e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.1784e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.2229e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.3788e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.2999e-06, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.4268e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.4302e-05, 9.9997e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.8841e-04, 9.9941e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.8156e-04, 9.9942e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0207, 0.9793], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0207, 0.9793], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0977, 0.9023], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0977, 0.9023], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1166, 0.8834], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1166, 0.8834], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0530, 0.9470], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0531, 0.9469], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0689, 0.9311], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0688, 0.9312], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1874, 0.8126], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1874, 0.8126], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5699, 0.4301], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5708, 0.4292], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7070, 0.2930], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7066, 0.2934], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6406, 0.3594], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6406, 0.3594], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4102, 0.5898], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4121, 0.5879], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 45.238% (loss: 0.889) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3826, 0.6174], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3826, 0.6174], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4976, 0.5024], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4980, 0.5020], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4576, 0.5424], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4562, 0.5438], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5516, 0.4484], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5516, 0.4484], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5020, 0.4980], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5020, 0.4980], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4316, 0.5684], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4306, 0.5694], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4805, 0.5195], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4795, 0.5205], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6275, 0.3725], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6266, 0.3734], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7725)
Training Output torch.Size([2]) tensor([0.6424, 0.3576], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6429, 0.3571], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5540, 0.4460], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5540, 0.4460], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3909, 0.6091], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3914, 0.6086], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2239, 0.7761], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2235, 0.7765], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1099, 0.8901], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1101, 0.8899], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0481, 0.9519], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0480, 0.9520], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0356, 0.9644], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0354, 0.9646], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0201, 0.9799], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0202, 0.9798], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0220, 0.9780], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0221, 0.9779], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0142, 0.9858], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0141, 0.9859], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.0043, 0.9957], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0044, 0.9956], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0034, 0.9966], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0034, 0.9966], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 52.439% (loss: 2.849) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0070, 0.9930], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0070, 0.9930], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0365, 0.9635], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0363, 0.9637], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0585, 0.9415], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0598, 0.9402], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2121, 0.7879], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2137, 0.7863], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7901, 0.2099], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7893, 0.2107], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8600, 0.1400], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8667, 0.1333], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5536, 0.4464], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5521, 0.4479], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0647, 0.9353], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0635, 0.9365], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0524, 0.9476], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0527, 0.9473], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0187, 0.9813], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0185, 0.9815], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.0274, 0.9726], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0275, 0.9725], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.3020) tensor(1.)
Training Output torch.Size([2]) tensor([0.1082, 0.8918], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 26, Training ones: 65 / 79
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1392, 0.8608], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1391, 0.8609], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.150) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1392, 0.8608], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1391, 0.8609], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1392, 0.8608], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1391, 0.8609], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1391, 0.8609], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1392, 0.8608], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1392, 0.8608], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1392, 0.8608], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1391, 0.8609], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1392, 0.8608], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1392, 0.8608], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1391, 0.8609], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1391, 0.8609], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1392, 0.8608], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1391, 0.8609], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1392, 0.8608], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1391, 0.8609], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1391, 0.8609], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1391, 0.8609], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1391, 0.8609], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1391, 0.8609], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1391, 0.8609], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1392, 0.8608], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1392, 0.8608], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 0, Training ones: 20 / 26
INFO:root:[   21] train: 50.943% test: 76.923%
INFO:root:Accuracy: 0.50476, Precision: 0.58228, Recall: 0.70769, F1: 0.63889
INFO:root:Val Accuracy: 0.76923, Precision: 0.76923, Recall: 1.00000, F1: 0.86957
INFO:root:F1: 0.86957 did not improve from 0.8695651888847351
INFO:root:Epoch 22
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1391, 0.8609], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1391, 0.8609], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 1.061) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3302, 0.6698], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3316, 0.6684], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3340, 0.6660], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3330, 0.6670], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1765, 0.8235], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1765, 0.8235], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.1373) tensor(1.)
Training Output torch.Size([2]) tensor([0.0561, 0.9439], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0560, 0.9440], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0395, 0.9605], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0399, 0.9601], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0509, 0.9491], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0509, 0.9491], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0406, 0.9594], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0409, 0.9591], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([0.0525, 0.9475], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0525, 0.9475], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8941)
Training Output torch.Size([2]) tensor([0.0445, 0.9555], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0448, 0.9552], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0562, 0.9438], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0564, 0.9436], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0944, 0.9056], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0940, 0.9060], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1071, 0.8929], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1070, 0.8930], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0900, 0.9100], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0900, 0.9100], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0591, 0.9409], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0593, 0.9407], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0538, 0.9462], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0537, 0.9463], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0645, 0.9355], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0647, 0.9353], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0945, 0.9055], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0947, 0.9053], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9998)
Training Output torch.Size([2]) tensor([0.1052, 0.8948], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1047, 0.8953], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1378, 0.8622], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1388, 0.8612], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1461, 0.8539], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1455, 0.8545], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 59.524% (loss: 1.925) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1807, 0.8193], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1794, 0.8206], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2523, 0.7477], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2521, 0.7479], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2804, 0.7196], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2799, 0.7201], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3532, 0.6468], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3534, 0.6466], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.2471) tensor(1.)
Training Output torch.Size([2]) tensor([0.4897, 0.5103], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4896, 0.5104], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6726, 0.3274], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6727, 0.3273], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8363)
Training Output torch.Size([2]) tensor([0.7371, 0.2629], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7380, 0.2620], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7121, 0.2879], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7139, 0.2861], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6099, 0.3901], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6121, 0.3879], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4570, 0.5430], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4571, 0.5429], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3044, 0.6956], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3045, 0.6955], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1867, 0.8133], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1868, 0.8132], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0919, 0.9081], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0916, 0.9084], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0222, 0.9778], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0221, 0.9779], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0131, 0.9869], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0131, 0.9869], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.7656e-04, 9.9952e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.7563e-04, 9.9952e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 62.195% (loss: 3.212) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0355, 0.9645], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0343, 0.9657], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8032, 0.1968], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8039, 0.1961], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8866, 0.1134], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8843, 0.1157], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4078)
Training Output torch.Size([2]) tensor([0.5142, 0.4858], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5134, 0.4866], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5973, 0.4027], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5974, 0.4026], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3441, 0.6559], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3485, 0.6515], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1000, 0.9000], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0992, 0.9008], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1019, 0.8981], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0977, 0.9023], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2316, 0.7684], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2242, 0.7758], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8430)
Training Output torch.Size([2]) tensor([0.2147, 0.7853], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2198, 0.7802], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3416, 0.6584], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3478, 0.6522], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6935, 0.3065], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 17, Training ones: 65 / 88
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7405, 0.2595], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7409, 0.2591], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: 1.350) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7413, 0.2587], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7409, 0.2591], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7413, 0.2587], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7413, 0.2587], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7409, 0.2591], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7409, 0.2591], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7409, 0.2591], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7409, 0.2591], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7409, 0.2591], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7409, 0.2591], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7405, 0.2595], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7413, 0.2587], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7405, 0.2595], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7409, 0.2591], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7409, 0.2591], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7409, 0.2591], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7409, 0.2591], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7409, 0.2591], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7409, 0.2591], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7409, 0.2591], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7409, 0.2591], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7409, 0.2591], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7409, 0.2591], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7409, 0.2591], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   22] train: 58.491% test: 23.077%
INFO:root:Accuracy: 0.59048, Precision: 0.62500, Recall: 0.84615, F1: 0.71895
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 23
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7375, 0.2625], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7375, 0.2625], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 0.821) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5694, 0.4306], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5699, 0.4301], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.3491) tensor(0.9843)
Training Output torch.Size([2]) tensor([0.2411, 0.7589], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2444, 0.7556], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0548, 0.9452], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0532, 0.9468], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0071, 0.9929], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0071, 0.9929], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0031, 0.9969], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0031, 0.9969], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0040, 0.9960], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0038, 0.9962], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0036, 0.9964], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0038, 0.9962], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0073, 0.9927], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0074, 0.9926], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0081, 0.9919], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0078, 0.9922], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0164, 0.9836], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0160, 0.9840], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0525, 0.9475], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0538, 0.9462], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0822, 0.9178], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0823, 0.9177], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0673, 0.9327], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0670, 0.9330], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0333, 0.9667], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0333, 0.9667], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0297, 0.9703], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0301, 0.9699], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0471, 0.9529], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0471, 0.9529], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1028, 0.8972], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1031, 0.8969], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1320, 0.8680], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1300, 0.8700], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2323, 0.7677], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2327, 0.7673], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([0.2523, 0.7477], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2536, 0.7464], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 54.762% (loss: 1.375) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3814, 0.6186], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3762, 0.6238], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6434, 0.3566], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6477, 0.3523], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7102, 0.2898], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7116, 0.2884], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6187, 0.3813], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6179, 0.3821], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9994)
Training Output torch.Size([2]) tensor([0.4092, 0.5908], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4091, 0.5909], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3694, 0.6306], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3691, 0.6309], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4357, 0.5643], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4358, 0.5642], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5921, 0.4079], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5920, 0.4080], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0627) tensor(0.8111)
Training Output torch.Size([2]) tensor([0.6165, 0.3835], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6169, 0.3831], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5375, 0.4625], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5390, 0.4610], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4015, 0.5985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4017, 0.5983], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2659, 0.7341], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2654, 0.7346], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1705, 0.8295], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1702, 0.8298], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1085, 0.8915], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1084, 0.8916], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6047)
Training Output torch.Size([2]) tensor([0.0992, 0.9008], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0984, 0.9016], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9960)
Training Output torch.Size([2]) tensor([0.0773, 0.9227], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0773, 0.9227], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0893, 0.9107], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0869, 0.9131], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0756, 0.9244], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0745, 0.9255], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0394, 0.9606], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0426, 0.9574], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0373, 0.9627], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0357, 0.9643], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 54.878% (loss: 1.686) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0588, 0.9412], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0589, 0.9411], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1465, 0.8535], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1465, 0.8535], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1647, 0.8353], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1755, 0.8245], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3236, 0.6764], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3265, 0.6735], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7504, 0.2496], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7506, 0.2494], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0106, 0.9894], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0109, 0.9891], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.4141e-10, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.3307e-10, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.7722e-11, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([6.7827e-11, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0013e-04, 9.9990e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0150e-04, 9.9990e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9270, 0.0730], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9245, 0.0755], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 8.8277e-12], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 8.6909e-12], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.2627) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 1.3587e-14], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 23, Training ones: 65 / 82
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.0000e+00, 1.1604e-11], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0000e+00, 1.1695e-11], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: 25.180) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.0000e+00, 1.1695e-11], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0000e+00, 1.1604e-11], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.0000e+00, 1.1604e-11], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0000e+00, 1.1604e-11], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.0000e+00, 1.1695e-11], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0000e+00, 1.1695e-11], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.0000e+00, 1.1695e-11], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0000e+00, 1.1604e-11], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.0000e+00, 1.1604e-11], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0000e+00, 1.1695e-11], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.0000e+00, 1.1604e-11], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0000e+00, 1.1695e-11], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.0000e+00, 1.1604e-11], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0000e+00, 1.1695e-11], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.0000e+00, 1.1604e-11], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0000e+00, 1.1695e-11], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.0000e+00, 1.1604e-11], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0000e+00, 1.1695e-11], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.0000e+00, 1.1695e-11], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0000e+00, 1.1604e-11], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.0000e+00, 1.1604e-11], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0000e+00, 1.1604e-11], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.0000e+00, 1.1604e-11], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0000e+00, 1.1604e-11], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   23] train: 54.717% test: 23.077%
INFO:root:Accuracy: 0.55238, Precision: 0.60976, Recall: 0.76923, F1: 0.68027
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 24
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 1.1604e-11], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.1879e-11], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 12.594) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9998e-01, 1.5751e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 1.5937e-05], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0135, 0.9865], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0116, 0.9884], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.1866e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.2305e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.1315e-10, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.2044e-10, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.9470e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([5.5404e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0885, 0.9115], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0888, 0.9112], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9959, 0.0041], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9958, 0.0042], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 1.4363e-08], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.4877e-08], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 2.0568e-10], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 2.0568e-10], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 9.6199e-12], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 9.7714e-12], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 2.6883e-09], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 2.6883e-09], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9988e-01, 1.1867e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9988e-01, 1.1867e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3639, 0.6361], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3689, 0.6311], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0044, 0.9956], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0045, 0.9955], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0401, 0.9599], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0400, 0.9600], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9668)
Training Output torch.Size([2]) tensor([0.3961, 0.6039], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3923, 0.6077], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8349, 0.1651], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8392, 0.1608], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8806, 0.1194], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8832, 0.1168], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7670, 0.2330], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7670, 0.2330], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3045, 0.6955], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3078, 0.6922], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: 1.184) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2140, 0.7860], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2144, 0.7856], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8870)
Training Output torch.Size([2]) tensor([0.4130, 0.5870], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4140, 0.5860], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2886, 0.7114], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2898, 0.7102], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5146, 0.4854], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5151, 0.4849], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3513, 0.6487], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3522, 0.6478], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.5846, 0.4154], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5827, 0.4173], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7484)
Training Output torch.Size([2]) tensor([0.3909, 0.6091], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3909, 0.6091], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6218, 0.3782], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6218, 0.3782], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4069, 0.5931], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4069, 0.5931], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6183, 0.3817], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6186, 0.3814], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3872, 0.6128], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3877, 0.6123], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0488, 0.9512], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0481, 0.9519], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.5007e-04, 9.9915e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.2716e-04, 9.9917e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.2030e-05, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1637e-05, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.1016e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.2632e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9133e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([9.7978e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.0895e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.0655e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.1397e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.7367e-06, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.6898e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.6701e-05, 9.9998e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.6251e-04, 9.9984e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.6378e-04, 9.9984e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 50.000% (loss: 4.359) [mem: 2.63e+04]
Training min-max: tensor(0.2006) tensor(1.)
Training Output torch.Size([2]) tensor([0.0035, 0.9965], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0035, 0.9965], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0745, 0.9255], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0746, 0.9254], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1399, 0.8601], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1396, 0.8604], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3045, 0.6955], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3047, 0.6953], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8065, 0.1935], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8080, 0.1920], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7014, 0.2986], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7005, 0.2995], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1001, 0.8999], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0997, 0.9003], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3851, 0.6149], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3844, 0.6156], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6825, 0.3175], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6817, 0.3183], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7144, 0.2856], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7144, 0.2856], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9137, 0.0863], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9131, 0.0869], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.3098) tensor(1.)
Training Output torch.Size([2]) tensor([0.9246, 0.0754], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 41, Training ones: 65 / 64
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7768, 0.2232], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7770, 0.2230], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: 1.500) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7771, 0.2229], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7771, 0.2229], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7765, 0.2235], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7770, 0.2230], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7770, 0.2230], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7771, 0.2229], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7771, 0.2229], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7771, 0.2229], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7771, 0.2229], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7771, 0.2229], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7766, 0.2234], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7771, 0.2229], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7766, 0.2234], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7771, 0.2229], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7770, 0.2230], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7771, 0.2229], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7770, 0.2230], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7770, 0.2230], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7771, 0.2229], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7770, 0.2230], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7770, 0.2230], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7770, 0.2230], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7770, 0.2230], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7771, 0.2229], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   24] train: 47.170% test: 23.077%
INFO:root:Accuracy: 0.47619, Precision: 0.57812, Recall: 0.56923, F1: 0.57364
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 25
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7729, 0.2271], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7771, 0.2229], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 0.867) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1874, 0.8126], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1876, 0.8124], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0027, 0.9973], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0027, 0.9973], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.1039e-05, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0996e-05, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([3.3526e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.3265e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.6275e-09, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([6.6795e-09, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.6936e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([6.7198e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.7374e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([5.6927e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.0038e-05, 9.9993e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.0038e-05, 9.9993e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7294)
Training Output torch.Size([2]) tensor([0.0028, 0.9972], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0028, 0.9972], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3752, 0.6248], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3739, 0.6261], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9974, 0.0026], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9974, 0.0026], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9932e-01, 6.8384e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9930e-01, 7.0004e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9939, 0.0061], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9938, 0.0062], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6907, 0.3093], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6940, 0.3060], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8033)
Training Output torch.Size([2]) tensor([0.0066, 0.9934], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0066, 0.9934], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.5386e-04, 9.9955e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.5475e-04, 9.9955e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.6261e-04, 9.9914e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.6429e-04, 9.9914e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.0314) tensor(1.)
Training Output torch.Size([2]) tensor([0.0310, 0.9690], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0310, 0.9690], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0389, 0.9611], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0388, 0.9612], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 45.238% (loss: 3.247) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2991, 0.7009], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2997, 0.7003], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9362, 0.0638], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9363, 0.0637], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9760, 0.0240], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9759, 0.0241], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9615, 0.0385], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9614, 0.0386], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8516, 0.1484], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8534, 0.1466], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4349, 0.5651], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4364, 0.5636], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2552, 0.7448], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2544, 0.7456], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2630, 0.7370], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2634, 0.7366], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9529)
Training Output torch.Size([2]) tensor([0.1719, 0.8281], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1723, 0.8277], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1915, 0.8085], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1915, 0.8085], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1385, 0.8615], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1386, 0.8614], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0655, 0.9345], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0654, 0.9346], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0184, 0.9816], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0185, 0.9815], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2510) tensor(1.)
Training Output torch.Size([2]) tensor([0.0027, 0.9973], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0028, 0.9972], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Training Output torch.Size([2]) tensor([9.8982e-04, 9.9901e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.5213e-04, 9.9965e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.6012e-04, 9.9964e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.7337e-04, 9.9963e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.8036e-04, 9.9962e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.8672e-04, 9.9961e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.8861e-04, 9.9961e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.8823e-04, 9.9961e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.9204e-04, 9.9961e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 54.878% (loss: 3.438) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0054, 0.9946], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0054, 0.9946], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.0379, 0.9621], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0374, 0.9626], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0894, 0.9106], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0902, 0.9098], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2521, 0.7479], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2520, 0.7480], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6667)
Training Output torch.Size([2]) tensor([0.5891, 0.4109], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5874, 0.4126], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7065, 0.2935], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7058, 0.2942], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6535, 0.3465], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6536, 0.3464], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4841, 0.5159], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4843, 0.5157], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4325, 0.5675], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4326, 0.5674], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3155, 0.6845], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3151, 0.6849], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2997, 0.7003], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2999, 0.7001], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3492, 0.6508], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 24, Training ones: 65 / 81
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3333, 0.6667], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3334, 0.6666], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.406) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3334, 0.6666], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3335, 0.6665], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3334, 0.6666], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3334, 0.6666], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3335, 0.6665], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3334, 0.6666], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3334, 0.6666], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3334, 0.6666], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3334, 0.6666], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3333, 0.6667], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3334, 0.6666], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3334, 0.6666], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3334, 0.6666], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3334, 0.6666], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3334, 0.6666], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3334, 0.6666], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3334, 0.6666], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3334, 0.6666], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3334, 0.6666], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3334, 0.6666], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3334, 0.6666], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3334, 0.6666], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3334, 0.6666], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3334, 0.6666], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 0, Training ones: 20 / 26
INFO:root:[   25] train: 52.830% test: 76.923%
INFO:root:Accuracy: 0.52381, Precision: 0.59259, Recall: 0.73846, F1: 0.65753
INFO:root:Val Accuracy: 0.76923, Precision: 0.76923, Recall: 1.00000, F1: 0.86957
INFO:root:F1: 0.86957 did not improve from 0.8695651888847351
INFO:root:Epoch 26
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3335, 0.6665], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3333, 0.6667], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 0.752) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3748, 0.6252], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3746, 0.6254], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3579, 0.6421], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3581, 0.6419], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2957, 0.7043], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2957, 0.7043], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1997, 0.8003], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1982, 0.8018], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1837, 0.8163], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1821, 0.8179], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2288, 0.7712], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2288, 0.7712], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8657)
Training Output torch.Size([2]) tensor([0.2123, 0.7877], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2122, 0.7878], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2528, 0.7472], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2524, 0.7476], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2311, 0.7689], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2307, 0.7693], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.0353) tensor(1.)
Training Output torch.Size([2]) tensor([0.2635, 0.7365], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2629, 0.7371], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3452, 0.6548], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3452, 0.6548], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3511, 0.6489], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3512, 0.6488], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9251)
Training Output torch.Size([2]) tensor([0.2976, 0.7024], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2986, 0.7014], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.1837, 0.8163], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1894, 0.8106], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1740, 0.8260], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1743, 0.8257], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2294, 0.7706], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2357, 0.7643], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3226, 0.6774], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3217, 0.6783], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7214)
Training Output torch.Size([2]) tensor([0.3349, 0.6651], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3358, 0.6642], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5855)
Training Output torch.Size([2]) tensor([0.3920, 0.6080], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3924, 0.6076], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3861, 0.6139], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3863, 0.6137], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 59.524% (loss: 0.951) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4252, 0.5748], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4278, 0.5722], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5186, 0.4814], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5208, 0.4792], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5375, 0.4625], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5404, 0.4596], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4976, 0.5024], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4975, 0.5025], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4663, 0.5337], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4670, 0.5330], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4877, 0.5123], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4877, 0.5123], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5297, 0.4703], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5299, 0.4701], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5142, 0.4858], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5104, 0.4896], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4501, 0.5499], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4516, 0.5484], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4381, 0.5619], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4414, 0.5586], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3979, 0.6021], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3978, 0.6022], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3336, 0.6664], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3339, 0.6661], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2571, 0.7429], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2571, 0.7429], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1738, 0.8262], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1741, 0.8259], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1390, 0.8610], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1389, 0.8611], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0922, 0.9078], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0924, 0.9076], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0801, 0.9199], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0807, 0.9193], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9994)
Training Output torch.Size([2]) tensor([0.0535, 0.9465], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0533, 0.9467], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0244, 0.9756], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0242, 0.9758], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0174, 0.9826], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0171, 0.9829], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 59.756% (loss: 2.044) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0204, 0.9796], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0206, 0.9794], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0374, 0.9626], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0382, 0.9618], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0431, 0.9569], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0425, 0.9575], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0703, 0.9297], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0705, 0.9295], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1486, 0.8514], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1486, 0.8514], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3282, 0.6718], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3280, 0.6720], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4327, 0.5673], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4330, 0.5670], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5995, 0.4005], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5980, 0.4020], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6302, 0.3698], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6305, 0.3695], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5508, 0.4492], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5494, 0.4506], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5721, 0.4279], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5715, 0.4285], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4892, 0.5108], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 16, Training ones: 65 / 89
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3098, 0.6902], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3100, 0.6900], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.371) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3103, 0.6897], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3097, 0.6903], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3097, 0.6903], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3098, 0.6902], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3099, 0.6901], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3100, 0.6900], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3101, 0.6899], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3101, 0.6899], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3101, 0.6899], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3101, 0.6899], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3096, 0.6904], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3103, 0.6897], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3097, 0.6903], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3100, 0.6900], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3099, 0.6901], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3100, 0.6900], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3100, 0.6900], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3100, 0.6900], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3100, 0.6900], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3100, 0.6900], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3099, 0.6901], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3099, 0.6901], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3099, 0.6901], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3099, 0.6901], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 0, Training ones: 20 / 26
INFO:root:[   26] train: 58.491% test: 76.923%
INFO:root:Accuracy: 0.58095, Precision: 0.61798, Recall: 0.84615, F1: 0.71429
INFO:root:Val Accuracy: 0.76923, Precision: 0.76923, Recall: 1.00000, F1: 0.86957
INFO:root:F1: 0.86957 did not improve from 0.8695651888847351
INFO:root:Epoch 27
Training min-max: tensor(0.) tensor(0.8773)
Training Output torch.Size([2]) tensor([0.3105, 0.6895], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3102, 0.6898], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 0.771) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.7215)
Training Output torch.Size([2]) tensor([0.2928, 0.7072], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2929, 0.7071], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.1986, 0.8014], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2015, 0.7985], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0829, 0.9171], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0840, 0.9160], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0431) tensor(1.)
Training Output torch.Size([2]) tensor([0.0267, 0.9733], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0268, 0.9732], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9996e-01, 3.7932e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9997e-01, 3.4268e-05], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 1.2345e-15], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.6873e-15], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 1.6742e-15], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.2442e-15], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 1.2113e-24], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.2695e-24], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 1.6404e-21], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.9480e-21], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 6.1203e-19], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 6.7219e-19], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 1.7456e-10], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.5894e-10], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6792, 0.3208], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6758, 0.3242], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9990)
Training Output torch.Size([2]) tensor([1.3109e-05, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3473e-05, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.7292e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.5546e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.7633e-04, 9.9922e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.7180e-04, 9.9923e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9686)
Training Output torch.Size([2]) tensor([0.0104, 0.9896], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0102, 0.9898], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0380, 0.9620], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0388, 0.9612], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0450, 0.9550], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0450, 0.9550], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.0275) tensor(1.)
Training Output torch.Size([2]) tensor([0.0623, 0.9377], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0633, 0.9367], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0449, 0.9551], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0450, 0.9550], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 54.762% (loss: 3.103) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0506, 0.9494], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0509, 0.9491], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1054, 0.8946], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1045, 0.8955], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1134, 0.8866], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1120, 0.8880], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2330, 0.7670], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2358, 0.7642], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6491, 0.3509], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6429, 0.3571], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8029, 0.1971], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8013, 0.1987], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7538, 0.2462], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7542, 0.2458], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4263, 0.5737], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4311, 0.5689], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0631, 0.9369], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0631, 0.9369], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0210, 0.9790], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0207, 0.9793], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.3531e-04, 9.9986e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3522e-04, 9.9986e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.5888e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.6056e-06, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.4005e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([6.4381e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.1072e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.1377e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.6406e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.6438e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8998)
Training Output torch.Size([2]) tensor([4.3562e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.3223e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8463)
Training Output torch.Size([2]) tensor([1.0050e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0089e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.0222e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.0341e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.2521e-05, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.2546e-05, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 62.195% (loss: 5.645) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.5650e-04, 9.9984e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.5767e-04, 9.9984e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0028, 0.9972], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0028, 0.9972], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0151, 0.9849], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0151, 0.9849], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0945, 0.9055], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0952, 0.9048], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4258, 0.5742], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4258, 0.5742], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8322, 0.1678], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8344, 0.1656], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9334, 0.0666], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9329, 0.0671], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.2667) tensor(1.)
Training Output torch.Size([2]) tensor([0.9484, 0.0516], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9492, 0.0508], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9647)
Training Output torch.Size([2]) tensor([0.9364, 0.0636], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9378, 0.0622], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8918, 0.1082], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8922, 0.1078], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8693, 0.1307], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8697, 0.1303], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6196)
Training Output torch.Size([2]) tensor([0.8029, 0.1971], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 35, Training ones: 65 / 70
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.6745, 0.3255], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6749, 0.3251], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: 1.123) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.6753, 0.3247], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6749, 0.3251], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.6745, 0.3255], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6749, 0.3251], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.6749, 0.3251], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6753, 0.3247], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.6749, 0.3251], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6753, 0.3247], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.6753, 0.3247], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6753, 0.3247], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.6749, 0.3251], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6753, 0.3247], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.6749, 0.3251], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6753, 0.3247], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.6749, 0.3251], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6753, 0.3247], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.6749, 0.3251], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6753, 0.3247], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.6753, 0.3247], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6753, 0.3247], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.6749, 0.3251], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6749, 0.3251], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.6749, 0.3251], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6753, 0.3247], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   27] train: 56.604% test: 23.077%
INFO:root:Accuracy: 0.57143, Precision: 0.64286, Recall: 0.69231, F1: 0.66667
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 28
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6728, 0.3272], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6749, 0.3251], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 0.755) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4888, 0.5112], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4878, 0.5122], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2914, 0.7086], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2922, 0.7078], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1425, 0.8575], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1427, 0.8573], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0566, 0.9434], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0569, 0.9431], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0319, 0.9681], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0322, 0.9678], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0269, 0.9731], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0269, 0.9731], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0176, 0.9824], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0179, 0.9821], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0179, 0.9821], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0174, 0.9826], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0124, 0.9876], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0125, 0.9875], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0140, 0.9860], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0140, 0.9860], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0239, 0.9761], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0239, 0.9761], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0255, 0.9745], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0255, 0.9745], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0173, 0.9827], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0179, 0.9821], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.0083, 0.9917], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0082, 0.9918], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0065, 0.9935], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0063, 0.9937], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0083, 0.9917], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0083, 0.9917], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0164, 0.9836], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0166, 0.9834], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0187, 0.9813], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0192, 0.9808], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.0324, 0.9676], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0317, 0.9683], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0341, 0.9659], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0349, 0.9651], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 59.524% (loss: 3.366) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.0512, 0.9488], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0517, 0.9483], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0972, 0.9028], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0988, 0.9012], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1239, 0.8761], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1219, 0.8781], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1923, 0.8077], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1894, 0.8106], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3362, 0.6638], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3357, 0.6643], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5763, 0.4237], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5779, 0.4221], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6727, 0.3273], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6743, 0.3257], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6433, 0.3567], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6433, 0.3567], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5105, 0.4895], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5108, 0.4892], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3810, 0.6190], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3808, 0.6192], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2235, 0.7765], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2248, 0.7752], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0809, 0.9191], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0822, 0.9178], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0149, 0.9851], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0145, 0.9855], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.2900e-04, 9.9907e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.6221e-04, 9.9904e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([0.0188, 0.9812], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0198, 0.9802], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.4858e-04, 9.9955e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.9434e-04, 9.9961e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0199, 0.9801], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0208, 0.9792], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0178, 0.9822], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0175, 0.9825], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0046, 0.9954], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0047, 0.9953], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0031, 0.9969], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0031, 0.9969], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 62.195% (loss: 2.892) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0063, 0.9937], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0064, 0.9936], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0391, 0.9609], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0390, 0.9610], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0706, 0.9294], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0706, 0.9294], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3181, 0.6819], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3168, 0.6832], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9221, 0.0779], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9230, 0.0770], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9805, 0.0195], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9807, 0.0193], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9731, 0.0269], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9727, 0.0273], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8476, 0.1524], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8505, 0.1495], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2524, 0.7476], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2526, 0.7474], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0098, 0.9902], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0098, 0.9902], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.0667) tensor(0.4980)
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 18, Training ones: 65 / 87
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([6.7984e-04, 9.9932e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([6.7852e-04, 9.9932e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.001) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([6.8117e-04, 9.9932e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([6.7852e-04, 9.9932e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([6.7984e-04, 9.9932e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([6.7719e-04, 9.9932e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([6.7852e-04, 9.9932e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([6.7984e-04, 9.9932e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([6.7984e-04, 9.9932e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([6.7984e-04, 9.9932e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([6.7984e-04, 9.9932e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([6.8117e-04, 9.9932e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([6.7852e-04, 9.9932e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([6.7984e-04, 9.9932e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([6.7984e-04, 9.9932e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([6.7984e-04, 9.9932e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([6.7984e-04, 9.9932e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([6.8117e-04, 9.9932e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([6.7852e-04, 9.9932e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([6.7852e-04, 9.9932e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([6.8117e-04, 9.9932e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([6.7984e-04, 9.9932e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([6.7984e-04, 9.9932e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([6.7719e-04, 9.9932e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([6.7984e-04, 9.9932e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([6.7984e-04, 9.9932e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 0, Training ones: 20 / 26
INFO:root:[   28] train: 58.491% test: 76.923%
INFO:root:Accuracy: 0.58095, Precision: 0.62069, Recall: 0.83077, F1: 0.71053
INFO:root:Val Accuracy: 0.76923, Precision: 0.76923, Recall: 1.00000, F1: 0.86957
INFO:root:F1: 0.86957 did not improve from 0.8695651888847351
INFO:root:Epoch 29
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.7062e-04, 9.9933e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.7852e-04, 9.9932e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 3.649) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0025, 0.9975], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0025, 0.9975], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0125, 0.9875], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0125, 0.9875], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0195, 0.9805], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0195, 0.9805], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0672, 0.9328], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0671, 0.9329], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0816, 0.9184], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0814, 0.9186], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1973, 0.8027], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1973, 0.8027], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5878, 0.4122], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5817, 0.4183], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7201, 0.2799], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7207, 0.2793], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6397, 0.3603], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6420, 0.3580], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3823, 0.6177], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3831, 0.6169], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.0314) tensor(1.)
Training Output torch.Size([2]) tensor([0.3476, 0.6524], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3509, 0.6491], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4763, 0.5237], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4765, 0.5235], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7462, 0.2538], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7401, 0.2599], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7937, 0.2063], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7939, 0.2061], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7160, 0.2840], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7186, 0.2814], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4913, 0.5087], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4870, 0.5130], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 35.714% (loss: 0.715) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4264, 0.5736], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4291, 0.5709], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.5041, 0.4959], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5047, 0.4953], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4424, 0.5576], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4421, 0.5579], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.5130, 0.4870], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5128, 0.4872], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7426)
Training Output torch.Size([2]) tensor([0.4486, 0.5514], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4494, 0.5506], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5115, 0.4885], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5143, 0.4857], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4477, 0.5523], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4546, 0.5454], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9998)
Training Output torch.Size([2]) tensor([0.5063, 0.4937], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5083, 0.4917], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4474, 0.5526], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4503, 0.5497], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5020, 0.4980], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5021, 0.4979], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4467, 0.5533], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4493, 0.5507], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3063, 0.6937], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3040, 0.6960], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1584, 0.8416], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1588, 0.8412], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0655, 0.9345], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0656, 0.9344], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0404, 0.9596], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0405, 0.9595], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.0215, 0.9785], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0217, 0.9783], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0165, 0.9835], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0164, 0.9836], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.0106, 0.9894], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0108, 0.9892], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0059, 0.9941], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0059, 0.9941], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0047, 0.9953], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0046, 0.9954], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 45.122% (loss: 2.688) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0054, 0.9946], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0052, 0.9948], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0083, 0.9917], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0083, 0.9917], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0103, 0.9897], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0102, 0.9898], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0165, 0.9835], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0167, 0.9833], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8124)
Training Output torch.Size([2]) tensor([0.0330, 0.9670], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0330, 0.9670], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0827, 0.9173], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0821, 0.9179], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1209, 0.8791], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1201, 0.8799], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2423, 0.7577], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2427, 0.7573], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6346, 0.3654], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6152, 0.3848], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7246)
Training Output torch.Size([2]) tensor([0.6953, 0.3047], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6959, 0.3041], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.1976) tensor(1.)
Training Output torch.Size([2]) tensor([0.9255, 0.0745], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9253, 0.0747], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6667)
Training Output torch.Size([2]) tensor([0.8896, 0.1104], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 29, Training ones: 65 / 76
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5374, 0.4626], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5374, 0.4626], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: 0.771) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5374, 0.4626], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5372, 0.4628], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5374, 0.4626], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5374, 0.4626], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5374, 0.4626], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5372, 0.4628], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5373, 0.4627], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5373, 0.4627], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5373, 0.4627], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5372, 0.4628], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5375, 0.4625], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5375, 0.4625], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5372, 0.4628], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5373, 0.4627], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5375, 0.4625], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5374, 0.4626], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5373, 0.4627], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5374, 0.4626], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5373, 0.4627], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5374, 0.4626], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5374, 0.4626], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5374, 0.4626], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5374, 0.4626], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5374, 0.4626], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   29] train: 45.283% test: 23.077%
INFO:root:Accuracy: 0.45714, Precision: 0.55263, Recall: 0.64615, F1: 0.59574
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 30
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5373, 0.4627], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5383, 0.4617], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 0.695) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0204, 0.9796], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0193, 0.9807], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.6465e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.3002e-06, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.6351e-10, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.9032e-10, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0314) tensor(1.)
Training Output torch.Size([2]) tensor([1.9201e-13, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([8.9291e-14, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.8010e-10, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.5894e-10, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0020, 0.9980], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0647, 0.9353], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0526, 0.9474], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([1.0000e+00, 6.1794e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 8.5792e-07], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9999e-01, 1.2906e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 5.0937e-06], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9997e-01, 3.1447e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 1.8925e-05], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0043, 0.9957], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0059, 0.9941], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.5667e-12, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.5947e-12, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0411e-18, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([9.7042e-19, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.6074e-24, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.1951e-24, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.4360e-23, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.8766e-23, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9994)
Training Output torch.Size([2]) tensor([7.5304e-17, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([7.8918e-17, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.8379e-09, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([6.5248e-09, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.2932e-04, 9.9987e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3033e-04, 9.9987e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0424, 0.9576], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0424, 0.9576], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6768)
Training Output torch.Size([2]) tensor([0.0170, 0.9830], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0173, 0.9827], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 59.524% (loss: 4.064) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0160, 0.9840], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0158, 0.9842], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(8.0130e-05) tensor(1.)
Training Output torch.Size([2]) tensor([0.0469, 0.9531], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0477, 0.9523], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0522, 0.9478], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0523, 0.9477], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1557, 0.8443], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1552, 0.8448], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6648, 0.3352], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6648, 0.3352], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8430, 0.1570], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8417, 0.1583], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7793, 0.2207], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7797, 0.2203], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4083, 0.5917], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4080, 0.5920], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0483, 0.9517], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0480, 0.9520], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7575)
Training Output torch.Size([2]) tensor([0.0164, 0.9836], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0164, 0.9836], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.2558e-04, 9.9987e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.2436e-04, 9.9988e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0616e-05, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0411e-05, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0761e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0471e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.6804e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([8.4133e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.8936e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([7.1963e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.2126e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.2000e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.1524e-05, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1479e-05, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.4268e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.2956e-05, 9.9997e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.3996e-04, 9.9966e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.5281e-04, 9.9965e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 64.634% (loss: 3.975) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0082, 0.9918], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0080, 0.9920], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2302, 0.7698], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2304, 0.7696], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.5363, 0.4637], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5366, 0.4634], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5084, 0.4916], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5086, 0.4914], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6737, 0.3263], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6741, 0.3259], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6136, 0.3864], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6136, 0.3864], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4171, 0.5829], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4170, 0.5830], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3922, 0.6078], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3920, 0.6080], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4831, 0.5169], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4832, 0.5168], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4477, 0.5523], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4475, 0.5525], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5215, 0.4785], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5223, 0.4777], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4774, 0.5226], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 24, Training ones: 65 / 81
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3530, 0.6470], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3530, 0.6470], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.436) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3530, 0.6470], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3531, 0.6469], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3530, 0.6470], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3530, 0.6470], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3531, 0.6469], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3530, 0.6470], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3530, 0.6470], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3530, 0.6470], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3530, 0.6470], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3530, 0.6470], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3529, 0.6471], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3530, 0.6470], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3530, 0.6470], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3530, 0.6470], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3530, 0.6470], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3531, 0.6469], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3531, 0.6469], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3531, 0.6469], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3530, 0.6470], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3531, 0.6469], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3531, 0.6469], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3531, 0.6469], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3530, 0.6470], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3531, 0.6469], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 0, Training ones: 20 / 26
INFO:root:[   30] train: 62.264% test: 76.923%
INFO:root:Accuracy: 0.61905, Precision: 0.65432, Recall: 0.81538, F1: 0.72603
INFO:root:Val Accuracy: 0.76923, Precision: 0.76923, Recall: 1.00000, F1: 0.86957
INFO:root:F1: 0.86957 did not improve from 0.8695651888847351
INFO:root:Epoch 31
Training min-max: tensor(0.2980) tensor(1.)
Training Output torch.Size([2]) tensor([0.3529, 0.6471], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3530, 0.6470], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 0.738) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.9961)
Training Output torch.Size([2]) tensor([0.3321, 0.6679], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3324, 0.6676], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2564, 0.7436], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2563, 0.7437], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1594, 0.8406], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1596, 0.8404], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0772, 0.9228], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0769, 0.9231], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0563, 0.9437], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0561, 0.9439], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0636, 0.9364], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0636, 0.9364], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0510, 0.9490], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0508, 0.9492], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0615, 0.9385], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0616, 0.9384], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0512, 0.9488], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0511, 0.9489], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0624, 0.9376], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0626, 0.9374], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1006, 0.8994], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1006, 0.8994], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1085, 0.8915], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1093, 0.8907], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0890, 0.9110], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0894, 0.9106], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0552, 0.9448], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0551, 0.9449], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0513, 0.9487], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0513, 0.9487], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0696, 0.9304], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0695, 0.9305], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1091, 0.8909], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1088, 0.8912], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1175, 0.8825], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1180, 0.8820], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1524, 0.8476], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1525, 0.8475], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9118)
Training Output torch.Size([2]) tensor([0.1555, 0.8445], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1556, 0.8444], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 59.524% (loss: 1.861) [mem: 2.63e+04]
Training min-max: tensor(0.2487) tensor(1.)
Training Output torch.Size([2]) tensor([0.1889, 0.8111], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1890, 0.8110], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2685, 0.7315], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2695, 0.7305], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2942, 0.7058], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2933, 0.7067], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3887, 0.6113], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3879, 0.6121], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6131, 0.3869], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6137, 0.3863], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6730, 0.3270], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6731, 0.3269], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5636, 0.4364], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5641, 0.4359], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8705)
Training Output torch.Size([2]) tensor([0.3696, 0.6304], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3693, 0.6307], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2203, 0.7797], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2195, 0.7805], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2091, 0.7909], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2091, 0.7909], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1748, 0.8252], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1742, 0.8258], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1106, 0.8894], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1107, 0.8893], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.0402, 0.9598], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0399, 0.9601], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0054, 0.9946], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0054, 0.9946], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.9434e-04, 9.9961e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.9589e-04, 9.9960e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.7556e-04, 9.9962e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.7119e-04, 9.9963e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.5075e-04, 9.9965e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.5075e-04, 9.9965e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4627)
Training Output torch.Size([2]) tensor([3.1751e-04, 9.9968e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.1442e-04, 9.9969e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 64.634% (loss: 3.407) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0109, 0.9891], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0110, 0.9890], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1948, 0.8052], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1931, 0.8069], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([0.4583, 0.5417], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4586, 0.5414], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8734, 0.1266], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8730, 0.1270], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9942, 0.0058], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9942, 0.0058], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9977, 0.0023], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9977, 0.0023], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9928, 0.0072], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9928, 0.0072], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9353, 0.0647], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9353, 0.0647], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5855, 0.4145], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5851, 0.4149], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1733, 0.8267], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1731, 0.8269], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1138, 0.8862], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1142, 0.8858], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1188, 0.8812], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 18, Training ones: 65 / 87
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0806, 0.9194], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0806, 0.9194], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.084) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0806, 0.9194], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0806, 0.9194], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0806, 0.9194], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0806, 0.9194], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0806, 0.9194], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0806, 0.9194], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0807, 0.9193], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0806, 0.9194], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0806, 0.9194], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0806, 0.9194], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0806, 0.9194], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0806, 0.9194], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0806, 0.9194], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0806, 0.9194], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0806, 0.9194], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0807, 0.9193], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0806, 0.9194], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0806, 0.9194], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0806, 0.9194], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0806, 0.9194], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0806, 0.9194], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0806, 0.9194], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0806, 0.9194], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0806, 0.9194], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 0, Training ones: 20 / 26
INFO:root:[   31] train: 60.377% test: 76.923%
INFO:root:Accuracy: 0.60000, Precision: 0.63218, Recall: 0.84615, F1: 0.72368
INFO:root:Val Accuracy: 0.76923, Precision: 0.76923, Recall: 1.00000, F1: 0.86957
INFO:root:F1: 0.86957 did not improve from 0.8695651888847351
INFO:root:Epoch 32
Training min-max: tensor(0.) tensor(0.9999)
Training Output torch.Size([2]) tensor([0.0805, 0.9195], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0806, 0.9194], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 1.301) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0831, 0.9169], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0834, 0.9166], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9138)
Training Output torch.Size([2]) tensor([0.0552, 0.9448], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0550, 0.9450], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0224, 0.9776], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0224, 0.9776], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0053, 0.9947], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0052, 0.9948], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0027, 0.9973], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0031, 0.9969], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0029, 0.9971], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0029, 0.9971], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0061, 0.9939], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0061, 0.9939], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0067, 0.9933], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0068, 0.9932], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0166, 0.9834], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0166, 0.9834], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0822, 0.9178], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0822, 0.9178], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1265, 0.8735], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1265, 0.8735], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0814, 0.9186], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0821, 0.9179], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7748)
Training Output torch.Size([2]) tensor([0.0313, 0.9687], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0317, 0.9683], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0269, 0.9731], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0269, 0.9731], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0390, 0.9610], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0391, 0.9609], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6622)
Training Output torch.Size([2]) tensor([0.0772, 0.9228], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0770, 0.9230], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0931, 0.9069], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0934, 0.9066], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1437, 0.8563], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1438, 0.8562], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1552, 0.8448], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1549, 0.8451], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 59.524% (loss: 1.864) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2059, 0.7941], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2054, 0.7946], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3090, 0.6910], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3089, 0.6911], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9997)
Training Output torch.Size([2]) tensor([0.3446, 0.6554], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3448, 0.6552], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4423, 0.5577], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4426, 0.5574], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6167, 0.3833], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6167, 0.3833], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9961)
Training Output torch.Size([2]) tensor([0.6638, 0.3362], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6639, 0.3361], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6010, 0.3990], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6010, 0.3990], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4605, 0.5395], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4607, 0.5393], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3008, 0.6992], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3007, 0.6993], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2629, 0.7371], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2631, 0.7369], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.1986, 0.8014], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1986, 0.8014], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.1148, 0.8852], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1149, 0.8851], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0357, 0.9643], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0357, 0.9643], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0033, 0.9967], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0033, 0.9967], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.8391e-04, 9.9912e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.0045e-04, 9.9910e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6032)
Training Output torch.Size([2]) tensor([0.1720, 0.8280], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1753, 0.8247], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8567)
Training Output torch.Size([2]) tensor([0.0025, 0.9975], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0025, 0.9975], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.9051e-04, 9.9961e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.9090e-04, 9.9961e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 64.634% (loss: 3.454) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0080, 0.9920], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0080, 0.9920], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0754, 0.9246], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0754, 0.9246], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1492, 0.8508], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1490, 0.8510], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3427, 0.6573], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3431, 0.6569], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7262, 0.2738], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7266, 0.2734], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.1567) tensor(1.)
Training Output torch.Size([2]) tensor([0.7590, 0.2410], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7601, 0.2399], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4729, 0.5271], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4744, 0.5256], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4641, 0.5359], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4614, 0.5386], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7188, 0.2812], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7180, 0.2820], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6708, 0.3292], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6706, 0.3294], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8332, 0.1668], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8335, 0.1665], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.0275) tensor(0.4314)
Training Output torch.Size([2]) tensor([0.7772, 0.2228], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 17, Training ones: 65 / 88
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5288, 0.4712], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5289, 0.4711], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: 0.752) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5288, 0.4712], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5288, 0.4712], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5289, 0.4711], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5290, 0.4710], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5289, 0.4711], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5290, 0.4710], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5289, 0.4711], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5288, 0.4712], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5289, 0.4711], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5290, 0.4710], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5289, 0.4711], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5288, 0.4712], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5288, 0.4712], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5290, 0.4710], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5289, 0.4711], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5290, 0.4710], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5289, 0.4711], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5290, 0.4710], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5290, 0.4710], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5289, 0.4711], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5288, 0.4712], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5289, 0.4711], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5290, 0.4710], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5289, 0.4711], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   32] train: 58.491% test: 23.077%
INFO:root:Accuracy: 0.59048, Precision: 0.62500, Recall: 0.84615, F1: 0.71895
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 33
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5267, 0.4733], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5284, 0.4716], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 0.693) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2463, 0.7537], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2451, 0.7549], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0976, 0.9024], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0970, 0.9030], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0237, 0.9763], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0241, 0.9759], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0027, 0.9973], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Training Output torch.Size([2]) tensor([9.8693e-04, 9.9901e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0046, 0.9954], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0046, 0.9954], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7178)
Training Output torch.Size([2]) tensor([0.0060, 0.9940], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0059, 0.9941], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0229, 0.9771], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0226, 0.9774], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4172, 0.5828], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4163, 0.5837], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4376, 0.5624], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4366, 0.5634], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1058, 0.8942], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1059, 0.8941], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0115, 0.9885], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0115, 0.9885], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0181, 0.9819], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0181, 0.9819], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0983, 0.9017], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0986, 0.9014], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3086, 0.6914], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3083, 0.6917], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3501, 0.6499], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3503, 0.6497], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5986, 0.4014], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5985, 0.4015], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5633, 0.4367], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5643, 0.4357], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 59.524% (loss: 0.573) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7573, 0.2427], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7569, 0.2431], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7368)
Training Output torch.Size([2]) tensor([0.6862, 0.3138], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6864, 0.3136], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3820, 0.6180], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3819, 0.6181], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3388, 0.6612], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3383, 0.6617], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4879, 0.5121], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4885, 0.5115], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7889, 0.2111], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7886, 0.2114], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8392, 0.1608], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8391, 0.1609], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7425, 0.2575], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7418, 0.2582], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4588, 0.5412], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4589, 0.5411], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3861, 0.6139], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3861, 0.6139], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2182, 0.7818], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2173, 0.7827], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0757, 0.9243], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0751, 0.9249], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0162, 0.9838], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0158, 0.9842], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.0928e-04, 9.9909e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.0573e-04, 9.9909e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.5921e-04, 9.9954e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.7009e-04, 9.9953e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.8305e-04, 9.9912e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.8305e-04, 9.9912e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0025, 0.9975], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0129, 0.9871], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0130, 0.9870], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 59.756% (loss: 2.178) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2188, 0.7812], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2198, 0.7802], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9754, 0.0246], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9754, 0.0246], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9949, 0.0051], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9949, 0.0051], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9779, 0.0221], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9780, 0.0220], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9908, 0.0092], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9908, 0.0092], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9600, 0.0400], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9601, 0.0399], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0392) tensor(0.8989)
Training Output torch.Size([2]) tensor([0.6225, 0.3775], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6227, 0.3773], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1092, 0.8908], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1091, 0.8909], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0953, 0.9047], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0951, 0.9049], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0372, 0.9628], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0368, 0.9632], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6939)
Training Output torch.Size([2]) tensor([0.0630, 0.9370], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0626, 0.9374], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5714, 0.4286], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 29, Training ones: 65 / 76
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3062, 0.6938], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3065, 0.6935], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.366) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3072, 0.6928], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3063, 0.6937], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3063, 0.6937], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3064, 0.6936], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3067, 0.6933], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3069, 0.6931], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3067, 0.6933], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3069, 0.6931], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3069, 0.6931], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3067, 0.6933], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3062, 0.6938], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3069, 0.6931], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3063, 0.6937], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3068, 0.6932], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3065, 0.6935], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3067, 0.6933], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3066, 0.6934], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3065, 0.6935], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3068, 0.6932], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3066, 0.6934], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3064, 0.6936], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3065, 0.6935], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3067, 0.6933], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3067, 0.6933], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 0, Training ones: 20 / 26
INFO:root:[   33] train: 54.717% test: 76.923%
INFO:root:Accuracy: 0.55238, Precision: 0.61842, Recall: 0.72308, F1: 0.66667
INFO:root:Val Accuracy: 0.76923, Precision: 0.76923, Recall: 1.00000, F1: 0.86957
INFO:root:F1: 0.86957 did not improve from 0.8695651888847351
INFO:root:Epoch 34
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2985, 0.7015], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3057, 0.6943], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 0.770) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7275, 0.2725], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7208, 0.2792], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4133, 0.5867], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4157, 0.5843], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1699, 0.8301], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1704, 0.8296], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0914, 0.9086], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0917, 0.9083], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0891, 0.9109], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0891, 0.9109], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1031, 0.8969], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1028, 0.8972], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.0839, 0.9161], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0839, 0.9161], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0966, 0.9034], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0965, 0.9035], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0759, 0.9241], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0760, 0.9240], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0925, 0.9075], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0927, 0.9073], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1706, 0.8294], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1705, 0.8295], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1952, 0.8048], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1953, 0.8047], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7569)
Training Output torch.Size([2]) tensor([0.1457, 0.8543], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1459, 0.8541], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0693, 0.9307], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0693, 0.9307], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0578, 0.9422], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0577, 0.9423], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0778, 0.9222], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0778, 0.9222], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1435, 0.8565], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1437, 0.8563], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1660, 0.8340], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1660, 0.8340], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2558, 0.7442], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2559, 0.7441], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2716, 0.7284], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2714, 0.7286], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 54.762% (loss: 1.304) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3695, 0.6305], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3700, 0.6300], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5684, 0.4316], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5671, 0.4329], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6382, 0.3618], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6386, 0.3614], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6588)
Training Output torch.Size([2]) tensor([0.5990, 0.4010], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5990, 0.4010], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4655, 0.5345], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4656, 0.5344], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4401, 0.5599], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4405, 0.5595], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5049, 0.4951], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5054, 0.4946], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5095, 0.4905], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5095, 0.4905], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4260, 0.5740], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4260, 0.5740], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4352, 0.5648], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4357, 0.5643], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3644, 0.6356], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3642, 0.6358], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2463, 0.7537], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2465, 0.7535], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1340, 0.8660], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1340, 0.8660], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0594, 0.9406], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0597, 0.9403], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0378, 0.9622], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0377, 0.9623], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0200, 0.9800], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0199, 0.9801], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0150, 0.9850], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0148, 0.9852], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0092, 0.9908], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0092, 0.9908], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0044, 0.9956], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0045, 0.9955], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0033, 0.9967], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0033, 0.9967], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 57.317% (loss: 2.853) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0036, 0.9964], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0058, 0.9942], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0059, 0.9941], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0074, 0.9926], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0073, 0.9927], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0124, 0.9876], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0127, 0.9873], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0261, 0.9739], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0260, 0.9740], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0595, 0.9405], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0594, 0.9406], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0879, 0.9121], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0882, 0.9118], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1455, 0.8545], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1464, 0.8536], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2596, 0.7404], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2587, 0.7413], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3156, 0.6844], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3150, 0.6850], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4417, 0.5583], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4423, 0.5577], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.0510) tensor(0.3333)
Training Output torch.Size([2]) tensor([0.6514, 0.3486], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 13, Training ones: 65 / 92
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7058, 0.2942], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7058, 0.2942], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: 1.224) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7059, 0.2941], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7058, 0.2942], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7057, 0.2943], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7058, 0.2942], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7059, 0.2941], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7059, 0.2941], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7059, 0.2941], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7059, 0.2941], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7059, 0.2941], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7060, 0.2940], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7059, 0.2941], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7059, 0.2941], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7058, 0.2942], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7061, 0.2939], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7058, 0.2942], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7059, 0.2941], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7058, 0.2942], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7058, 0.2942], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7059, 0.2941], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7059, 0.2941], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7058, 0.2942], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7059, 0.2941], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7059, 0.2941], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7059, 0.2941], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   34] train: 54.717% test: 23.077%
INFO:root:Accuracy: 0.55238, Precision: 0.59783, Recall: 0.84615, F1: 0.70064
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 35
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7060, 0.2940], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7059, 0.2941], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 0.786) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6259, 0.3741], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6257, 0.3743], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4581, 0.5419], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4580, 0.5420], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2397, 0.7603], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2397, 0.7603], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0280, 0.9720], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0281, 0.9719], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4465, 0.5535], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4177, 0.5823], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 6.8400e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 7.9345e-07], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 9.5680e-09], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 9.9103e-09], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 2.4330e-10], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 2.5899e-10], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 5.4961e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 5.9079e-07], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9992e-01, 8.4811e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9991e-01, 8.5309e-05], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2401, 0.7599], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2429, 0.7571], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([1.0763e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1424e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.0233e-13, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([6.4198e-13, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.2898e-17, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.0307e-17, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.3153e-09, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.2023e-09, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0242, 0.9758], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0242, 0.9758], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9424)
Training Output torch.Size([2]) tensor([0.5446, 0.4554], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5448, 0.4552], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6796, 0.3204], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6798, 0.3202], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5856, 0.4144], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5846, 0.4154], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3313, 0.6687], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3307, 0.6693], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 45.238% (loss: 1.105) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2844, 0.7156], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2854, 0.7146], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.0314) tensor(1.)
Training Output torch.Size([2]) tensor([0.4097, 0.5903], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4087, 0.5913], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3462, 0.6538], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3462, 0.6538], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4758, 0.5242], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4756, 0.5244], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7840, 0.2160], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7845, 0.2155], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8418, 0.1582], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8422, 0.1578], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.0214) tensor(1.)
Training Output torch.Size([2]) tensor([0.7364, 0.2636], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7368, 0.2632], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3773, 0.6227], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3764, 0.6236], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0615, 0.9385], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0614, 0.9386], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0206, 0.9794], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0205, 0.9795], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0035, 0.9965], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0036, 0.9964], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.0845e-04, 9.9959e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.1005e-04, 9.9959e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.3911e-05, 9.9995e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.4122e-05, 9.9995e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.0098e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.9747e-06, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.3590e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.2966e-06, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.5979e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.6261e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.1397e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.1080e-06, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.6442e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.6636e-05, 9.9998e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.1570e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.1693e-05, 9.9997e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.3955e-04, 9.9986e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3901e-04, 9.9986e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 57.317% (loss: 4.441) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0093, 0.9907], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0092, 0.9908], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0287, 0.9713], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0287, 0.9713], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1017, 0.8983], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1014, 0.8986], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3442, 0.6558], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3392, 0.6608], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7652, 0.2348], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7703, 0.2297], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8436, 0.1564], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8443, 0.1557], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5390, 0.4610], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5249, 0.4751], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0058, 0.9942], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0049, 0.9951], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.5961e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.4085e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.7624e-10, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1517e-09, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.9143e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 32, Training ones: 65 / 73
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([6.5829e-06, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([6.6751e-06, 9.9999e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.000) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([6.8018e-06, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([6.5893e-06, 9.9999e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([6.5941e-06, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([6.6345e-06, 9.9999e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([6.7258e-06, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([6.7324e-06, 9.9999e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([6.6784e-06, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([6.7753e-06, 9.9999e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([6.7720e-06, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([6.6947e-06, 9.9999e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([6.5524e-06, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([6.8201e-06, 9.9999e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([6.6345e-06, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([6.7242e-06, 9.9999e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([6.6135e-06, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([6.6947e-06, 9.9999e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([6.7258e-06, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([6.7341e-06, 9.9999e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([6.7703e-06, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([6.6898e-06, 9.9999e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([6.6329e-06, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([6.7258e-06, 9.9999e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([6.6898e-06, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([6.7045e-06, 9.9999e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 0, Training ones: 20 / 26
INFO:root:[   35] train: 54.717% test: 76.923%
INFO:root:Accuracy: 0.54286, Precision: 0.61644, Recall: 0.69231, F1: 0.65217
INFO:root:Val Accuracy: 0.76923, Precision: 0.76923, Recall: 1.00000, F1: 0.86957
INFO:root:F1: 0.86957 did not improve from 0.8695651888847351
INFO:root:Epoch 36
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.9129e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([7.1039e-06, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 5.926) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0196, 0.9804], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0173, 0.9827], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0125, 0.9875], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0152, 0.9848], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.3725)
Training Output torch.Size([2]) tensor([7.8471e-04, 9.9922e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.9356e-04, 9.9921e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.8379e-04, 9.9972e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.6401e-04, 9.9974e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2736, 0.7264], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2814, 0.7186], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 3.7831e-10], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 2.2240e-10], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 2.2932e-14], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 3.0858e-14], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 1.2487e-17], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 7.5146e-18], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 1.6135e-14], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.7310e-14], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 7.4337e-12], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 7.3184e-12], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 3.4736e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 3.9670e-06], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2705, 0.7295], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2720, 0.7280], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.9148e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.7918e-05, 9.9998e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.4433e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.3319e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.7131e-04, 9.9983e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.6125e-04, 9.9984e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0632, 0.9368], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0632, 0.9368], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2077, 0.7923], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2077, 0.7923], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3504, 0.6496], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3504, 0.6496], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8298, 0.1702], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8295, 0.1705], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9424, 0.0576], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9426, 0.0574], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 54.762% (loss: 0.059) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9937, 0.0063], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9936, 0.0064], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9972, 0.0028], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9973, 0.0027], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9942, 0.0058], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9944, 0.0056], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9578, 0.0422], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9579, 0.0421], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.5020, 0.4980], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5029, 0.4971], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7292)
Training Output torch.Size([2]) tensor([0.0293, 0.9707], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0293, 0.9707], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0044, 0.9956], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0045, 0.9955], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0029, 0.9971], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0029, 0.9971], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.4008e-04, 9.9926e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.4588e-04, 9.9925e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.1594e-04, 9.9918e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.1435e-04, 9.9919e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.7324e-04, 9.9933e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.8051e-04, 9.9932e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.5653e-04, 9.9954e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.4814e-04, 9.9955e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.6817e-04, 9.9973e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.7749e-04, 9.9972e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.5720e-04, 9.9984e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.5968e-04, 9.9984e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.8634e-04, 9.9961e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.7740e-04, 9.9962e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.3720e-04, 9.9926e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.3720e-04, 9.9926e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0047, 0.9953], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0047, 0.9953], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0066, 0.9934], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0066, 0.9934], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0038, 0.9962], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0038, 0.9962], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 59.756% (loss: 2.789) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0159, 0.9841], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0159, 0.9841], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1371, 0.8629], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1375, 0.8625], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2806, 0.7194], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2814, 0.7186], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6980, 0.3020], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6955, 0.3045], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9686, 0.0314], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9681, 0.0319], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9909)
Training Output torch.Size([2]) tensor([0.9893, 0.0107], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9893, 0.0107], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9870, 0.0130], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9867, 0.0133], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9585, 0.0415], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9586, 0.0414], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8096, 0.1904], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8093, 0.1907], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3970, 0.6030], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3975, 0.6025], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2241, 0.7759], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2251, 0.7749], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1948, 0.8052], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 38, Training ones: 65 / 67
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1300, 0.8700], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1298, 0.8702], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.139) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1297, 0.8703], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1300, 0.8700], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1298, 0.8702], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1298, 0.8702], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1300, 0.8700], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1298, 0.8702], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1300, 0.8700], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1301, 0.8699], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1300, 0.8700], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1300, 0.8700], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1297, 0.8703], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1300, 0.8700], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1298, 0.8702], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1298, 0.8702], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1298, 0.8702], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1300, 0.8700], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1300, 0.8700], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1298, 0.8702], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1298, 0.8702], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1300, 0.8700], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1298, 0.8702], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1298, 0.8702], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1300, 0.8700], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1300, 0.8700], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 0, Training ones: 20 / 26
INFO:root:[   36] train: 56.604% test: 76.923%
INFO:root:Accuracy: 0.56190, Precision: 0.64179, Recall: 0.66154, F1: 0.65152
INFO:root:Val Accuracy: 0.76923, Precision: 0.76923, Recall: 1.00000, F1: 0.86957
INFO:root:F1: 0.86957 did not improve from 0.8695651888847351
INFO:root:Epoch 37
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1300, 0.8700], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1300, 0.8700], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 1.090) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1271, 0.8729], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1269, 0.8731], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0969, 0.9031], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0969, 0.9031], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0595, 0.9405], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0598, 0.9402], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0299, 0.9701], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0298, 0.9702], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0223, 0.9777], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0222, 0.9778], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0239, 0.9761], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0239, 0.9761], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0194, 0.9806], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0194, 0.9806], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0222, 0.9778], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0222, 0.9778], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0188, 0.9812], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0189, 0.9811], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0224, 0.9776], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0223, 0.9777], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0354, 0.9646], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0354, 0.9646], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0398, 0.9602], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0398, 0.9602], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0333, 0.9667], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0333, 0.9667], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0211, 0.9789], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0210, 0.9790], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0190, 0.9810], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0189, 0.9811], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.0233, 0.9767], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0234, 0.9766], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8656)
Training Output torch.Size([2]) tensor([0.0375, 0.9625], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0374, 0.9626], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0425, 0.9575], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0426, 0.9574], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0622, 0.9378], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0627, 0.9373], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0669, 0.9331], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0664, 0.9336], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 59.524% (loss: 2.708) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.7690)
Training Output torch.Size([2]) tensor([0.0918, 0.9082], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0917, 0.9083], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1520, 0.8480], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1530, 0.8470], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1838, 0.8162], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1840, 0.8160], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2703, 0.7297], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2694, 0.7306], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4495, 0.5505], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4477, 0.5523], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7244, 0.2756], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7256, 0.2744], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8270, 0.1730], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8269, 0.1731], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8202, 0.1798], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8192, 0.1808], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7216, 0.2784], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7214, 0.2786], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9983)
Training Output torch.Size([2]) tensor([0.5289, 0.4711], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5291, 0.4709], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3240, 0.6760], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3237, 0.6763], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1945, 0.8055], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1943, 0.8057], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1302, 0.8698], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1303, 0.8697], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0988, 0.9012], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0987, 0.9013], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1015, 0.8985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1019, 0.8981], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1001, 0.8999], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1003, 0.8997], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1367, 0.8633], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1359, 0.8641], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([0.1416, 0.8584], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1413, 0.8587], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1053, 0.8947], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1067, 0.8933], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1155, 0.8845], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1176, 0.8824], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 59.756% (loss: 1.132) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1906, 0.8094], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1912, 0.8088], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4422, 0.5578], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4426, 0.5574], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5751, 0.4249], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5742, 0.4258], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4922, 0.5078], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5015, 0.4985], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6142, 0.3858], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6137, 0.3863], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5322, 0.4678], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5322, 0.4678], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2886, 0.7114], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2874, 0.7126], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2433, 0.7567], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2426, 0.7574], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3363, 0.6637], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3368, 0.6632], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2790, 0.7210], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2790, 0.7210], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3835, 0.6165], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3775, 0.6225], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6980)
Training Output torch.Size([2]) tensor([0.6610, 0.3390], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 18, Training ones: 65 / 87
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7090, 0.2910], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7082, 0.2918], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: 1.233) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7082, 0.2918], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7090, 0.2910], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7090, 0.2910], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7086, 0.2914], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7086, 0.2914], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7086, 0.2914], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7086, 0.2914], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7082, 0.2918], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7082, 0.2918], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7086, 0.2914], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7090, 0.2910], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7082, 0.2918], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7086, 0.2914], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7086, 0.2914], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7082, 0.2918], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7086, 0.2914], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7086, 0.2914], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7086, 0.2914], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7082, 0.2918], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7086, 0.2914], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7086, 0.2914], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7086, 0.2914], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7086, 0.2914], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7086, 0.2914], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   37] train: 55.660% test: 23.077%
INFO:root:Accuracy: 0.56190, Precision: 0.60920, Recall: 0.81538, F1: 0.69737
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 38
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7162, 0.2838], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7098, 0.2902], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 0.801) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5931, 0.4069], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5851, 0.4149], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3061, 0.6939], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3065, 0.6935], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0882, 0.9118], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0882, 0.9118], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0182, 0.9818], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0182, 0.9818], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.2745) tensor(1.)
Training Output torch.Size([2]) tensor([0.0079, 0.9921], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0079, 0.9921], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0061, 0.9939], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0061, 0.9939], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0038, 0.9962], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0038, 0.9962], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0031, 0.9969], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0031, 0.9969], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9569)
Training Output torch.Size([2]) tensor([0.0038, 0.9962], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0038, 0.9962], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.3308) tensor(1.)
Training Output torch.Size([2]) tensor([0.0063, 0.9937], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0063, 0.9937], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2706) tensor(1.)
Training Output torch.Size([2]) tensor([0.0074, 0.9926], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0074, 0.9926], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0062, 0.9938], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0062, 0.9938], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0042, 0.9958], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0042, 0.9958], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.3098) tensor(1.)
Training Output torch.Size([2]) tensor([0.0040, 0.9960], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0040, 0.9960], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0051, 0.9949], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0051, 0.9949], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0081, 0.9919], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0080, 0.9920], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0093, 0.9907], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0094, 0.9906], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([0.0134, 0.9866], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0134, 0.9866], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.0146, 0.9854], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0146, 0.9854], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 54.762% (loss: 4.227) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0195, 0.9805], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0195, 0.9805], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0309, 0.9691], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0306, 0.9694], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6038)
Training Output torch.Size([2]) tensor([0.0369, 0.9631], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0369, 0.9631], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0535, 0.9465], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0536, 0.9464], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0929, 0.9071], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0935, 0.9065], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1921, 0.8079], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1928, 0.8072], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4514, 0.5486], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4516, 0.5484], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8682, 0.1318], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8689, 0.1311], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9491, 0.0509], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9491, 0.0509], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9268, 0.0732], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9269, 0.0731], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7136, 0.2864], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7125, 0.2875], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0540, 0.9460], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0556, 0.9444], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0868e-05, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0826e-05, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.9581e-10, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([7.0127e-10, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.4373e-11, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.4373e-11, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([3.8565e-12, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.8565e-12, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.1895e-10, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.1724e-10, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.8144e-09, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([8.8836e-09, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.5459e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.5261e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.1326e-04, 9.9959e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.0527e-04, 9.9959e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 54.878% (loss: 3.906) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9467, 0.0533], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9468, 0.0532], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 1.0970e-08], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.0800e-08], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 3.4105e-11], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 3.3840e-11], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 2.2374e-09], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 2.2726e-09], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 1.3842e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.4337e-07], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7134)
Training Output torch.Size([2]) tensor([9.9930e-01, 7.0415e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9929e-01, 7.0553e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6796, 0.3204], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6796, 0.3204], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1998, 0.8002], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1985, 0.8015], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1924, 0.8076], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1929, 0.8071], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0864, 0.9136], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0864, 0.9136], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0927, 0.9073], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0927, 0.9073], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1965, 0.8035], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 26, Training ones: 65 / 79
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2280, 0.7720], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2280, 0.7720], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.259) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2279, 0.7721], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2280, 0.7720], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2279, 0.7721], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2279, 0.7721], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2279, 0.7721], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2279, 0.7721], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2278, 0.7722], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2280, 0.7720], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2280, 0.7720], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2278, 0.7722], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2279, 0.7721], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2280, 0.7720], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2279, 0.7721], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2280, 0.7720], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2279, 0.7721], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2279, 0.7721], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2280, 0.7720], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2280, 0.7720], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2280, 0.7720], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2279, 0.7721], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2279, 0.7721], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2279, 0.7721], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2278, 0.7722], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2280, 0.7720], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 0, Training ones: 20 / 26
INFO:root:[   38] train: 54.717% test: 76.923%
INFO:root:Accuracy: 0.54286, Precision: 0.60759, Recall: 0.73846, F1: 0.66667
INFO:root:Val Accuracy: 0.76923, Precision: 0.76923, Recall: 1.00000, F1: 0.86957
INFO:root:F1: 0.86957 did not improve from 0.8695651888847351
INFO:root:Epoch 39
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2283, 0.7717], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2281, 0.7719], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 0.868) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4177, 0.5823], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4180, 0.5820], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4537, 0.5463], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4545, 0.5455], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3024, 0.6976], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3022, 0.6978], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.1054, 0.8946], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1054, 0.8946], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0708, 0.9292], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0708, 0.9292], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0982, 0.9018], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0986, 0.9014], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0705, 0.9295], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0705, 0.9295], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1039, 0.8961], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1039, 0.8961], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0747, 0.9253], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0747, 0.9253], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1137, 0.8863], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1135, 0.8865], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3040, 0.6960], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3045, 0.6955], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3734, 0.6266], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3762, 0.6238], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9133)
Training Output torch.Size([2]) tensor([0.2548, 0.7452], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2563, 0.7437], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0846, 0.9154], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0848, 0.9152], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0606, 0.9394], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0606, 0.9394], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.1887) tensor(1.)
Training Output torch.Size([2]) tensor([0.0935, 0.9065], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0938, 0.9062], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2524, 0.7476], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2524, 0.7476], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6647)
Training Output torch.Size([2]) tensor([0.3107, 0.6893], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3086, 0.6914], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5537, 0.4463], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5550, 0.4450], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5820, 0.4180], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5820, 0.4180], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 59.524% (loss: 0.541) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7727, 0.2273], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7706, 0.2294], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7672, 0.2328], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7672, 0.2328], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5990, 0.4010], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5990, 0.4010], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2842, 0.7158], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2842, 0.7158], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1990, 0.8010], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1992, 0.8008], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2313, 0.7687], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2306, 0.7694], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3794, 0.6206], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3796, 0.6204], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6656, 0.3344], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6676, 0.3324], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7547, 0.2453], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7555, 0.2445], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7148, 0.2852], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7156, 0.2844], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5545, 0.4455], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5542, 0.4458], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3200, 0.6800], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3195, 0.6805], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1377, 0.8623], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1373, 0.8627], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0507, 0.9493], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0507, 0.9493], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0319, 0.9681], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0319, 0.9681], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0172, 0.9828], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0173, 0.9827], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0153, 0.9847], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0154, 0.9846], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0100, 0.9900], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0100, 0.9900], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0046, 0.9954], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0046, 0.9954], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0040, 0.9960], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0040, 0.9960], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 54.878% (loss: 2.764) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.9988)
Training Output torch.Size([2]) tensor([0.0064, 0.9936], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0065, 0.9935], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.1333) tensor(1.)
Training Output torch.Size([2]) tensor([0.0165, 0.9835], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0164, 0.9836], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0227, 0.9773], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0227, 0.9773], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0472, 0.9528], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0473, 0.9527], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1221, 0.8779], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1226, 0.8774], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3041, 0.6959], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3043, 0.6957], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2894, 0.7106], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2894, 0.7106], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4213, 0.5787], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4212, 0.5788], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5482, 0.4518], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5484, 0.4516], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5581, 0.4419], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5579, 0.4421], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7115, 0.2885], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7116, 0.2884], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.1529) tensor(0.5608)
Training Output torch.Size([2]) tensor([0.7378, 0.2622], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 25, Training ones: 65 / 80
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.6188, 0.3812], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6189, 0.3811], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: 0.965) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.6188, 0.3812], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6188, 0.3812], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.6188, 0.3812], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6188, 0.3812], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.6189, 0.3811], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6188, 0.3812], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.6188, 0.3812], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6188, 0.3812], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.6187, 0.3813], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6188, 0.3812], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.6188, 0.3812], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6188, 0.3812], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.6189, 0.3811], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6188, 0.3812], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.6188, 0.3812], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6189, 0.3811], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.6189, 0.3811], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6188, 0.3812], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.6189, 0.3811], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6189, 0.3811], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.6188, 0.3812], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6189, 0.3811], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.6188, 0.3812], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6188, 0.3812], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   39] train: 52.830% test: 23.077%
INFO:root:Accuracy: 0.53333, Precision: 0.60000, Recall: 0.73846, F1: 0.66207
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 40
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6190, 0.3810], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6186, 0.3814], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 0.723) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3749, 0.6251], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3750, 0.6250], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1399, 0.8601], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1399, 0.8601], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0270, 0.9730], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0270, 0.9730], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.6598e-04, 9.9913e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.6598e-04, 9.9913e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.2824) tensor(1.)
Training Output torch.Size([2]) tensor([0.0036, 0.9964], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0036, 0.9964], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0086, 0.9914], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0087, 0.9913], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0856, 0.9144], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0857, 0.9143], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1516, 0.8484], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1517, 0.8483], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5363, 0.4637], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5353, 0.4647], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6063, 0.3937], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6065, 0.3935], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3370, 0.6630], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3365, 0.6635], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8236)
Training Output torch.Size([2]) tensor([0.0380, 0.9620], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0381, 0.9619], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.6281e-04, 9.9954e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.6371e-04, 9.9954e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.8271e-04, 9.9982e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.8271e-04, 9.9982e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9961)
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0596, 0.9404], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0596, 0.9404], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0417, 0.9583], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0418, 0.9582], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2625, 0.7375], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2623, 0.7377], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1015, 0.8985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1012, 0.8988], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 54.762% (loss: 2.289) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.2600, 0.7400], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2615, 0.7385], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8927, 0.1073], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8932, 0.1068], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8933, 0.1067], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8937, 0.1063], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5564, 0.4436], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5564, 0.4436], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1134, 0.8866], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1134, 0.8866], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0828, 0.9172], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0828, 0.9172], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1543, 0.8457], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1551, 0.8449], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3425, 0.6575], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3429, 0.6571], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4003, 0.5997], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4007, 0.5993], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5467, 0.4533], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5463, 0.4537], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5655, 0.4345], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5655, 0.4345], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4883, 0.5117], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4878, 0.5122], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3451, 0.6549], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3451, 0.6549], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1957, 0.8043], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1948, 0.8052], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1492, 0.8508], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1494, 0.8506], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0926, 0.9074], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0925, 0.9075], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0786, 0.9214], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0786, 0.9214], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0532, 0.9468], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0532, 0.9468], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0287, 0.9713], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0287, 0.9713], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0219, 0.9781], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0218, 0.9782], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 54.878% (loss: 1.923) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0228, 0.9772], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0227, 0.9773], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0313, 0.9687], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0312, 0.9688], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0320, 0.9680], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0319, 0.9681], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9985)
Training Output torch.Size([2]) tensor([0.0422, 0.9578], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0422, 0.9578], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0688, 0.9312], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0687, 0.9313], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1301, 0.8699], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1301, 0.8699], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1782, 0.8218], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1781, 0.8219], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2783, 0.7217], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2783, 0.7217], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.4605, 0.5395], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4600, 0.5400], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5641, 0.4359], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5631, 0.4369], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7178, 0.2822], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7178, 0.2822], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7591)
Training Output torch.Size([2]) tensor([0.7705, 0.2295], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 21, Training ones: 65 / 84
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7511, 0.2489], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7513, 0.2487], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: 1.391) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7511, 0.2489], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7511, 0.2489], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7509, 0.2491], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7511, 0.2489], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7511, 0.2489], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7507, 0.2493], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7511, 0.2489], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7511, 0.2489], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7511, 0.2489], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7507, 0.2493], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7511, 0.2489], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7511, 0.2489], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7511, 0.2489], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7511, 0.2489], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7511, 0.2489], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7509, 0.2491], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7511, 0.2489], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7511, 0.2489], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7511, 0.2489], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7513, 0.2487], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7511, 0.2489], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7513, 0.2487], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7507, 0.2493], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7511, 0.2489], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   40] train: 54.717% test: 23.077%
INFO:root:Accuracy: 0.55238, Precision: 0.60714, Recall: 0.78462, F1: 0.68456
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 41
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7522, 0.2478], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7520, 0.2480], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 0.840) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6693, 0.3307], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6684, 0.3316], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5263, 0.4737], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5261, 0.4739], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3585, 0.6415], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3585, 0.6415], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2195, 0.7805], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2195, 0.7805], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1627, 0.8373], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1626, 0.8374], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1424, 0.8576], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1424, 0.8576], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9995)
Training Output torch.Size([2]) tensor([0.1178, 0.8822], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1178, 0.8822], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1110, 0.8890], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1110, 0.8890], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0987, 0.9013], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0985, 0.9015], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0976, 0.9024], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0976, 0.9024], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1061, 0.8939], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1061, 0.8939], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1057, 0.8943], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1060, 0.8940], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0981, 0.9019], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0982, 0.9018], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0847, 0.9153], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0849, 0.9151], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0810, 0.9190], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0810, 0.9190], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0852, 0.9148], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0850, 0.9150], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0969, 0.9031], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0969, 0.9031], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0999, 0.9001], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0998, 0.9002], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7174)
Training Output torch.Size([2]) tensor([0.1122, 0.8878], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1121, 0.8879], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1140, 0.8860], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1140, 0.8860], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 50.000% (loss: 2.172) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1260, 0.8740], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1260, 0.8740], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1494, 0.8506], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1496, 0.8504], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1593, 0.8407], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1593, 0.8407], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1834, 0.8166], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1834, 0.8166], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2246, 0.7754], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2247, 0.7753], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2885, 0.7115], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2885, 0.7115], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3814, 0.6186], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3814, 0.6186], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5129, 0.4871], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5128, 0.4872], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5815, 0.4185], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5821, 0.4179], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5764, 0.4236], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5768, 0.4232], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5008, 0.4992], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5008, 0.4992], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3570, 0.6430], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3571, 0.6429], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.1782, 0.8218], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1782, 0.8218], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0618, 0.9382], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0617, 0.9383], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6935, 0.3065], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6907, 0.3093], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5483, 0.4517], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5434, 0.4566], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0165, 0.9835], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0165, 0.9835], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.5419e-04, 9.9965e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.5419e-04, 9.9965e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.1442e-05, 9.9995e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.0447e-05, 9.9995e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 50.000% (loss: 3.181) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0330, 0.9670], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0331, 0.9669], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.2627) tensor(1.)
Training Output torch.Size([2]) tensor([0.2186, 0.7814], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2186, 0.7814], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2890, 0.7110], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2891, 0.7109], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3717, 0.6283], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3719, 0.6281], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5403, 0.4597], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5406, 0.4594], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5807, 0.4193], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5805, 0.4195], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4941, 0.5059], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4946, 0.5054], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4971, 0.5029], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4971, 0.5029], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5492, 0.4508], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5492, 0.4508], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4563, 0.5437], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4565, 0.5435], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6314)
Training Output torch.Size([2]) tensor([0.5244, 0.4756], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5239, 0.4761], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.3608)
Training Output torch.Size([2]) tensor([0.4191, 0.5809], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 26, Training ones: 65 / 79
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2033, 0.7967], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2034, 0.7966], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.227) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2032, 0.7968], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2032, 0.7968], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2032, 0.7968], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2033, 0.7967], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2034, 0.7966], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2034, 0.7966], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2033, 0.7967], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2034, 0.7966], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2034, 0.7966], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2034, 0.7966], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2033, 0.7967], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2034, 0.7966], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2033, 0.7967], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2032, 0.7968], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2032, 0.7968], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2034, 0.7966], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2033, 0.7967], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2033, 0.7967], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2032, 0.7968], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2034, 0.7966], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2032, 0.7968], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2033, 0.7967], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2034, 0.7966], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2032, 0.7968], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 0, Training ones: 20 / 26
INFO:root:[   41] train: 47.170% test: 76.923%
INFO:root:Accuracy: 0.46667, Precision: 0.55696, Recall: 0.67692, F1: 0.61111
INFO:root:Val Accuracy: 0.76923, Precision: 0.76923, Recall: 1.00000, F1: 0.86957
INFO:root:F1: 0.86957 did not improve from 0.8695651888847351
INFO:root:Epoch 42
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2029, 0.7971], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2029, 0.7971], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 0.911) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1607, 0.8393], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1604, 0.8396], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0814, 0.9186], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0816, 0.9184], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0251, 0.9749], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0251, 0.9749], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0047, 0.9953], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0047, 0.9953], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0025, 0.9975], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0078, 0.9922], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0078, 0.9922], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0043, 0.9957], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0044, 0.9956], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0199, 0.9801], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0199, 0.9801], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0077, 0.9923], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0077, 0.9923], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0217, 0.9783], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0219, 0.9781], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([0.2734, 0.7266], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2729, 0.7271], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3225, 0.6775], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3218, 0.6782], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0706) tensor(1.)
Training Output torch.Size([2]) tensor([0.0925, 0.9075], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0924, 0.9076], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0117, 0.9883], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0116, 0.9884], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0062, 0.9938], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0062, 0.9938], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0083, 0.9917], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0083, 0.9917], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0192, 0.9808], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0192, 0.9808], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0229, 0.9771], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0230, 0.9770], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7176)
Training Output torch.Size([2]) tensor([0.0423, 0.9577], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0419, 0.9581], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0460, 0.9540], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0461, 0.9539], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 59.524% (loss: 3.078) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0717, 0.9283], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0717, 0.9283], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1403, 0.8597], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1400, 0.8600], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1739, 0.8261], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1736, 0.8264], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2658, 0.7342], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2648, 0.7352], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4511, 0.5489], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4510, 0.5490], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7269, 0.2731], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7270, 0.2730], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8188)
Training Output torch.Size([2]) tensor([0.8148, 0.1852], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8149, 0.1851], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7889, 0.2111], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7889, 0.2111], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6649, 0.3351], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6649, 0.3351], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4674, 0.5326], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4673, 0.5327], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4039)
Training Output torch.Size([2]) tensor([0.2811, 0.7189], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2811, 0.7189], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1584, 0.8416], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1583, 0.8417], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0891, 0.9109], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0891, 0.9109], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0490, 0.9510], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0489, 0.9511], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0423, 0.9577], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0423, 0.9577], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0295, 0.9705], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0294, 0.9706], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0320, 0.9680], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0321, 0.9679], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7986)
Training Output torch.Size([2]) tensor([0.0241, 0.9759], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0240, 0.9760], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0110, 0.9890], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0110, 0.9890], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0093, 0.9907], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0093, 0.9907], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 62.195% (loss: 2.343) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0150, 0.9850], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0150, 0.9850], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0404, 0.9596], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0404, 0.9596], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0560, 0.9440], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0560, 0.9440], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1194, 0.8806], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1194, 0.8806], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3311, 0.6689], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3307, 0.6693], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7650, 0.2350], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7644, 0.2356], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8812, 0.1188], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8811, 0.1189], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8499, 0.1501], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8495, 0.1505], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6634, 0.3366], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6631, 0.3369], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0039) tensor(0.7467)
Training Output torch.Size([2]) tensor([0.3158, 0.6842], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3150, 0.6850], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2251, 0.7749], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2250, 0.7750], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2431, 0.7569], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 16, Training ones: 65 / 89
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1920, 0.8080], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1921, 0.8079], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.213) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1921, 0.8079], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1920, 0.8080], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1919, 0.8081], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1920, 0.8080], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1921, 0.8079], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1922, 0.8078], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1921, 0.8079], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1921, 0.8079], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1921, 0.8079], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1920, 0.8080], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1920, 0.8080], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1921, 0.8079], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1921, 0.8079], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1921, 0.8079], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1921, 0.8079], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1921, 0.8079], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1921, 0.8079], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1921, 0.8079], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1920, 0.8080], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1920, 0.8080], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1920, 0.8080], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1921, 0.8079], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1921, 0.8079], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1921, 0.8079], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 0, Training ones: 20 / 26
INFO:root:[   42] train: 56.604% test: 76.923%
INFO:root:Accuracy: 0.56190, Precision: 0.60674, Recall: 0.83077, F1: 0.70130
INFO:root:Val Accuracy: 0.76923, Precision: 0.76923, Recall: 1.00000, F1: 0.86957
INFO:root:F1: 0.86957 did not improve from 0.8695651888847351
INFO:root:Epoch 43
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1914, 0.8086], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1917, 0.8083], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 0.932) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2079, 0.7921], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2078, 0.7922], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1725, 0.8275], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1722, 0.8278], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1175, 0.8825], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1173, 0.8827], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0695, 0.9305], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0693, 0.9307], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0558, 0.9442], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0559, 0.9441], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0594, 0.9406], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0595, 0.9405], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0498, 0.9502], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0495, 0.9505], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0542, 0.9458], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0542, 0.9458], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9717)
Training Output torch.Size([2]) tensor([0.0467, 0.9533], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0467, 0.9533], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0520, 0.9480], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0517, 0.9483], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0711, 0.9289], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0710, 0.9290], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0756, 0.9244], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0758, 0.9242], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0656, 0.9344], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0654, 0.9346], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0467, 0.9533], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0464, 0.9536], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0426, 0.9574], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0426, 0.9574], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0495, 0.9505], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0494, 0.9506], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0690, 0.9310], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0689, 0.9311], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0756, 0.9244], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0754, 0.9246], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0976, 0.9024], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0972, 0.9028], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1024, 0.8976], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1020, 0.8980], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 59.524% (loss: 2.281) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1257, 0.8743], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1260, 0.8740], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1728, 0.8272], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1730, 0.8270], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1949, 0.8051], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1950, 0.8050], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2439, 0.7561], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2442, 0.7558], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3286, 0.6714], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3284, 0.6716], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4577, 0.5423], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4579, 0.5421], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6339, 0.3661], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6339, 0.3661], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7113, 0.2887], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7112, 0.2888], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6969, 0.3031], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6959, 0.3041], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6009, 0.3991], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6010, 0.3990], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4337, 0.5663], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4326, 0.5674], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2208, 0.7792], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2208, 0.7792], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0573, 0.9427], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0570, 0.9430], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.8383e-04, 9.9942e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.7479e-04, 9.9943e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.2225e-04, 9.9928e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.1943e-04, 9.9928e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([0.0729, 0.9271], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0731, 0.9269], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0488, 0.9512], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0499, 0.9501], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.0484e-04, 9.9930e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.0346e-04, 9.9930e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 59.756% (loss: 3.323) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0272, 0.9728], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0273, 0.9727], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7010)
Training Output torch.Size([2]) tensor([0.5958, 0.4042], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5954, 0.4046], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9998)
Training Output torch.Size([2]) tensor([0.5224, 0.4776], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5227, 0.4773], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0290, 0.9710], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0288, 0.9712], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0415, 0.9585], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0413, 0.9587], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3257, 0.6743], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3258, 0.6742], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4157)
Training Output torch.Size([2]) tensor([0.2544, 0.7456], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2546, 0.7454], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.0002) tensor(1.)
Training Output torch.Size([2]) tensor([0.3701, 0.6299], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3704, 0.6296], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5889, 0.4111], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5888, 0.4112], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5593, 0.4407], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5595, 0.4405], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6604, 0.3396], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6603, 0.3397], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6204, 0.3796], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 19, Training ones: 65 / 86
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4957, 0.5043], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4957, 0.5043], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.685) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4957, 0.5043], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4957, 0.5043], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4957, 0.5043], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4957, 0.5043], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4960, 0.5040], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4957, 0.5043], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4957, 0.5043], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4957, 0.5043], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4960, 0.5040], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4960, 0.5040], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4957, 0.5043], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4960, 0.5040], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4957, 0.5043], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4957, 0.5043], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4957, 0.5043], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4957, 0.5043], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4960, 0.5040], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4960, 0.5040], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4957, 0.5043], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4960, 0.5040], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4957, 0.5043], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4957, 0.5043], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4960, 0.5040], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4960, 0.5040], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 0, Training ones: 20 / 26
INFO:root:[   43] train: 54.717% test: 76.923%
INFO:root:Accuracy: 0.55238, Precision: 0.60465, Recall: 0.80000, F1: 0.68874
INFO:root:Val Accuracy: 0.76923, Precision: 0.76923, Recall: 1.00000, F1: 0.86957
INFO:root:F1: 0.86957 did not improve from 0.8695651888847351
INFO:root:Epoch 44
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4955, 0.5045], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4960, 0.5040], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 0.693) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4313, 0.5687], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4311, 0.5689], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3292, 0.6708], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3293, 0.6707], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2193, 0.7807], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2192, 0.7808], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6824)
Training Output torch.Size([2]) tensor([0.1278, 0.8722], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1278, 0.8722], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0978, 0.9022], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0978, 0.9022], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.3452) tensor(1.)
Training Output torch.Size([2]) tensor([0.0989, 0.9011], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0988, 0.9012], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2784) tensor(1.)
Training Output torch.Size([2]) tensor([0.0809, 0.9191], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0809, 0.9191], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.0005) tensor(1.)
Training Output torch.Size([2]) tensor([0.0854, 0.9146], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0855, 0.9145], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0706, 0.9294], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0705, 0.9295], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0762, 0.9238], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0761, 0.9239], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.1176) tensor(0.6118)
Training Output torch.Size([2]) tensor([0.1046, 0.8954], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1046, 0.8954], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1077, 0.8923], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1076, 0.8924], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0877, 0.9123], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0875, 0.9125], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0586, 0.9414], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0583, 0.9417], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0525, 0.9475], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0526, 0.9474], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0620, 0.9380], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0620, 0.9380], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0887, 0.9113], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0885, 0.9115], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0971, 0.9029], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0970, 0.9030], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1266, 0.8734], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1269, 0.8731], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1320, 0.8680], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1320, 0.8680], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 59.524% (loss: 2.025) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.1631, 0.8369], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1628, 0.8372], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2305, 0.7695], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2307, 0.7693], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2597, 0.7403], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2597, 0.7403], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3354, 0.6646], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3340, 0.6660], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.4734, 0.5266], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4734, 0.5266], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6784, 0.3216], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6783, 0.3217], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7589, 0.2411], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7592, 0.2408], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7443, 0.2557], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7447, 0.2553], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.2510)
Training Output torch.Size([2]) tensor([0.6497, 0.3503], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6497, 0.3503], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4734, 0.5266], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4737, 0.5263], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2569, 0.7431], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2572, 0.7428], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0898, 0.9102], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0900, 0.9100], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0153, 0.9847], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0153, 0.9847], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.8250e-04, 9.9932e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.8117e-04, 9.9932e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.8378e-04, 9.9982e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.8486e-04, 9.9982e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.5795e-05, 9.9993e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.5795e-05, 9.9993e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.6791e-04, 9.9973e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.6686e-04, 9.9973e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0358, 0.9642], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0359, 0.9641], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 62.195% (loss: 1.681) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6904, 0.3096], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6900, 0.3100], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9981, 0.0019], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9981, 0.0019], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9970e-01, 2.9886e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9971e-01, 2.9308e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9981, 0.0019], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9981, 0.0019], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9943, 0.0057], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9943, 0.0057], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9943, 0.0057], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9943, 0.0057], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9943, 0.0057], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 31, Training ones: 65 / 74
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   44] train: 58.491% test: 23.077%
INFO:root:Accuracy: 0.59048, Precision: 0.64865, Recall: 0.73846, F1: 0.69065
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 45
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9943, 0.0057], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([0.9943, 0.0057], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9943, 0.0057], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9943, 0.0057], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9943, 0.0057], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9943, 0.0057], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9943, 0.0057], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9943, 0.0057], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6667)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.0000)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9943, 0.0057], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9943, 0.0057], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9961)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9943, 0.0057], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9943, 0.0057], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9943, 0.0057], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9819, 0.0181], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9819, 0.0181], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9820, 0.0180], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9819, 0.0181], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9819, 0.0181], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9819, 0.0181], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9819, 0.0181], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9819, 0.0181], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9819, 0.0181], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   45] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 46
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9455, 0.0545], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9454, 0.0546], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2379) tensor(1.)
Training Output torch.Size([2]) tensor([0.9456, 0.0544], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9456, 0.0544], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8547, 0.1453], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8547, 0.1453], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8827)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6840, 0.3160], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6841, 0.3159], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6843, 0.3157], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6843, 0.3157], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8454)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6843, 0.3157], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6940)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6842, 0.3158], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6842, 0.3158], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4674, 0.5326], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4676, 0.5324], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4670, 0.5330], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6965)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 36.585% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4677, 0.5323], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4671, 0.5329], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6777)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9170)
Training Output torch.Size([2]) tensor([0.4668, 0.5332], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 99, Training ones: 65 / 6
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   46] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.50000, Recall: 0.04615, F1: 0.08451
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 47
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4670, 0.5330], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4669, 0.5331], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9968)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4672, 0.5328], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4671, 0.5329], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4672, 0.5328], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4668, 0.5332], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4677, 0.5323], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4674, 0.5326], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2510) tensor(1.)
Training Output torch.Size([2]) tensor([0.2782, 0.7218], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2785, 0.7215], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 54.762% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1541, 0.8459], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1541, 0.8459], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7759)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1541, 0.8459], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2510) tensor(0.6611)
Training Output torch.Size([2]) tensor([0.1541, 0.8459], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1542, 0.8458], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 43.902% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8699)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.0353) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 90, Training ones: 65 / 15
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   47] train: 44.340% test: 23.077%
INFO:root:Accuracy: 0.44762, Precision: 0.73333, Recall: 0.16923, F1: 0.27500
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 48
Training min-max: tensor(0.) tensor(0.6704)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6744)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.0588) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7580)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5176)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   48] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 49
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.0353) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2189) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8135)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.0118) tensor(0.3725)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8791)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9276)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   49] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 50
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7056)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.0036) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9999)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2784) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.0059) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7128)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   50] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 51
Training min-max: tensor(0.2471) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8587)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.3373) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.1333) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   51] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 52
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.2941) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.2745) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9228)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7804)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.2510) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   52] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 53
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5961)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0059) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.3137) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4314)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7332)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7600)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4980)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   53] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 54
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7255)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9987)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7059)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8816)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7137)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9810)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   54] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 55
Training min-max: tensor(0.) tensor(0.8875)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0223) tensor(0.5020)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7496)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.3098) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9995)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0160) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9999)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.2980) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   55] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 56
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0014) tensor(0.6549)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8242)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6931)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.3216) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   56] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 57
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6824)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7686)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7369)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.0353) tensor(0.4431)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5819)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   57] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 58
Training min-max: tensor(0.) tensor(0.9998)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6468)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9995)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4627)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9991)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9999)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6979)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8221)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   58] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 59
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.9999)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.0060) tensor(0.6431)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0078) tensor(0.4549)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6510)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9999)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.9961)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7672)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9998)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   59] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 60
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7482)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.8509)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.2549) tensor(0.9292)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2980) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   60] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 61
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.6980)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9992)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9247)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4723)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7293)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.0005) tensor(0.5356)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6941)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   61] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 62
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.1255) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2980) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4353)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0314) tensor(0.7919)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0314) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.8843)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8154)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   62] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 63
Training min-max: tensor(0.) tensor(0.8898)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6903)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7019)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7789)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.1333) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2145) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8995)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   63] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 64
Training min-max: tensor(0.) tensor(0.8264)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8634)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7938)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7950)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7601)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7059)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   64] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 65
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9998)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.2824) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8951)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9117)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.0000)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2902) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.1216) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8827)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   65] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 66
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2941) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7291)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.2512) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7490)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   66] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 67
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6353)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6380)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7927)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   67] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 68
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7490)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.0431) tensor(0.8000)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6850)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7490)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5098)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9686)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6821)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   68] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 69
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9112)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.9999)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.3255)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.4902) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7058)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   69] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 70
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7150)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6824)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.0353) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.2784) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.0277) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6902)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8170)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   70] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 71
Training min-max: tensor(0.) tensor(0.6310)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0378) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7054)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.3529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   71] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 72
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.7810)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.0627) tensor(0.9922)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.3137) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8750)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8780)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2510) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6801)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   72] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 73
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.9997)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0667) tensor(0.9647)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7332)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.0314) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.1244) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7130)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.1059) tensor(0.3686)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   73] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 74
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7490)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7098)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7953)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.0235) tensor(0.5020)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9983)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   74] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 75
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5114)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0128) tensor(0.5020)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.2981) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.7370)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7451)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   75] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 76
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.1804) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.2724) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7646)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0196) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.2815) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   76] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 77
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0623) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9107)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7686)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7606)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0314) tensor(0.8560)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6039)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   77] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 78
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0353) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7930)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   78] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 79
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8560)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9976)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2700) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.2706) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7684)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9839)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   79] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 80
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8986)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9185)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8677)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8805)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8353)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   80] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 81
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4627)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9255)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8498)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8440)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4784)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   81] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 82
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9999)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6066)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(8.1715e-05) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7918)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   82] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 83
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8892)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7255)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8823)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9991)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8580)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9765)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   83] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 84
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7938)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9595)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.0314) tensor(0.5020)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2520) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.0706) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9598)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7630)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9984)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   84] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 85
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.0000)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0314) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5844)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.2941) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   85] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 86
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4824)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.5998)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.0065) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7291)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   86] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 87
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8051)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.3765)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9255)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.2902) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7808)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6880)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   87] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 88
Training min-max: tensor(0.) tensor(0.9998)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.2522) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6205)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.3059) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   88] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 89
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.2230) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9322)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9472)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7922)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9999)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   89] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 90
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.0099) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.0023) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7056)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8108)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2537) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.3373) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   90] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 91
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0824) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8801)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8854)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   91] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 92
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6461)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9998)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.1137) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9999)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8453)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   92] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 93
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6980)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.3020) tensor(0.7995)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   93] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 94
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2745) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6658)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.2667) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   94] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 95
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7647)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.1216) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6310)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.3020) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.0353) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.1255) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   95] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 96
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.1354) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9148)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2706) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.1451) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7253)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.8901)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9996)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9170)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.3059) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   96] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 97
Training min-max: tensor(0.) tensor(0.4980)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8078)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.1137) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9999)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0074) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5185)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.2510) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   97] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 98
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7921)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6902)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9380)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   98] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 99
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6549)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6465)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5279)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7663)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2471) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4627)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[   99] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 100
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.1121) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6505)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.0125) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9524)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9154)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.0353) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[  100] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 101
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9490)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.3175) tensor(0.9529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.2824) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[  101] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 102
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0011) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7862)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0980) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8254)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9972)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.1889) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[  102] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 103
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5086)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7686)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9962)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.1451) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7960)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.0164) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[  103] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 104
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9803)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0667) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6559)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.1059) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9098)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.2837) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7215)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[  104] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 105
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6862)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6627)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2746) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7104)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9987)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[  105] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 106
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7490)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7451)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7565)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7077)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.2471) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[  106] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 107
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8857)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6290)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4196)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8280)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6845)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[  107] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 108
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.2012) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.1020) tensor(0.7942)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.2399) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[  108] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 109
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0314) tensor(0.5137)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4392)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2238) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0824) tensor(0.8360)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8619)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[  109] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 110
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.1333) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9156)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7011)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0564) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.9182)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[  110] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 111
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9988)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6429)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.3137) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[  111] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 112
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.1020) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.3059) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.0118) tensor(0.3098)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9999)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.2510) tensor(0.6902)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[  112] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 113
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4118)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9080)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7684)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.1360) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[  113] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 114
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9451)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.2471) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.3961) tensor(0.6667)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6546)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6902)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[  114] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 115
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6156)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4980)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7478)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.9153)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.3059) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2706) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7482)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[  115] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 116
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.7137)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9984)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9997)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7556)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.0706) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2260) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7176)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6468)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9102)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6859)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[  116] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 117
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2980) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6974)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7410)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6508)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[  117] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 118
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0314) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.0667) tensor(0.8227)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6824)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9996)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9300)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.6980)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8285)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.2040) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7402)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9876)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[  118] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 119
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8127)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2980) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.1099) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[  119] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 120
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0275) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9980)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7498)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6193)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.6861)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.1033) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6436)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[  120] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 121
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6745)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.2470) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.2549) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9991)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2863) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8538)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4549)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[  121] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 122
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8035)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6667)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7608)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[  122] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 123
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8627)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6041)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7030)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9997)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9803)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7164)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.0039) tensor(0.3333)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[  123] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 124
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.0092) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.8540)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4196)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.0314) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8407)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[  124] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 125
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.2667) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.1412) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.2841) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4980)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[  125] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 126
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9961)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7715)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9332)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8575)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.3020) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9999)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9021)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7447)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[  126] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 127
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.2580) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2902) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4667)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7626)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6891)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[  127] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 128
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8767)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6706)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6941)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8830)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5195)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9975)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[  128] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 129
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6824)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2627) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6901)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.0275) tensor(0.4235)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8738)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0006) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.2901)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9938)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.0028) tensor(0.9569)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[  129] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 130
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8973)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9921)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6702)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.2902) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8608)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.2893) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6117)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9999)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[  130] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 131
Training min-max: tensor(0.) tensor(0.7686)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2784) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4353)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8726)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6624)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4118)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7325)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[  131] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 132
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.6314)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8509)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.0627) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[  132] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 133
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6822)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.0078) tensor(0.6235)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7939)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[  133] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 134
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7568)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7591)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6784)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[  134] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 135
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6740)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2223) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.3294)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.2749) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[  135] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 136
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6363)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9977)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.2781) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6745)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0745) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9976)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7201)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[  136] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 137
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7862)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.8120)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7043)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6824)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9956)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.3647)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2510) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.0353) tensor(0.7879)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[  137] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 138
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9961)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9991)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9999)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7176)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[  138] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 139
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8037)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.9995)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9442)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0980) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7216)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4980)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9842)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[  139] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 140
Training min-max: tensor(0.) tensor(0.9995)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2354) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7176)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9265)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8825)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.0101) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8034)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[  140] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 141
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9555)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[  141] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 142
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8014)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9168)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6901)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.2474) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.2863) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7058)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2441) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[  142] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 143
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.3412)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5216)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8431)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9990)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7528)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.9494)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.2946) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.0235) tensor(0.4824)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[  143] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 144
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8659)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6897)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.0392) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9999)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7254)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.3882)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[  144] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 145
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7056)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9978)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7647)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[  145] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 146
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.2667) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9994)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8223)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9777)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[  146] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 147
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2902) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.3333) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.2471) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9663)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.3490)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[  147] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 148
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9999)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.0000)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9631)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6824)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0007) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.0471) tensor(0.4078)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5333)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[  148] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 149
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.9996)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8806)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8780)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9984)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7213)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.7059)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7216)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7166)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6863)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[  149] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 150
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 40.476% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5725)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.4078) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 35.366% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7686)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 105, Training ones: 65 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[  150] train: 37.736% test: 23.077%
INFO:root:Accuracy: 0.38095, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:VideoDataset dataset created
INFO:root:VideoDataset unsupervised data loader created
INFO:root:loaded best validation dice from epoch 2 with f1: 0.8695651888847351
INFO:root:loaded pretrained encoder from epoch 2 with msg: <All keys matched successfully>
INFO:root:loaded pretrained classifier from epoch 2 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 2
INFO:root:read-path: /home/gridsan/nchutisilp/projects/jepa/pretrain_models/video_classification_frozen/cf-pres-from-vjepa-16x2x3-fold1/jepa-best.pth.tar
OpenBLAS blas_thread_init: pthread_create failed for thread 47 of 64: Resource temporarily unavailable
OpenBLAS blas_thread_init: RLIMIT_NPROC 4096 current, 1546313 max
OpenBLAS blas_thread_init: pthread_create failed for thread 48 of 64: Resource temporarily unavailable
OpenBLAS blas_thread_init: RLIMIT_NPROC 4096 current, 1546313 max
OpenBLAS blas_thread_init: pthread_create failed for thread 49 of 64: Resource temporarily unavailable
OpenBLAS blas_thread_init: RLIMIT_NPROC 4096 current, 1546313 max
OpenBLAS blas_thread_init: pthread_create failed for thread 50 of 64: Resource temporarily unavailable
OpenBLAS blas_thread_init: RLIMIT_NPROC 4096 current, 1546313 max
OpenBLAS blas_thread_init: pthread_create failed for thread 51 of 64: Resource temporarily unavailable
OpenBLAS blas_thread_init: RLIMIT_NPROC 4096 current, 1546313 max
OpenBLAS blas_thread_init: pthread_create failed for thread 52 of 64: Resource temporarily unavailable
OpenBLAS blas_thread_init: RLIMIT_NPROC 4096 current, 1546313 max
OpenBLAS blas_thread_init: pthread_create failed for thread 53 of 64: Resource temporarily unavailable
OpenBLAS blas_thread_init: RLIMIT_NPROC 4096 current, 1546313 max
OpenBLAS blas_thread_init: pthread_create failed for thread 54 of 64: Resource temporarily unavailable
OpenBLAS blas_thread_init: RLIMIT_NPROC 4096 current, 1546313 max
OpenBLAS blas_thread_init: pthread_create failed for thread 55 of 64: Resource temporarily unavailable
OpenBLAS blas_thread_init: RLIMIT_NPROC 4096 current, 1546313 max
OpenBLAS blas_thread_init: pthread_create failed for thread 56 of 64: Resource temporarily unavailable
OpenBLAS blas_thread_init: RLIMIT_NPROC 4096 current, 1546313 max
OpenBLAS blas_thread_init: pthread_create failed for thread 57 of 64: Resource temporarily unavailable
OpenBLAS blas_thread_init: RLIMIT_NPROC 4096 current, 1546313 max
OpenBLAS blas_thread_init: pthread_create failed for thread 58 of 64: Resource temporarily unavailable
OpenBLAS blas_thread_init: RLIMIT_NPROC 4096 current, 1546313 max
OpenBLAS blas_thread_init: pthread_create failed for thread 59 of 64: Resource temporarily unavailable
OpenBLAS blas_thread_init: RLIMIT_NPROC 4096 current, 1546313 max
OpenBLAS blas_thread_init: pthread_create failed for thread 60 of 64: Resource temporarily unavailable
OpenBLAS blas_thread_init: RLIMIT_NPROC 4096 current, 1546313 max
OpenBLAS blas_thread_init: pthread_create failed for thread 61 of 64: Resource temporarily unavailable
OpenBLAS blas_thread_init: RLIMIT_NPROC 4096 current, 1546313 max
OpenBLAS blas_thread_init: pthread_create failed for thread 62 of 64: Resource temporarily unavailable
OpenBLAS blas_thread_init: RLIMIT_NPROC 4096 current, 1546313 max
OpenBLAS blas_thread_init: pthread_create failed for thread 63 of 64: Resource temporarily unavailable
OpenBLAS blas_thread_init: RLIMIT_NPROC 4096 current, 1546313 max
slurmstepd-d-8-13-1: error: *** JOB 26351979 ON d-8-13-1 CANCELLED AT 2024-06-25T10:03:07 ***
