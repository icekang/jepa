/home/gridsan/nchutisilp/.conda/envs/jepa/bin/python
INFO:root:called-params configs/evals/vitl16_cf_pres_16x2x3_from_vjepa_fold2.yaml
INFO:root:loaded params...
{   'data': {   'dataset_test': '/home/gridsan/nchutisilp/projects/ModelsGenesis/notebooks/tabular_data/cf_pres_test.csv',
                'dataset_train': '/home/gridsan/nchutisilp/projects/ModelsGenesis/notebooks/tabular_data/cf_pres_train_fold2.csv',
                'dataset_type': 'VideoDataset',
                'dataset_val': '/home/gridsan/nchutisilp/projects/ModelsGenesis/notebooks/tabular_data/cf_pres_val_fold2.csv',
                'frame_step': 3,
                'frames_per_clip': 128,
                'num_classes': 2,
                'num_segments': 1,
                'num_views_per_segment': 1},
    'eval_name': 'video_classification_frozen',
    'nodes': 8,
    'optimization': {   'attend_across_segments': True,
                        'batch_size': 2,
                        'final_lr': 0.0,
                        'freeze_encoder': False,
                        'lr': 0.001,
                        'num_epochs': 150,
                        'resolution': 224,
                        'start_lr': 0.001,
                        'use_bfloat16': True,
                        'warmup': 0.0,
                        'weight_decay': 0.01},
    'pretrain': {   'checkpoint': 'jepa-latest.pth.tar',
                    'checkpoint_key': 'target_encoder',
                    'clip_duration': None,
                    'folder': '/home/gridsan/nchutisilp/projects/jepa/pretrain_models',
                    'frames_per_clip': 16,
                    'model_name': 'vit_large',
                    'patch_size': 16,
                    'tight_silu': False,
                    'tubelet_size': 2,
                    'uniform_power': True,
                    'use_sdpa': True,
                    'use_silu': False,
                    'write_tag': 'jepa'},
    'resume_checkpoint': False,
    'tag': 'cf-pres-from-vjepa-16x2x3-fold2',
    'tasks_per_node': 8}
Random port is ... 11967
INFO:root:Running... (rank: 0/1)
INFO:root:Running evaluation: video_classification_frozen
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:Loading pretrained model from /home/gridsan/nchutisilp/projects/jepa/pretrain_models/jepa-latest.pth.tar
VisionTransformer(
  (patch_embed): PatchEmbed3D(
    (proj): Conv3d(3, 1024, kernel_size=(2, 16, 16), stride=(2, 16, 16))
  )
  (blocks): ModuleList(
    (0-23): 24 x Block(
      (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
      (attn): Attention(
        (qkv): Linear(in_features=1024, out_features=3072, bias=True)
        (attn_drop): Dropout(p=0.0, inplace=False)
        (proj): Linear(in_features=1024, out_features=1024, bias=True)
        (proj_drop): Dropout(p=0.0, inplace=False)
      )
      (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
      (mlp): MLP(
        (fc1): Linear(in_features=1024, out_features=4096, bias=True)
        (act): GELU(approximate='none')
        (fc2): Linear(in_features=4096, out_features=1024, bias=True)
        (drop): Dropout(p=0.0, inplace=False)
      )
    )
  )
  (norm): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
)
INFO:root:loaded pretrained model with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch: 300
 path: /home/gridsan/nchutisilp/projects/jepa/pretrain_models/jepa-latest.pth.tar
INFO:root:VideoDataset dataset created
INFO:root:VideoDataset unsupervised data loader created
INFO:root:VideoDataset dataset created
INFO:root:VideoDataset unsupervised data loader created
INFO:root:Dataloader created... iterations per epoch: 53
INFO:root:Unfreezing encoder...
INFO:root:Using AdamW
INFO:root:Epoch 1
/home/gridsan/nchutisilp/.local/lib/python3.9/site-packages/torch/backends/cuda/__init__.py:342: FutureWarning: torch.backends.cuda.sdp_kernel() is deprecated. In the future, this context manager will be removed. Please see, torch.nn.attention.sdpa_kernel() for the new context manager, with updated signature.
  warnings.warn(
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4279, 0.5721], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4449, 0.5551], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 0.684) [mem: 2.39e+04]
Training min-max: tensor(0.) tensor(0.8854)
Training Output torch.Size([2]) tensor([0.0073, 0.9927], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0068, 0.9932], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.5523e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([5.9893e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9948, 0.0052], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9755, 0.0245], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9871, 0.0129], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9922, 0.0078], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9798, 0.0202], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9768, 0.0232], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.5660e-27, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([5.2288e-27, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9987e-01, 1.3447e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9985e-01, 1.4653e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.5045e-36, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([7.7626e-36, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 61.905% (loss: 58.312) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 2.2309e-42], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.2710e-42], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.0141e-05, 9.9992e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.6797e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9986, 0.0014], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9997e-01, 3.2067e-05], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.6005e-21, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.6729e-21, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.1812e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.0710e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.2314) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 8.9910e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.1298e-07], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.9606e-13, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([9.7656e-16, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.8854e-11, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.6547e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2311, 0.7689], device='cuda:0')
Training Output torch.Size([2]) tensor([8.3179e-18, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9999e-01, 1.1936e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([5.4813e-12, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.4872e-18, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([5.3174e-19, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.3622e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.2868e-10, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8475, 0.1525], device='cuda:0')
Training Output torch.Size([2]) tensor([3.9013e-04, 9.9961e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.6858e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.5961e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7882, 0.2118], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8220, 0.1780], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1172, 0.8828], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1148, 0.8852], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.7842e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([7.3515e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7411)
Training Output torch.Size([2]) tensor([7.4538e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 2.4632e-06], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 1.8688e-11], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 3.8647e-11], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.6662e-21, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.0832e-22, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 53.659% (loss: 0.000) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.6482e-31, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.6482e-31, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.5952e-38, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.5952e-38, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.1183e-36, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0839e-36, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.0179e-28, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([5.2587e-28, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.5827e-12, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.5951e-12, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 1.4372e-17], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.1548e-17], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 3.3315e-11], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 9.4168e-11], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.2752e-15, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([5.1168e-15, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 1.5437e-09], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 6.9728e-09], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.5336e-20, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.1934e-20, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.2781e-41, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.4744e-41, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 27, Training ones: 69 / 78
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Validation Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.000) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Validation Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Validation Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Validation Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Validation Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Validation Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Validation Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Validation Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Validation Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Validation Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Validation Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Validation Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Validation Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[    1] train: 50.943% test: 61.538%
INFO:root:Accuracy: 0.51429, Precision: 0.61538, Recall: 0.69565, F1: 0.65306
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:New best F1: 0.76190 improved from 0.0, saving to /home/gridsan/nchutisilp/projects/jepa/pretrain_models/video_classification_frozen/cf-pres-from-vjepa-16x2x3-fold2/jepa-best.pth.tar
INFO:root:Epoch 2
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 61.188) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.0687e-37, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.7458e-37, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.8438e-26, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([6.3699e-26, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.3656e-19, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.8666e-19, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.7252e-16, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([7.6054e-16, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.7907e-14, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([8.7907e-14, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.5827e-12, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.7519e-12, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.2744e-11, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0986e-11, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([1.0000e+00, 2.4536e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 2.4440e-06], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9994e-01, 5.8291e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9993e-01, 6.9222e-05], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.6260e-11, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([8.5074e-11, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.3884e-10, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([5.0907e-10, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0106e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1586e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.8070e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.3042e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.8487e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.6154e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([1.0000e+00, 4.2842e-14], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.8426e-14], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 1.5647e-10], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 2.3809e-11], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 2.2073e-08], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 7.7484e-09], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.4639e-17, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0191e-17, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8806)
Training Output torch.Size([2]) tensor([1.0136e-27, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.7438e-29, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 71.429% (loss: 31.078) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.7842e-31, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.8488e-31, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.4221e-14, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1213e-04, 9.9989e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.3525e-13, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([8.9928e-05, 9.9991e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9996)
Training Output torch.Size([2]) tensor([1.1621e-14, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1531e-14, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 1.0680e-17], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 2.1240e-17], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 3.0517e-23], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.0324e-22], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 7.7787e-09], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 8.7117e-09], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 3.3376e-25], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 3.1848e-25], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 1.1534e-25], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.1534e-25], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 6.0947e-21], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 6.0947e-21], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 3.7379e-12], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 3.7379e-12], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0025, 0.9975], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0025, 0.9975], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.5386e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.4858e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0038, 0.9962], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0038, 0.9962], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 2.1692e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 2.1607e-07], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 1.4085e-08], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.4307e-08], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9959e-01, 4.0527e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9960e-01, 4.0055e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.4922e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.5513e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.1496e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1541e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.3290e-05, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3525e-05, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 57.317% (loss: 0.000) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.7803e-04, 9.9972e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.8186e-04, 9.9972e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3103, 0.6897], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3089, 0.6911], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 7.2527e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 7.2244e-07], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 2.1311e-08], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 2.1478e-08], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8990)
Training Output torch.Size([2]) tensor([9.9999e-01, 6.9081e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 6.9081e-06], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2367, 0.7633], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2366, 0.7634], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.6996e-09, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.6996e-09, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.4920e-12, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([7.4920e-12, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.7651e-14, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([5.8103e-14, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.5363e-15, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.5605e-15, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0537e-16, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 36, Training ones: 69 / 69
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([7.0635e-14, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([7.1189e-14, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.000) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([7.1189e-14, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([7.1189e-14, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([7.0635e-14, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([7.1189e-14, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([7.1189e-14, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([7.1189e-14, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([7.1189e-14, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([7.0635e-14, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([7.1189e-14, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([7.1189e-14, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([7.1189e-14, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([7.1189e-14, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([7.1189e-14, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([7.1189e-14, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([7.1189e-14, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([7.0635e-14, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([7.1189e-14, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([7.1189e-14, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([7.1189e-14, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([7.1189e-14, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([7.1189e-14, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([7.1189e-14, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([7.0635e-14, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([7.1189e-14, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[    2] train: 57.547% test: 61.538%
INFO:root:Accuracy: 0.58095, Precision: 0.68116, Recall: 0.68116, F1: 0.68116
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.761904776096344
INFO:root:Epoch 3
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.1189e-14, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([7.1747e-14, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 15.133) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.5553e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([7.5848e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0544, 0.9456], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0543, 0.9457], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0030, 0.9970], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0030, 0.9970], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.5749e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.5749e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.3921e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3921e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.6401e-11, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([9.8303e-11, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.1981e-10, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.1733e-10, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.9371e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([8.7642e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.5617e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.5184e-06, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0030, 0.9970], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0030, 0.9970], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0291, 0.9709], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0290, 0.9710], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0089, 0.9911], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0089, 0.9911], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.2291e-04, 9.9988e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.2291e-04, 9.9988e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.4957e-05, 9.9996e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.4957e-05, 9.9996e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.8222e-04, 9.9962e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.8222e-04, 9.9962e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0389, 0.9611], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0389, 0.9611], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1379, 0.8621], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1377, 0.8623], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0377, 0.9623], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0377, 0.9623], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.3446e-04, 9.9907e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.3446e-04, 9.9907e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 76.190% (loss: 3.489) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.8312e-04, 9.9952e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.8596e-04, 9.9951e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0034, 0.9966], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0034, 0.9966], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1538, 0.8462], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1538, 0.8462], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3581, 0.6419], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3586, 0.6414], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9217, 0.0783], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9217, 0.0783], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9913e-01, 8.7107e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9913e-01, 8.7107e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9984e-01, 1.6475e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9983e-01, 1.6539e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9959e-01, 4.1407e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9959e-01, 4.1407e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6940)
Training Output torch.Size([2]) tensor([9.9923e-01, 7.7331e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9923e-01, 7.7331e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9916, 0.0084], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9916, 0.0084], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7860, 0.2140], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7863, 0.2137], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0683, 0.9317], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0683, 0.9317], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0174, 0.9826], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0174, 0.9826], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0283, 0.9717], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0284, 0.9716], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1706, 0.8294], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1706, 0.8294], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.1393) tensor(1.)
Training Output torch.Size([2]) tensor([0.2070, 0.7930], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2073, 0.7927], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0795, 0.9205], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0795, 0.9205], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0126, 0.9874], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0126, 0.9874], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0136, 0.9864], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0136, 0.9864], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1145, 0.8855], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1146, 0.8854], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 67.073% (loss: 0.122) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1564, 0.8436], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1562, 0.8438], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0455, 0.9545], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0456, 0.9544], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0546, 0.9454], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0546, 0.9454], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.2450) tensor(1.)
Training Output torch.Size([2]) tensor([0.2242, 0.7758], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2246, 0.7754], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8491, 0.1509], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8486, 0.1514], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9322, 0.0678], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9322, 0.0678], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8262, 0.1738], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8261, 0.1739], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3039, 0.6961], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3042, 0.6958], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2401, 0.7599], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2413, 0.7587], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0692, 0.9308], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0700, 0.9300], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0042, 0.9958], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0042, 0.9958], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8244)
Training Output torch.Size([2]) tensor([4.1986e-05, 9.9996e-01], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 20, Training ones: 69 / 85
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.8129e-05, 9.9998e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.8129e-05, 9.9998e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.000) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.8059e-05, 9.9998e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.8129e-05, 9.9998e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.8129e-05, 9.9998e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.8129e-05, 9.9998e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.8129e-05, 9.9998e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.8059e-05, 9.9998e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.8129e-05, 9.9998e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.8129e-05, 9.9998e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.8129e-05, 9.9998e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.8129e-05, 9.9998e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.8129e-05, 9.9998e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.8129e-05, 9.9998e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.8129e-05, 9.9998e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.8129e-05, 9.9998e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.8129e-05, 9.9998e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.8129e-05, 9.9998e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.8129e-05, 9.9998e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.8129e-05, 9.9998e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.8129e-05, 9.9998e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.8129e-05, 9.9998e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.8129e-05, 9.9998e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.8129e-05, 9.9998e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.8129e-05, 9.9998e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.8129e-05, 9.9998e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[    3] train: 63.208% test: 61.538%
INFO:root:Accuracy: 0.63810, Precision: 0.68235, Recall: 0.84058, F1: 0.75325
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.761904776096344
INFO:root:Epoch 4
Training min-max: tensor(0.) tensor(0.7490)
Training Output torch.Size([2]) tensor([1.8129e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.8200e-05, 9.9998e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 5.457) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0035, 0.9965], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0036, 0.9964], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0353) tensor(0.5217)
Training Output torch.Size([2]) tensor([0.0321, 0.9679], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0323, 0.9677], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.2561e-04, 9.9977e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.1910e-04, 9.9978e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.4536e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.4536e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.1373e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([8.1056e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.8717e-09, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([5.9177e-09, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.1232e-10, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([7.0677e-10, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.2577e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.2577e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8157)
Training Output torch.Size([2]) tensor([1.5059e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.5148e-05, 9.9998e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0053, 0.9947], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0053, 0.9947], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9796, 0.0204], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9797, 0.0203], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9953, 0.0047], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9953, 0.0047], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7769, 0.2231], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7762, 0.2238], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.0212e-04, 9.9960e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.0291e-04, 9.9960e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0728, 0.9272], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0728, 0.9272], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2110, 0.7890], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2111, 0.7889], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0992, 0.9008], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0992, 0.9008], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0076, 0.9924], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0076, 0.9924], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 61.905% (loss: 2.443) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.5098)
Training Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0211, 0.9789], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0211, 0.9789], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2796, 0.7204], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2796, 0.7204], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4768, 0.5232], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4768, 0.5232], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.3059) tensor(0.9834)
Training Output torch.Size([2]) tensor([0.8970, 0.1030], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8969, 0.1031], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9968, 0.0032], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9968, 0.0032], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9914e-01, 8.5590e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9915e-01, 8.5423e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9975, 0.0025], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9975, 0.0025], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9971, 0.0029], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9971, 0.0029], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9803, 0.0197], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9804, 0.0196], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6886, 0.3114], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6880, 0.3120], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0695, 0.9305], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0695, 0.9305], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0310, 0.9690], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0309, 0.9691], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.2266) tensor(1.)
Training Output torch.Size([2]) tensor([0.0878, 0.9122], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0878, 0.9122], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5055, 0.4945], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5054, 0.4946], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5858, 0.4142], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5862, 0.4138], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3471, 0.6529], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3472, 0.6528], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0849, 0.9151], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0856, 0.9144], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3985, 0.6015], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3990, 0.6010], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6190, 0.3810], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6190, 0.3810], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 52.439% (loss: 0.965) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3506, 0.6494], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3509, 0.6491], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0561, 0.9439], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0562, 0.9438], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0528, 0.9472], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0529, 0.9471], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9230)
Training Output torch.Size([2]) tensor([0.3298, 0.6702], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3300, 0.6700], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9740, 0.0260], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9740, 0.0260], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9953, 0.0047], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9953, 0.0047], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.1137) tensor(1.)
Training Output torch.Size([2]) tensor([0.9892, 0.0108], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9892, 0.0108], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9960)
Training Output torch.Size([2]) tensor([0.8332, 0.1668], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8332, 0.1668], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6842, 0.3158], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6840, 0.3160], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1487, 0.8513], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1486, 0.8514], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0030, 0.9970], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0029, 0.9971], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.3631e-05, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 36, Training ones: 69 / 69
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.0109e-06, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0109e-06, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.000) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.0109e-06, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0109e-06, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.0109e-06, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0109e-06, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.0109e-06, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0109e-06, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.0109e-06, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0109e-06, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.0109e-06, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0109e-06, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.0109e-06, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0069e-06, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.0109e-06, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0109e-06, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.0109e-06, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0109e-06, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.0109e-06, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0109e-06, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.0109e-06, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0109e-06, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.0109e-06, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0109e-06, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.0109e-06, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0109e-06, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[    4] train: 51.887% test: 61.538%
INFO:root:Accuracy: 0.52381, Precision: 0.63768, Recall: 0.63768, F1: 0.63768
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.761904776096344
INFO:root:Epoch 5
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0109e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0148e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 6.902) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.1410e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1366e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.4537e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.4424e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.9561e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.9485e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.7265e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.7265e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2706) tensor(1.)
Training Output torch.Size([2]) tensor([3.9055e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.9055e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.5508e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.5076e-06, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.7974e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.7974e-06, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.9578e-05, 9.9991e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.0280e-05, 9.9991e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.0353) tensor(1.)
Training Output torch.Size([2]) tensor([0.0043, 0.9957], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0043, 0.9957], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0238, 0.9762], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0237, 0.9763], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2918, 0.7082], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2909, 0.7091], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4998, 0.5002], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5005, 0.4995], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3670, 0.6330], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3674, 0.6326], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1057, 0.8943], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1057, 0.8943], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0911, 0.9089], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0911, 0.9089], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1979, 0.8021], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1987, 0.8013], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5319, 0.4681], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5322, 0.4678], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6043, 0.3957], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6044, 0.3956], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.4667, 0.5333], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4667, 0.5333], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2267, 0.7733], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2267, 0.7733], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 64.286% (loss: 0.871) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1916, 0.8084], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1918, 0.8082], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2667, 0.7333], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2666, 0.7334], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4596, 0.5404], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4596, 0.5404], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.3412)
Training Output torch.Size([2]) tensor([0.5025, 0.4975], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5029, 0.4971], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6595, 0.3405], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6596, 0.3404], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9998)
Training Output torch.Size([2]) tensor([0.8883, 0.1117], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8888, 0.1112], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9219, 0.0781], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9216, 0.0784], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8400, 0.1600], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8400, 0.1600], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6696)
Training Output torch.Size([2]) tensor([0.8770, 0.1230], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8769, 0.1231], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7580, 0.2420], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7581, 0.2419], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3768, 0.6232], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3770, 0.6230], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3836, 0.6164], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3837, 0.6163], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6180, 0.3820], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6179, 0.3821], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6693, 0.3307], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6693, 0.3307], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5572, 0.4428], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5569, 0.4431], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5686)
Training Output torch.Size([2]) tensor([0.3105, 0.6895], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3107, 0.6893], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0786, 0.9214], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0786, 0.9214], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0039, 0.9961], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0039, 0.9961], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0039, 0.9961], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0039, 0.9961], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 60.976% (loss: 0.004) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0055, 0.9945], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0055, 0.9945], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0083, 0.9917], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0083, 0.9917], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4966, 0.5034], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4978, 0.5022], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9934, 0.0066], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9934, 0.0066], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9984, 0.0016], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9984, 0.0016], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9947, 0.0053], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9947, 0.0053], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9061, 0.0939], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9066, 0.0934], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8235, 0.1765], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8236, 0.1764], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3944, 0.6056], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3944, 0.6056], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0386, 0.9614], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0386, 0.9614], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8391)
Training Output torch.Size([2]) tensor([9.2719e-04, 9.9907e-01], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 35, Training ones: 69 / 70
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.7483e-04, 9.9963e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.7556e-04, 9.9962e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.000) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.7556e-04, 9.9962e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.7556e-04, 9.9962e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.7556e-04, 9.9962e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.7556e-04, 9.9962e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.7556e-04, 9.9962e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.7556e-04, 9.9962e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.7556e-04, 9.9962e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.7556e-04, 9.9962e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.7556e-04, 9.9962e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.7556e-04, 9.9962e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.7556e-04, 9.9962e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.7556e-04, 9.9962e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.7556e-04, 9.9962e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.7556e-04, 9.9962e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.7556e-04, 9.9962e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.7556e-04, 9.9962e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.7556e-04, 9.9962e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.7556e-04, 9.9962e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.7556e-04, 9.9962e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.7556e-04, 9.9962e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.7556e-04, 9.9962e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.7556e-04, 9.9962e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.7556e-04, 9.9962e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.7556e-04, 9.9962e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[    5] train: 58.491% test: 61.538%
INFO:root:Accuracy: 0.59048, Precision: 0.68571, Recall: 0.69565, F1: 0.69065
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.761904776096344
INFO:root:Epoch 6
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.7556e-04, 9.9962e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.7483e-04, 9.9963e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 3.946) [mem: 2.63e+04]
Training min-max: tensor(0.0933) tensor(1.)
Training Output torch.Size([2]) tensor([0.0023, 0.9977], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0023, 0.9977], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0095, 0.9905], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0096, 0.9904], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0064, 0.9936], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0064, 0.9936], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.9185e-04, 9.9981e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.9260e-04, 9.9981e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.8680e-05, 9.9996e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.8680e-05, 9.9996e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.4422e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.3687e-06, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.6530e-04, 9.9973e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.6791e-04, 9.9973e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0695, 0.9305], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0695, 0.9305], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1245, 0.8755], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1246, 0.8754], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7015, 0.2985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7022, 0.2978], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6621, 0.3379], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6633, 0.3367], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([0.0915, 0.9085], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0913, 0.9087], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7803)
Training Output torch.Size([2]) tensor([4.0686e-04, 9.9959e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.0765e-04, 9.9959e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.1637e-04, 9.9988e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1683e-04, 9.9988e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3181, 0.6819], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3181, 0.6819], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6665, 0.3335], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6669, 0.3331], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2666, 0.7334], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2678, 0.7322], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0124, 0.9876], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0125, 0.9875], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 61.905% (loss: 2.200) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0056, 0.9944], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0056, 0.9944], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0133, 0.9867], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0133, 0.9867], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0827, 0.9173], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0827, 0.9173], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1434, 0.8566], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1434, 0.8566], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4131, 0.5869], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4133, 0.5867], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8511, 0.1489], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8514, 0.1486], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9310, 0.0690], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9312, 0.0688], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9113, 0.0887], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9112, 0.0888], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9500, 0.0500], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9500, 0.0500], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9227, 0.0773], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9225, 0.0775], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7647, 0.2353], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7647, 0.2353], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3731, 0.6269], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3730, 0.6270], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4039)
Training Output torch.Size([2]) tensor([0.2987, 0.7013], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2987, 0.7013], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7645)
Training Output torch.Size([2]) tensor([0.4486, 0.5514], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4486, 0.5514], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.7611, 0.2389], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7611, 0.2389], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6156)
Training Output torch.Size([2]) tensor([0.8057, 0.1943], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8056, 0.1944], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6629, 0.3371], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6631, 0.3369], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3561, 0.6439], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3561, 0.6439], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3145, 0.6855], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3146, 0.6854], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4858, 0.5142], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4855, 0.5145], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 50.000% (loss: 0.665) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5029, 0.4971], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5029, 0.4971], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3717, 0.6283], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3718, 0.6282], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.4090, 0.5910], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4092, 0.5908], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5769, 0.4231], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5771, 0.4229], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5864, 0.4136], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5865, 0.4135], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4897, 0.5103], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4897, 0.5103], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4634, 0.5366], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4634, 0.5366], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3751, 0.6249], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3750, 0.6250], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4002, 0.5998], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4002, 0.5998], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3242, 0.6758], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3240, 0.6760], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1460, 0.8540], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1460, 0.8540], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0216, 0.9784], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 30, Training ones: 69 / 75
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0065, 0.9935], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0065, 0.9935], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.007) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0065, 0.9935], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0065, 0.9935], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0065, 0.9935], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0065, 0.9935], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0065, 0.9935], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0065, 0.9935], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0065, 0.9935], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0065, 0.9935], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0065, 0.9935], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0065, 0.9935], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0065, 0.9935], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0065, 0.9935], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0065, 0.9935], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0065, 0.9935], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0065, 0.9935], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0065, 0.9935], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0065, 0.9935], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0065, 0.9935], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0065, 0.9935], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0065, 0.9935], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0065, 0.9935], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0065, 0.9935], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0065, 0.9935], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0065, 0.9935], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[    6] train: 50.000% test: 61.538%
INFO:root:Accuracy: 0.50476, Precision: 0.61333, Recall: 0.66667, F1: 0.63889
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.761904776096344
INFO:root:Epoch 7
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0065, 0.9935], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0065, 0.9935], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 2.521) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0059, 0.9941], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0058, 0.9942], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0031, 0.9969], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0031, 0.9969], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.1407e-04, 9.9959e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.1732e-04, 9.9958e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.4175e-04, 9.9986e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.4147e-04, 9.9986e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.9665e-05, 9.9995e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.9665e-05, 9.9995e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.8271e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.8415e-05, 9.9998e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.9289e-05, 9.9996e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.8831e-05, 9.9996e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.4667e-04, 9.9965e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.4464e-04, 9.9966e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0228, 0.9772], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0226, 0.9774], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4980)
Training Output torch.Size([2]) tensor([0.0598, 0.9402], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0598, 0.9402], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0591, 0.9409], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0592, 0.9408], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0014) tensor(0.6348)
Training Output torch.Size([2]) tensor([0.0262, 0.9738], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0262, 0.9738], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0315, 0.9685], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0315, 0.9685], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0834, 0.9166], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0833, 0.9167], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2904, 0.7096], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2909, 0.7091], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4024, 0.5976], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4022, 0.5978], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3470, 0.6530], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3471, 0.6529], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1920, 0.8080], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1920, 0.8080], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 76.190% (loss: 0.932) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.1761, 0.8239], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1761, 0.8239], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2573, 0.7427], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2573, 0.7427], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4651, 0.5349], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4653, 0.5347], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.5125, 0.4875], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5124, 0.4876], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6691, 0.3309], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6691, 0.3309], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8754, 0.1246], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8754, 0.1246], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8936, 0.1064], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8935, 0.1065], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7269, 0.2731], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7267, 0.2733], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8348, 0.1652], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8349, 0.1651], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7372, 0.2628], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7371, 0.2629], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7718)
Training Output torch.Size([2]) tensor([0.3005, 0.6995], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3005, 0.6995], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4506, 0.5494], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4503, 0.5497], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9213, 0.0787], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9213, 0.0787], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7832, 0.2168], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7840, 0.2160], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4995, 0.5005], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4995, 0.5005], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3950, 0.6050], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3951, 0.6049], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0392) tensor(1.)
Training Output torch.Size([2]) tensor([0.1811, 0.8189], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1808, 0.8192], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0272, 0.9728], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0273, 0.9727], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0082, 0.9918], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0081, 0.9919], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7569)
Training Output torch.Size([2]) tensor([0.0086, 0.9914], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0086, 0.9914], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 69.512% (loss: 0.009) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.3936e-04, 9.9926e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.4370e-04, 9.9926e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0075, 0.9925], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0075, 0.9925], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1334, 0.8666], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1334, 0.8666], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.0353) tensor(0.6863)
Training Output torch.Size([2]) tensor([0.8261, 0.1739], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8259, 0.1741], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9451, 0.0549], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9451, 0.0549], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9245, 0.0755], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9245, 0.0755], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9631, 0.0369], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9630, 0.0370], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7843)
Training Output torch.Size([2]) tensor([0.9366, 0.0634], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9366, 0.0634], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8691)
Training Output torch.Size([2]) tensor([0.7251, 0.2749], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7251, 0.2749], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1626, 0.8374], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 30, Training ones: 69 / 75
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0857, 0.9143], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0857, 0.9143], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.090) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0856, 0.9144], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0856, 0.9144], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0857, 0.9143], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0857, 0.9143], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0857, 0.9143], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0857, 0.9143], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0857, 0.9143], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0857, 0.9143], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0857, 0.9143], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0857, 0.9143], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0856, 0.9144], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0857, 0.9143], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0857, 0.9143], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0857, 0.9143], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0857, 0.9143], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0857, 0.9143], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0857, 0.9143], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0856, 0.9144], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0857, 0.9143], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0857, 0.9143], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0856, 0.9144], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0857, 0.9143], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0857, 0.9143], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0856, 0.9144], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[    7] train: 61.321% test: 61.538%
INFO:root:Accuracy: 0.61905, Precision: 0.69333, Recall: 0.75362, F1: 0.72222
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.761904776096344
INFO:root:Epoch 8
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0856, 0.9144], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0855, 0.9145], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 1.274) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1935, 0.8065], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1938, 0.8062], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1123, 0.8877], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1124, 0.8876], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0189, 0.9811], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0189, 0.9811], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9989)
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.8519e-05, 9.9994e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.8978e-05, 9.9994e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.4466e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.4466e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.2293e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.2293e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9996)
Training Output torch.Size([2]) tensor([5.6484e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([5.6264e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.9773e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.9657e-05, 9.9997e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.2542e-04, 9.9947e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.2542e-04, 9.9947e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0369, 0.9631], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0369, 0.9631], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0683, 0.9317], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0682, 0.9318], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0190, 0.9810], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0190, 0.9810], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8279)
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.3218e-04, 9.9927e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.3218e-04, 9.9927e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0023, 0.9977], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0278, 0.9722], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0279, 0.9721], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0501, 0.9499], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0502, 0.9498], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0232, 0.9768], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0232, 0.9768], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0038, 0.9962], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0038, 0.9962], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 76.190% (loss: 2.785) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0025, 0.9975], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0025, 0.9975], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.0059, 0.9941], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0059, 0.9941], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0337, 0.9663], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0339, 0.9661], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0528, 0.9472], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0528, 0.9472], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1720, 0.8280], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1721, 0.8279], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5908, 0.4092], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5895, 0.4105], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7087, 0.2913], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7087, 0.2913], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5293, 0.4707], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5294, 0.4706], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5802, 0.4198], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5801, 0.4199], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4382, 0.5618], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4383, 0.5617], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2112, 0.7888], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2108, 0.7892], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2069, 0.7931], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2069, 0.7931], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3547, 0.6453], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3546, 0.6454], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5589, 0.4411], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5589, 0.4411], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5901, 0.4099], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5901, 0.4099], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5134, 0.4866], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5135, 0.4865], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7373)
Training Output torch.Size([2]) tensor([0.3512, 0.6488], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3512, 0.6488], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9999)
Training Output torch.Size([2]) tensor([0.1598, 0.8402], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1598, 0.8402], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1033, 0.8967], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1035, 0.8965], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1130, 0.8870], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1128, 0.8872], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 62.195% (loss: 0.120) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0802, 0.9198], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0802, 0.9198], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0333, 0.9667], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0333, 0.9667], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0273, 0.9727], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0272, 0.9728], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0448, 0.9552], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0448, 0.9552], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1166, 0.8834], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1166, 0.8834], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3163, 0.6837], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3161, 0.6839], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6057, 0.3943], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6057, 0.3943], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6822, 0.3178], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6821, 0.3179], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7870, 0.2130], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7873, 0.2127], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.2549)
Training Output torch.Size([2]) tensor([0.7162, 0.2838], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7165, 0.2835], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3172, 0.6828], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3174, 0.6826], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 22, Training ones: 69 / 83
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1592, 0.8408], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1592, 0.8408], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.173) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1592, 0.8408], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1597, 0.8403], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1597, 0.8403], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1597, 0.8403], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1597, 0.8403], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1597, 0.8403], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1597, 0.8403], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1592, 0.8408], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1597, 0.8403], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1597, 0.8403], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1592, 0.8408], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1597, 0.8403], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1592, 0.8408], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1597, 0.8403], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1603, 0.8397], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1597, 0.8403], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1592, 0.8408], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1592, 0.8408], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1597, 0.8403], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1597, 0.8403], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1592, 0.8408], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1597, 0.8403], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1592, 0.8408], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1597, 0.8403], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[    8] train: 57.547% test: 61.538%
INFO:root:Accuracy: 0.58095, Precision: 0.65060, Recall: 0.78261, F1: 0.71053
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.761904776096344
INFO:root:Epoch 9
Training min-max: tensor(0.) tensor(0.9999)
Training Output torch.Size([2]) tensor([0.1597, 0.8403], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1597, 0.8403], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 1.004) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9999e-01, 1.0847e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 1.0868e-05], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9999e-01, 6.3920e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 6.2684e-06], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7410)
Training Output torch.Size([2]) tensor([0.9076, 0.0924], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9076, 0.0924], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0542, 0.9458], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0542, 0.9458], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0231, 0.9769], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0231, 0.9769], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.2153e-04, 9.9918e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.2314e-04, 9.9918e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0330e-05, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0290e-05, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.9177e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.9370e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.1040e-04, 9.9989e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1126e-04, 9.9989e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2500, 0.7500], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2497, 0.7503], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6713, 0.3287], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6725, 0.3275], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3970, 0.6030], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4000, 0.6000], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0163, 0.9837], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0163, 0.9837], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0084, 0.9916], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0084, 0.9916], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0589, 0.9411], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0589, 0.9411], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8223, 0.1777], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8195, 0.1805], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9424, 0.0576], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9439, 0.0561], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8124, 0.1876], device='cuda:0')
Training Output torch.Size([2]) tensor([4.9415e-13, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.1531e-14, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1897e-14, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 45.238% (loss: 16.047) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.8550)
Training Output torch.Size([2]) tensor([5.2137e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([5.2137e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 3.4528e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 3.4193e-07], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 1.0671e-10], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.0671e-10], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.5296e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.5296e-05, 9.9998e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.6181e-05, 9.9993e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.6181e-05, 9.9993e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7690)
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0548, 0.9452], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0549, 0.9451], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2091, 0.7909], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2091, 0.7909], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6738, 0.3262], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6741, 0.3259], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7673, 0.2327], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7663, 0.2337], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6438, 0.3562], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6440, 0.3560], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4902)
Training Output torch.Size([2]) tensor([0.3759, 0.6241], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3762, 0.6238], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7835)
Training Output torch.Size([2]) tensor([0.3518, 0.6482], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3522, 0.6478], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8225)
Training Output torch.Size([2]) tensor([0.4749, 0.5251], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4749, 0.5251], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7124, 0.2876], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7120, 0.2880], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9984)
Training Output torch.Size([2]) tensor([0.6838, 0.3162], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6859, 0.3141], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1214, 0.8786], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1216, 0.8784], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.8786e-04, 9.9951e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.9072e-04, 9.9951e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.3905e-04, 9.9956e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.1977e-04, 9.9958e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0045, 0.9955], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0045, 0.9955], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 41.463% (loss: 0.005) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0030, 0.9970], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0030, 0.9970], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7018)
Training Output torch.Size([2]) tensor([2.0562e-04, 9.9979e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.0947e-04, 9.9979e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.9741e-04, 9.9970e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.9654e-04, 9.9970e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0071, 0.9929], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0071, 0.9929], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5487, 0.4513], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5448, 0.4552], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9119)
Training Output torch.Size([2]) tensor([0.8575, 0.1425], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8580, 0.1420], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6650, 0.3350], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6645, 0.3355], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.1232, 0.8768], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1227, 0.8773], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1053, 0.8947], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1053, 0.8947], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([0.0301, 0.9699], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0301, 0.9699], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8788)
Training Output torch.Size([2]) tensor([0.0029, 0.9971], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0028, 0.9972], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9989)
Training Output torch.Size([2]) tensor([9.7806e-05, 9.9990e-01], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 33, Training ones: 69 / 72
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([5.3283e-05, 9.9995e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([5.3283e-05, 9.9995e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.000) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([5.3283e-05, 9.9995e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([5.3283e-05, 9.9995e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([5.3283e-05, 9.9995e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([5.3283e-05, 9.9995e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([5.3491e-05, 9.9995e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([5.3283e-05, 9.9995e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([5.3283e-05, 9.9995e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([5.3283e-05, 9.9995e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([5.3283e-05, 9.9995e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([5.3283e-05, 9.9995e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([5.3283e-05, 9.9995e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([5.3283e-05, 9.9995e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([5.3283e-05, 9.9995e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([5.3283e-05, 9.9995e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([5.3283e-05, 9.9995e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([5.3283e-05, 9.9995e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([5.3283e-05, 9.9995e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([5.3283e-05, 9.9995e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([5.3283e-05, 9.9995e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([5.3283e-05, 9.9995e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([5.3283e-05, 9.9995e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([5.3283e-05, 9.9995e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([5.3283e-05, 9.9995e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([5.3283e-05, 9.9995e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[    9] train: 43.396% test: 61.538%
INFO:root:Accuracy: 0.43810, Precision: 0.56944, Recall: 0.59420, F1: 0.58156
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.761904776096344
INFO:root:Epoch 10
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.3075e-05, 9.9995e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.2662e-05, 9.9995e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 4.926) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.5298e-04, 9.9955e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.5209e-04, 9.9955e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0023, 0.9977], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.2719e-04, 9.9907e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.2719e-04, 9.9907e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.3176) tensor(0.9999)
Training Output torch.Size([2]) tensor([1.7537e-04, 9.9982e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.7606e-04, 9.9982e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.1942e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.1817e-05, 9.9997e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.4139e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.2899e-06, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.3522e-05, 9.9994e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.5538e-05, 9.9993e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0098, 0.9902], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0096, 0.9904], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0189, 0.9811], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0189, 0.9811], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1336, 0.8664], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1334, 0.8666], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8867)
Training Output torch.Size([2]) tensor([0.1067, 0.8933], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1065, 0.8935], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0247, 0.9753], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0245, 0.9755], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.1125e-04, 9.9959e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.1205e-04, 9.9959e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.8184e-04, 9.9932e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.9663e-04, 9.9930e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0049, 0.9951], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0049, 0.9951], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0127, 0.9873], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0127, 0.9873], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0080, 0.9920], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0079, 0.9921], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 76.190% (loss: 3.206) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0095, 0.9905], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0095, 0.9905], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.2510) tensor(1.)
Training Output torch.Size([2]) tensor([0.1654, 0.8346], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1632, 0.8368], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3283, 0.6717], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3289, 0.6711], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7848, 0.2152], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7843, 0.2157], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.9844, 0.0156], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9844, 0.0156], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9912, 0.0088], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9911, 0.0089], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9516, 0.0484], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9515, 0.0485], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7371)
Training Output torch.Size([2]) tensor([0.9492, 0.0508], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9495, 0.0505], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7062, 0.2938], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7058, 0.2942], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0236, 0.9764], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0236, 0.9764], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0065, 0.9935], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0065, 0.9935], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.3098) tensor(1.)
Training Output torch.Size([2]) tensor([0.0467, 0.9533], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0466, 0.9534], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5151, 0.4849], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5137, 0.4863], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.6077, 0.3923], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6074, 0.3926], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3522, 0.6478], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3522, 0.6478], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.0656, 0.9344], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0656, 0.9344], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.8547e-04, 9.9921e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.7331e-04, 9.9923e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0039, 0.9961], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0038, 0.9962], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 64.634% (loss: 0.004) [mem: 2.63e+04]
Training min-max: tensor(0.0157) tensor(1.)
Training Output torch.Size([2]) tensor([0.0053, 0.9947], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0058, 0.9942], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0058, 0.9942], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0763, 0.9237], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0765, 0.9235], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6524, 0.3476], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6491, 0.3509], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6360, 0.3640], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6361, 0.3639], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7020)
Training Output torch.Size([2]) tensor([0.3352, 0.6648], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3356, 0.6644], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0453, 0.9547], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0453, 0.9547], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9111)
Training Output torch.Size([2]) tensor([0.0290, 0.9710], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0290, 0.9710], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.6898e-04, 9.9983e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.6964e-04, 9.9983e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.7270e-06, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 20, Training ones: 69 / 85
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([6.4139e-06, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([6.3889e-06, 9.9999e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.000) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([6.4139e-06, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([6.3889e-06, 9.9999e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([6.3889e-06, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([6.3889e-06, 9.9999e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([6.3889e-06, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([6.3889e-06, 9.9999e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([6.4139e-06, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([6.3889e-06, 9.9999e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([6.3640e-06, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([6.3889e-06, 9.9999e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([6.4139e-06, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([6.3889e-06, 9.9999e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([6.3889e-06, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([6.3889e-06, 9.9999e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([6.4139e-06, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([6.3640e-06, 9.9999e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([6.3889e-06, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([6.4139e-06, 9.9999e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([6.4139e-06, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([6.4139e-06, 9.9999e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([6.3889e-06, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([6.4139e-06, 9.9999e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([6.3640e-06, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([6.4139e-06, 9.9999e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[   10] train: 63.208% test: 61.538%
INFO:root:Accuracy: 0.63810, Precision: 0.68235, Recall: 0.84058, F1: 0.75325
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.761904776096344
INFO:root:Epoch 11
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.4390e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.3889e-06, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 5.980) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.9899)
Training Output torch.Size([2]) tensor([1.8851e-04, 9.9981e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.9336e-04, 9.9981e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0033, 0.9967], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0035, 0.9965], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0080, 0.9920], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0077, 0.9923], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.5925e-04, 9.9914e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.8218e-04, 9.9912e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7632)
Training Output torch.Size([2]) tensor([1.2906e-04, 9.9987e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.2932e-04, 9.9987e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.8689e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.8689e-05, 9.9997e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.1556e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.2840e-06, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.5487e-05, 9.9995e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.5576e-05, 9.9995e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0142, 0.9858], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0142, 0.9858], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1915, 0.8085], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1906, 0.8094], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2415, 0.7585], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2412, 0.7588], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0973, 0.9027], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0975, 0.9025], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0120, 0.9880], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0120, 0.9880], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0056, 0.9944], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0107, 0.9893], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0106, 0.9894], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0520, 0.9480], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0523, 0.9477], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0710, 0.9290], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0708, 0.9292], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2980) tensor(1.)
Training Output torch.Size([2]) tensor([0.0376, 0.9624], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0376, 0.9624], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0081, 0.9919], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0081, 0.9919], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 76.190% (loss: 2.412) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0055, 0.9945], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0055, 0.9945], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0111, 0.9889], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0112, 0.9888], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7291)
Training Output torch.Size([2]) tensor([0.0457, 0.9543], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0457, 0.9543], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0648, 0.9352], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0643, 0.9357], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1539, 0.8461], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1536, 0.8464], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3788, 0.6212], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3788, 0.6212], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6639, 0.3361], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6647, 0.3353], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7018, 0.2982], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7021, 0.2979], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8015, 0.1985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8026, 0.1974], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7325, 0.2675], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7329, 0.2671], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4070, 0.5930], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4069, 0.5931], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3560, 0.6440], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3566, 0.6434], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5718, 0.4282], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5718, 0.4282], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4885, 0.5115], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4894, 0.5106], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9948)
Training Output torch.Size([2]) tensor([0.3981, 0.6019], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3978, 0.6022], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0239, 0.9761], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0239, 0.9761], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.3735e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.3653e-06, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.1744e-09, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1976e-09, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.4873e-10, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.5166e-10, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.0886e-09, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([8.1202e-09, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 64.634% (loss: 0.000) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.0698e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.0698e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.7775e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.8048e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9169, 0.0831], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9167, 0.0833], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9891, 0.0109], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9892, 0.0108], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7231, 0.2769], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7241, 0.2759], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0085, 0.9915], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0085, 0.9915], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0062e-04, 9.9990e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1390e-04, 9.9989e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.6475e-04, 9.9984e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.6046e-04, 9.9984e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.1797e-04, 9.9968e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.2519e-04, 9.9967e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.0211e-04, 9.9950e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.1426e-04, 9.9949e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7020)
Training Output torch.Size([2]) tensor([5.4875e-04, 9.9945e-01], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 16, Training ones: 69 / 89
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.003) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[   11] train: 63.208% test: 61.538%
INFO:root:Accuracy: 0.63810, Precision: 0.67416, Recall: 0.86957, F1: 0.75949
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.761904776096344
INFO:root:Epoch 12
Training min-max: tensor(0.) tensor(0.9994)
Training Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 2.873) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0365, 0.9635], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0367, 0.9633], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9999)
Training Output torch.Size([2]) tensor([0.0801, 0.9199], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0801, 0.9199], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0612, 0.9388], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0612, 0.9388], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0188, 0.9812], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0189, 0.9811], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.5583e-04, 9.9984e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.5697e-04, 9.9984e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.1434e-05, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1412e-05, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.1833e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.1274e-06, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.9443e-05, 9.9996e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.9443e-05, 9.9996e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.7248e-04, 9.9983e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.7248e-04, 9.9983e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0039, 0.9961], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0040, 0.9960], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0248, 0.9752], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0249, 0.9751], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0184, 0.9816], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0183, 0.9817], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0023, 0.9977], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0023, 0.9977], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0191, 0.9809], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0193, 0.9807], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2484, 0.7516], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2452, 0.7548], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.7114e-05, 9.9995e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.8373e-05, 9.9995e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.1726e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1749e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.4011e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.4057e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 76.190% (loss: 7.621) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.4876e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.5023e-05, 9.9997e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0993, 0.9007], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0994, 0.9006], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9955e-01, 4.4852e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9955e-01, 4.4852e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9998e-01, 2.3645e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 2.3622e-05], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9772)
Training Output torch.Size([2]) tensor([9.9999e-01, 8.4971e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 8.4805e-06], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9999e-01, 1.2607e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 1.2607e-05], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9969, 0.0031], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9969, 0.0031], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0099, 0.9901], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0099, 0.9901], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.9773e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.9541e-05, 9.9997e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.6571e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.6571e-05, 9.9998e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.8011e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.8701e-06, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.4953e-04, 9.9925e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.4953e-04, 9.9925e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7773, 0.2227], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7773, 0.2227], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9804, 0.0196], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9804, 0.0196], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8652, 0.1348], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8652, 0.1348], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0155, 0.9845], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0155, 0.9845], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7212)
Training Output torch.Size([2]) tensor([1.1189e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1189e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.1895e-10, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.1980e-10, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6824)
Training Output torch.Size([2]) tensor([2.9501e-11, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.9908e-11, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.3478e-09, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3425e-09, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 64.634% (loss: 0.000) [mem: 2.63e+04]
Training min-max: tensor(0.0706) tensor(1.)
Training Output torch.Size([2]) tensor([3.4456e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.4456e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.3898e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([5.3898e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.3686)
Training Output torch.Size([2]) tensor([2.2871e-04, 9.9977e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.2871e-04, 9.9977e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1661, 0.8339], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1659, 0.8341], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9737, 0.0263], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9737, 0.0263], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9332, 0.0668], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9332, 0.0668], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0222, 0.9778], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0222, 0.9778], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.3059) tensor(1.)
Training Output torch.Size([2]) tensor([1.0142e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0132e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9836e-12, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0003e-11, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.7275e-16, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([9.8038e-16, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7919)
Training Output torch.Size([2]) tensor([1.2630e-19, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.2532e-19, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.6308e-23, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 20, Training ones: 69 / 85
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([7.6720e-23, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([7.6720e-23, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.000) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([7.6720e-23, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([7.6123e-23, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([7.6720e-23, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([7.6720e-23, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([7.6720e-23, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([7.6123e-23, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([7.6720e-23, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([7.6720e-23, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([7.6720e-23, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([7.6720e-23, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([7.6720e-23, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([7.6720e-23, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([7.6720e-23, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([7.6720e-23, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([7.6123e-23, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([7.6123e-23, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([7.6720e-23, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([7.6720e-23, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([7.6720e-23, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([7.6720e-23, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([7.6720e-23, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([7.6720e-23, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([7.6720e-23, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([7.6720e-23, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[   12] train: 63.208% test: 61.538%
INFO:root:Accuracy: 0.63810, Precision: 0.68235, Recall: 0.84058, F1: 0.75325
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.761904776096344
INFO:root:Epoch 13
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.6123e-23, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([7.6720e-23, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 25.469) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0170e-18, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0170e-18, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.6546e-15, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.6546e-15, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.8217e-12, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.8217e-12, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.1875e-10, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.1875e-10, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.9504e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.9504e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.7741e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.7741e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.2982e-05, 9.9996e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.2898e-05, 9.9996e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0763, 0.9237], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0760, 0.9240], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9966e-01, 3.3699e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9966e-01, 3.4030e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 4.0889e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 4.0650e-06], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9999e-01, 5.0393e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 5.0393e-06], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9983e-01, 1.7415e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9983e-01, 1.7306e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9998)
Training Output torch.Size([2]) tensor([0.9622, 0.0378], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9623, 0.0377], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.4286) tensor(1.)
Training Output torch.Size([2]) tensor([0.0597, 0.9403], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0597, 0.9403], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0063, 0.9937], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0063, 0.9937], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0081, 0.9919], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0081, 0.9919], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0482, 0.9518], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0482, 0.9518], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0571, 0.9429], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0571, 0.9429], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0199, 0.9801], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0199, 0.9801], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 57.143% (loss: 3.315) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.9694e-04, 9.9910e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.9869e-04, 9.9910e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0084, 0.9916], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0084, 0.9916], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5017, 0.4983], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5032, 0.4968], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6227, 0.3773], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6227, 0.3773], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9661, 0.0339], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9661, 0.0339], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9982e-01, 1.8477e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9982e-01, 1.8352e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9998e-01, 1.8586e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 1.8641e-05], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9993e-01, 6.8499e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9993e-01, 6.8868e-05], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9965e-01, 3.4701e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9965e-01, 3.4751e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9724, 0.0276], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9725, 0.0275], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0497, 0.9503], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0499, 0.9501], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.3951e-04, 9.9916e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.4156e-04, 9.9916e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9980)
Training Output torch.Size([2]) tensor([0.0053, 0.9947], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0053, 0.9947], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1498, 0.8502], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1498, 0.8502], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2922, 0.7078], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2926, 0.7074], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1289, 0.8711], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1289, 0.8711], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0124, 0.9876], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0123, 0.9877], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0095, 0.9905], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0095, 0.9905], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0380, 0.9620], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0380, 0.9620], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 57.317% (loss: 0.039) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0281, 0.9719], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0281, 0.9719], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0063, 0.9937], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0063, 0.9937], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.2745) tensor(1.)
Training Output torch.Size([2]) tensor([0.0368, 0.9632], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0368, 0.9632], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2668, 0.7332], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2670, 0.7330], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6744)
Training Output torch.Size([2]) tensor([0.6438, 0.3562], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6437, 0.3563], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5641, 0.4359], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5642, 0.4358], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0039) tensor(0.4118)
Training Output torch.Size([2]) tensor([0.1938, 0.8062], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1939, 0.8061], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0780, 0.9220], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0784, 0.9216], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0124, 0.9876], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0124, 0.9876], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.1303e-04, 9.9939e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.1005e-04, 9.9939e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.4925e-05, 9.9998e-01], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 30, Training ones: 69 / 75
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([7.9979e-06, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([7.9823e-06, 9.9999e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.000) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([7.9979e-06, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([7.9979e-06, 9.9999e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([7.9979e-06, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([7.9979e-06, 9.9999e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([7.9979e-06, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([7.9979e-06, 9.9999e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([7.9979e-06, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([8.0135e-06, 9.9999e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([7.9979e-06, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([7.9979e-06, 9.9999e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([7.9979e-06, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([7.9979e-06, 9.9999e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([7.9979e-06, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([7.9979e-06, 9.9999e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([7.9979e-06, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([7.9979e-06, 9.9999e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([7.9979e-06, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([7.9979e-06, 9.9999e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([7.9979e-06, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([7.9979e-06, 9.9999e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([7.9979e-06, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([7.9979e-06, 9.9999e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([7.9979e-06, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([7.9979e-06, 9.9999e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[   13] train: 55.660% test: 61.538%
INFO:root:Accuracy: 0.56190, Precision: 0.65333, Recall: 0.71014, F1: 0.68056
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.761904776096344
INFO:root:Epoch 14
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.9979e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.9979e-06, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 5.867) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.9961)
Training Output torch.Size([2]) tensor([2.1112e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.1112e-05, 9.9998e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.2049e-05, 9.9995e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.2049e-05, 9.9995e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.1729e-04, 9.9988e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1729e-04, 9.9988e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.3597e-04, 9.9976e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.3736e-04, 9.9976e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.1005e-04, 9.9959e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.1085e-04, 9.9959e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.0945e-04, 9.9939e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.0001e-04, 9.9940e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.2225e-04, 9.9928e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.1803e-04, 9.9928e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0058, 0.9942], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1920, 0.8080], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1930, 0.8070], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3706, 0.6294], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3703, 0.6297], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8894, 0.1106], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8899, 0.1101], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8884, 0.1116], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8884, 0.1116], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6320, 0.3680], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6311, 0.3689], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.1899, 0.8101], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1906, 0.8094], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1320, 0.8680], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1321, 0.8679], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9999)
Training Output torch.Size([2]) tensor([0.1999, 0.8001], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2003, 0.7997], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4089, 0.5911], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4086, 0.5914], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4547, 0.5453], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4552, 0.5448], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3639, 0.6361], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3638, 0.6362], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2102, 0.7898], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2106, 0.7894], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 61.905% (loss: 0.898) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1898, 0.8102], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1898, 0.8102], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2488, 0.7512], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2491, 0.7509], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6234)
Training Output torch.Size([2]) tensor([0.3818, 0.6182], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3819, 0.6181], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.4147, 0.5853], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4142, 0.5858], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5050, 0.4950], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5048, 0.4952], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.0431) tensor(1.)
Training Output torch.Size([2]) tensor([0.6333, 0.3667], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6335, 0.3665], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6497, 0.3503], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6496, 0.3504], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5472, 0.4528], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5470, 0.4530], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5936, 0.4064], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5937, 0.4063], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5219, 0.4781], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5222, 0.4778], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3299, 0.6701], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3298, 0.6702], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3396, 0.6604], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3407, 0.6593], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4498, 0.5502], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4489, 0.5511], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5411, 0.4589], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5413, 0.4587], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4772, 0.5228], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4771, 0.5229], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3979, 0.6021], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3979, 0.6021], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2472, 0.7528], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2472, 0.7528], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0622, 0.9378], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0622, 0.9378], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0247, 0.9753], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0246, 0.9754], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0288, 0.9712], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0287, 0.9713], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 59.756% (loss: 0.029) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0114, 0.9886], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0114, 0.9886], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8372)
Training Output torch.Size([2]) tensor([6.0708e-04, 9.9939e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.1183e-04, 9.9939e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0180, 0.9820], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0181, 0.9819], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.0510) tensor(0.7294)
Training Output torch.Size([2]) tensor([0.2238, 0.7762], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2244, 0.7756], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9997)
Training Output torch.Size([2]) tensor([0.7817, 0.2183], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7817, 0.2183], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.6929, 0.3071], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6929, 0.3071], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6665)
Training Output torch.Size([2]) tensor([9.9983e-01, 1.6523e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9983e-01, 1.6620e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9933e-01, 6.6735e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9934e-01, 6.6475e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9569)
Training Output torch.Size([2]) tensor([0.9107, 0.0893], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9110, 0.0890], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7333)
Training Output torch.Size([2]) tensor([0.0262, 0.9738], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 30, Training ones: 69 / 75
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0575, 0.9425], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0575, 0.9425], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.059) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0576, 0.9424], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0575, 0.9425], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0575, 0.9425], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0575, 0.9425], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0576, 0.9424], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0576, 0.9424], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0575, 0.9425], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0575, 0.9425], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0575, 0.9425], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0575, 0.9425], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0575, 0.9425], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0575, 0.9425], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0575, 0.9425], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0575, 0.9425], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0576, 0.9424], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0576, 0.9424], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0576, 0.9424], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0575, 0.9425], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0575, 0.9425], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0575, 0.9425], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0575, 0.9425], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0575, 0.9425], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0575, 0.9425], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0575, 0.9425], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[   14] train: 53.774% test: 61.538%
INFO:root:Accuracy: 0.54286, Precision: 0.64000, Recall: 0.69565, F1: 0.66667
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.761904776096344
INFO:root:Epoch 15
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0575, 0.9425], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0576, 0.9424], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 1.456) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7021, 0.2979], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7030, 0.2970], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7342, 0.2658], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7344, 0.2656], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3918, 0.6082], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3922, 0.6078], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0388, 0.9612], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0387, 0.9613], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.4528e-04, 9.9945e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.4315e-04, 9.9946e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.8400e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.8400e-06, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.4876e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([6.4876e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.5907e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.5907e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.7334e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.7334e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0314) tensor(1.)
Training Output torch.Size([2]) tensor([4.1089e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.1089e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.2542e-04, 9.9947e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.2542e-04, 9.9947e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0218, 0.9782], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0218, 0.9782], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0350, 0.9650], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0348, 0.9652], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0039, 0.9961], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0039, 0.9961], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0085, 0.9915], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0085, 0.9915], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1900, 0.8100], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1890, 0.8110], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9998)
Training Output torch.Size([2]) tensor([0.9818, 0.0182], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9819, 0.0181], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9976, 0.0024], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9976, 0.0024], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9938, 0.0062], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9937, 0.0063], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8837, 0.1163], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8831, 0.1169], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 52.381% (loss: 1.135) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7372)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5450)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 47.561% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.0745) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5804)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 75, Training ones: 69 / 30
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[   15] train: 46.226% test: 38.462%
INFO:root:Accuracy: 0.45714, Precision: 0.70000, Recall: 0.30435, F1: 0.42424
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 16
Training min-max: tensor(0.3080) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9956)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6627)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9998)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8031)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.5725) tensor(0.9647)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[   16] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 17
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9981)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9357)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
slurmstepd-d-10-4-2: error: *** JOB 26358623 ON d-10-4-2 CANCELLED AT 2024-06-25T13:23:49 ***
