/home/gridsan/nchutisilp/.conda/envs/jepa/bin/python
INFO:root:called-params configs/evals/vitl16_cf_pres_16x2x3_learnable_from_segmentation_fold2.yaml
INFO:root:loaded params...
{   'data': {   'dataset_test': '/home/gridsan/nchutisilp/projects/ModelsGenesis/notebooks/tabular_data/cf_pres_test.csv',
                'dataset_train': '/home/gridsan/nchutisilp/projects/ModelsGenesis/notebooks/tabular_data/cf_pres_train_fold2.csv',
                'dataset_type': 'VideoDataset',
                'dataset_val': '/home/gridsan/nchutisilp/projects/ModelsGenesis/notebooks/tabular_data/cf_pres_val_fold2.csv',
                'frame_step': 3,
                'frames_per_clip': 128,
                'num_classes': 2,
                'num_segments': 1,
                'num_views_per_segment': 1},
    'eval_name': 'video_classification_frozen',
    'nodes': 8,
    'optimization': {   'attend_across_segments': True,
                        'batch_size': 2,
                        'final_lr': 0.0,
                        'freeze_encoder': False,
                        'lr': 0.001,
                        'num_epochs': 150,
                        'resolution': 224,
                        'start_lr': 0.001,
                        'use_bfloat16': True,
                        'warmup': 0.0,
                        'weight_decay': 0.01},
    'pretrain': {   'checkpoint': 'jepa-best.pth.tar',
                    'checkpoint_key': 'target_encoder',
                    'clip_duration': None,
                    'folder': '/home/gridsan/nchutisilp/projects/jepa/pretrain_models/video_segmentation/calcium_oct_attentive_aug_resample_fold0',
                    'frames_per_clip': 16,
                    'model_name': 'vit_large',
                    'patch_size': 16,
                    'tight_silu': False,
                    'tubelet_size': 2,
                    'uniform_power': True,
                    'use_sdpa': True,
                    'use_silu': False,
                    'write_tag': 'jepa'},
    'resume_checkpoint': False,
    'tag': 'cf-pres-from-segmentation-16x2x3-fold2',
    'tasks_per_node': 8}
Random port is ... 52989
INFO:root:Running... (rank: 0/1)
INFO:root:Running evaluation: video_classification_frozen
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:Loading pretrained model from /home/gridsan/nchutisilp/projects/jepa/pretrain_models/video_segmentation/calcium_oct_attentive_aug_resample_fold0/jepa-best.pth.tar
VisionTransformer(
  (patch_embed): PatchEmbed3D(
    (proj): Conv3d(3, 1024, kernel_size=(2, 16, 16), stride=(2, 16, 16))
  )
  (blocks): ModuleList(
    (0-23): 24 x Block(
      (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
      (attn): Attention(
        (qkv): Linear(in_features=1024, out_features=3072, bias=True)
        (attn_drop): Dropout(p=0.0, inplace=False)
        (proj): Linear(in_features=1024, out_features=1024, bias=True)
        (proj_drop): Dropout(p=0.0, inplace=False)
      )
      (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
      (mlp): MLP(
        (fc1): Linear(in_features=1024, out_features=4096, bias=True)
        (act): GELU(approximate='none')
        (fc2): Linear(in_features=4096, out_features=1024, bias=True)
        (drop): Dropout(p=0.0, inplace=False)
      )
    )
  )
  (norm): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
)
INFO:root:loaded pretrained model with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch: 500
 path: /home/gridsan/nchutisilp/projects/jepa/pretrain_models/video_segmentation/calcium_oct_attentive_aug_resample_fold0/jepa-best.pth.tar
INFO:root:VideoDataset dataset created
INFO:root:VideoDataset unsupervised data loader created
INFO:root:VideoDataset dataset created
INFO:root:VideoDataset unsupervised data loader created
INFO:root:Dataloader created... iterations per epoch: 53
INFO:root:Unfreezing encoder...
INFO:root:Using AdamW
INFO:root:Epoch 1
/home/gridsan/nchutisilp/.local/lib/python3.9/site-packages/torch/backends/cuda/__init__.py:342: FutureWarning: torch.backends.cuda.sdp_kernel() is deprecated. In the future, this context manager will be removed. Please see, torch.nn.attention.sdpa_kernel() for the new context manager, with updated signature.
  warnings.warn(
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2929, 0.7071], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2987, 0.7013], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 0.777) [mem: 2.39e+04]
Training min-max: tensor(0.) tensor(0.8854)
Training Output torch.Size([2]) tensor([1.0000e+00, 7.6604e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 8.4462e-07], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 6.6555e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.1635e-06], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 2.3321e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.8593e-06], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0492, 0.9508], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0296, 0.9704], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 3.0646e-21], device='cuda:0')
Training Output torch.Size([2]) tensor([5.3721e-29, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.2898e-17, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([5.7737e-17, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0455e-16, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([5.4780e-16, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9998e-01, 2.2474e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([2.2180e-15, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.7668e-34, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.9061e-35, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.5654e-37, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1787e-37, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.7515e-40, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.6867e-39, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.9209e-41, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([9.7864e-41, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.9846e-41, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.6647e-40, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.5638e-40, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.5279e-42, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.6867e-39, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.4714e-43, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 57.143% (loss: 49.312) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.3674e-36, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([5.6162e-06, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.1886e-33, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.8460e-28, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.4085e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.8789e-21, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 3.4529e-20], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 8.1546e-20], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.8473e-44, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.1829e-13], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.2314) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 4.5936e-18], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.5875e-18], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9999e-01, 6.8209e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 2.8741e-06], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2814, 0.7186], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2689, 0.7311], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9465, 0.0535], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9463, 0.0537], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0046, 0.9954], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0044, 0.9956], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.7450e-10, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.6533e-10, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.6252e-11, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3888e-11, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.9302e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([7.1812e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2104, 0.7896], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1597, 0.8403], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 5.6247e-09], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 8.2804e-09], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 9.6199e-12], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 9.6953e-12], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 6.7970e-10], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 9.9671e-10], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7411)
Training Output torch.Size([2]) tensor([9.9934e-01, 6.6023e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9986, 0.0014], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.8595e-04, 9.9981e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.9910e-04, 9.9980e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 8.2830e-20], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 2.6284e-16], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 48.780% (loss: 39.906) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 5.8470e-11], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 4.2115e-11], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.2468e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.6091e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.0457e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.5502e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.5100e-04, 9.9925e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.4528e-04, 9.9945e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9920e-01, 8.0409e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9917e-01, 8.2797e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9996e-01, 4.0378e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9996e-01, 3.9520e-05], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9857, 0.0143], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9859, 0.0141], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.1693e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.8189e-05, 9.9997e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.3681e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.0861e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.1033e-09, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.5317e-09, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0240e-11, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.2744e-11, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.9507e-13, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 35, Training ones: 69 / 70
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.9338e-10, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.8427e-10, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.000) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.6382e-10, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.8427e-10, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([4.0905e-10, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.9338e-10, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.7831e-10, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.6667e-10, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.7831e-10, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.9338e-10, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.6954e-10, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.9338e-10, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.8728e-10, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.8728e-10, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.9646e-10, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.8128e-10, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.7831e-10, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.8427e-10, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.7536e-10, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.8728e-10, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.8728e-10, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.8128e-10, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.9646e-10, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.9646e-10, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.7831e-10, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.8728e-10, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[    1] train: 47.170% test: 61.538%
INFO:root:Accuracy: 0.47619, Precision: 0.60000, Recall: 0.60870, F1: 0.60432
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:New best F1: 0.76190 improved from 0.0, saving to /home/gridsan/nchutisilp/projects/jepa/pretrain_models/video_segmentation/calcium_oct_attentive_aug_resample_fold0/video_classification_frozen/cf-pres-from-segmentation-16x2x3-fold2/jepa-best.pth.tar
INFO:root:Epoch 2
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.8728e-10, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([7.0677e-10, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 10.531) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0293, 0.9707], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0160, 0.9840], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4059, 0.5941], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5936, 0.4064], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0042, 0.9958], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.4846e-09, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.5437e-09, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.3054e-15, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([7.5621e-15, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.2870e-19, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.0775e-19, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.8224e-23, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.6853e-23, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([2.0014e-23, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.4415e-23, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.7604e-20, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.9460e-20, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.4616e-17, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([5.5526e-17, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.6713e-12, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.8360e-12, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.1535e-09, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([5.7357e-09, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.5814e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.2064e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.0623e-04, 9.9979e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.4110e-04, 9.9976e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.1544, 0.8456], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1501, 0.8499], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9927e-01, 7.2791e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9924e-01, 7.5688e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9935e-01, 6.5127e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9941e-01, 5.9071e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0361, 0.9639], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0198, 0.9802], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.0765e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.9471e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8806)
Training Output torch.Size([2]) tensor([1.0402e-11, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1335e-11, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 69.048% (loss: 12.641) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.9391e-11, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([5.4500e-11, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.4915e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.6315e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.3924e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.3970e-05, 9.9998e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9996)
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2713, 0.7287], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2713, 0.7287], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9925e-01, 7.4802e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9929e-01, 7.1449e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9999e-01, 1.3645e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 1.3407e-05], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9998e-01, 1.7571e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 1.8523e-05], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9996e-01, 4.3319e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9996e-01, 4.2450e-05], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9955, 0.0045], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9954, 0.0046], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0518, 0.9482], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0523, 0.9477], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.0056e-04, 9.9920e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.9473e-04, 9.9921e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.3903e-04, 9.9906e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.0928e-04, 9.9909e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0388, 0.9612], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0383, 0.9617], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9722, 0.0278], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9725, 0.0275], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9972, 0.0028], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9973, 0.0027], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9888, 0.0112], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9886, 0.0114], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4436, 0.5564], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4187, 0.5813], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2327, 0.7673], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2264, 0.7736], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7925, 0.2075], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7860, 0.2140], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 51.220% (loss: 1.557) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5400, 0.4600], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5390, 0.4610], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0157, 0.9843], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0153, 0.9847], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0104, 0.9896], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0107, 0.9893], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1566, 0.8434], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1569, 0.8431], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9790, 0.0210], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9795, 0.0205], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8990)
Training Output torch.Size([2]) tensor([0.9961, 0.0039], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9962, 0.0038], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9845, 0.0155], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9847, 0.0153], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5273, 0.4727], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5317, 0.4683], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3716, 0.6284], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3567, 0.6433], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0208, 0.9792], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0201, 0.9799], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.4773e-05, 9.9993e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.4119e-05, 9.9993e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.5033e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 33, Training ones: 69 / 72
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.7704e-07, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.7704e-07, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.000) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.7566e-07, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.7704e-07, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.7635e-07, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.7774e-07, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.7566e-07, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.7566e-07, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.7704e-07, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.7774e-07, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.7566e-07, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.7704e-07, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.7704e-07, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.7704e-07, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.7704e-07, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.7566e-07, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.7635e-07, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.7635e-07, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.7635e-07, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.7704e-07, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.7704e-07, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.7566e-07, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.7704e-07, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.7704e-07, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.7635e-07, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.7704e-07, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[    2] train: 50.943% test: 61.538%
INFO:root:Accuracy: 0.51429, Precision: 0.62500, Recall: 0.65217, F1: 0.63830
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.761904776096344
INFO:root:Epoch 3
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.7635e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.8053e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 7.766) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.1151e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.1234e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.6964e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.6998e-05, 9.9998e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.4244e-05, 9.9991e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.4244e-05, 9.9991e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.7629e-04, 9.9962e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.7703e-04, 9.9962e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.8309e-04, 9.9902e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.8309e-04, 9.9902e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.3082e-04, 9.9907e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.1461e-04, 9.9909e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0069, 0.9931], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0070, 0.9930], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2030, 0.7970], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2050, 0.7950], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3813, 0.6187], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3846, 0.6154], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8509, 0.1491], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8507, 0.1493], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8663, 0.1337], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8668, 0.1332], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6652, 0.3348], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6649, 0.3351], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2410, 0.7590], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2404, 0.7596], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1862, 0.8138], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1864, 0.8136], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3263, 0.6737], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3269, 0.6731], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6746, 0.3254], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6757, 0.3243], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7590, 0.2410], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7561, 0.2439], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6627, 0.3373], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6571, 0.3429], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4522, 0.5478], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4512, 0.5488], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 47.619% (loss: 0.697) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4327, 0.5673], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4339, 0.5661], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5480, 0.4520], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5485, 0.4515], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5376, 0.4624], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5324, 0.4676], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4165, 0.5835], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4174, 0.5826], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4362, 0.5638], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4331, 0.5669], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5410, 0.4590], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5404, 0.4596], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5218, 0.4782], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5213, 0.4787], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4059, 0.5941], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4064, 0.5936], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6940)
Training Output torch.Size([2]) tensor([0.4586, 0.5414], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4600, 0.5400], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7442, 0.2558], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7462, 0.2538], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8113, 0.1887], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8124, 0.1876], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6619, 0.3381], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6619, 0.3381], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6415, 0.3585], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6424, 0.3576], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3666, 0.6334], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3661, 0.6339], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3403, 0.6597], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3376, 0.6624], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.1393) tensor(1.)
Training Output torch.Size([2]) tensor([0.1253, 0.8747], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1238, 0.8762], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0110, 0.9890], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0111, 0.9889], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.9270e-04, 9.9981e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.7173e-04, 9.9983e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.1698e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.1692e-05, 9.9998e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.1450e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.2362e-05, 9.9998e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 47.561% (loss: 0.000) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.2601e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.1066e-05, 9.9998e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.4277e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.5029e-05, 9.9997e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.1277e-04, 9.9979e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.9949e-04, 9.9980e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.2450) tensor(1.)
Training Output torch.Size([2]) tensor([0.0056, 0.9944], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0059, 0.9941], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1854, 0.8146], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1683, 0.8317], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7535, 0.2465], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7536, 0.2464], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5521, 0.4479], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5443, 0.4557], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0172, 0.9828], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0179, 0.9821], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.1246e-04, 9.9959e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.7193e-04, 9.9953e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.0726e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.7745e-06, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.0778e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([8.6284e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8244)
Training Output torch.Size([2]) tensor([1.4730e-09, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 32, Training ones: 69 / 73
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.8809e-09, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.9114e-09, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.000) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.8809e-09, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.9114e-09, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.9114e-09, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.8809e-09, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.8809e-09, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.8507e-09, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.8809e-09, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.8809e-09, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.8809e-09, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.8809e-09, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.8809e-09, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.8809e-09, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.9114e-09, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.8809e-09, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.9114e-09, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.8809e-09, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.9114e-09, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.9114e-09, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.9114e-09, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.9114e-09, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.9114e-09, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.8809e-09, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.9114e-09, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.9114e-09, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[    3] train: 48.113% test: 61.538%
INFO:root:Accuracy: 0.48571, Precision: 0.60274, Recall: 0.63768, F1: 0.61972
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.761904776096344
INFO:root:Epoch 4
Training min-max: tensor(0.) tensor(0.7490)
Training Output torch.Size([2]) tensor([4.0991e-09, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.8507e-09, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 9.688) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.1233e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1189e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0353) tensor(0.5217)
Training Output torch.Size([2]) tensor([1.6898e-04, 9.9983e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.6964e-04, 9.9983e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0103, 0.9897], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0110, 0.9890], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.5405e-05, 9.9994e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.5514e-05, 9.9994e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.5020e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.4728e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.5932e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.5025e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.4538e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([7.4829e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8157)
Training Output torch.Size([2]) tensor([1.0230e-04, 9.9990e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0514e-04, 9.9989e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0046, 0.9954], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0047, 0.9953], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6628, 0.3372], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6695, 0.3305], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9246, 0.0754], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9237, 0.0763], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7969, 0.2031], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7936, 0.2064], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1979, 0.8021], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1950, 0.8050], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1495, 0.8505], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1484, 0.8516], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3635, 0.6365], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3621, 0.6379], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8150, 0.1850], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8145, 0.1855], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8667, 0.1333], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8660, 0.1340], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7550, 0.2450], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7567, 0.2433], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4800, 0.5200], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4811, 0.5189], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 47.619% (loss: 0.695) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.5098)
Training Output torch.Size([2]) tensor([0.4531, 0.5469], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4533, 0.5467], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6241, 0.3759], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6250, 0.3750], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5922, 0.4078], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5923, 0.4077], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4055, 0.5945], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4077, 0.5923], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.3059) tensor(0.9834)
Training Output torch.Size([2]) tensor([0.4130, 0.5870], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4116, 0.5884], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5576, 0.4424], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5592, 0.4408], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5390, 0.4610], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5375, 0.4625], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4340, 0.5660], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4358, 0.5642], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4712, 0.5288], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4701, 0.5299], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5842, 0.4158], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5841, 0.4159], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5622, 0.4378], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5623, 0.4377], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4425, 0.5575], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4424, 0.5576], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4302, 0.5698], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4299, 0.5701], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.2266) tensor(1.)
Training Output torch.Size([2]) tensor([0.5049, 0.4951], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5050, 0.4950], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5440, 0.4560], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5438, 0.4562], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4956, 0.5044], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4963, 0.5037], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3724, 0.6276], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3708, 0.6292], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1397, 0.8603], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1362, 0.8638], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0925, 0.9075], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0920, 0.9080], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2138, 0.7862], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2140, 0.7860], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 42.683% (loss: 0.241) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1186, 0.8814], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1198, 0.8802], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0088, 0.9912], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0088, 0.9912], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0035, 0.9965], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0036, 0.9964], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9230)
Training Output torch.Size([2]) tensor([0.0102, 0.9898], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0101, 0.9899], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0999, 0.9001], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1005, 0.8995], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6085, 0.3915], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6085, 0.3915], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.1137) tensor(1.)
Training Output torch.Size([2]) tensor([0.6207, 0.3793], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6197, 0.3803], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9960)
Training Output torch.Size([2]) tensor([0.2130, 0.7870], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2132, 0.7868], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0687, 0.9313], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0692, 0.9308], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0044, 0.9956], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0044, 0.9956], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.3911e-05, 9.9995e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.5622e-05, 9.9994e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.2649e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 32, Training ones: 69 / 73
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.1342e-07, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.1342e-07, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.000) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.1342e-07, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.1342e-07, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.1254e-07, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.1254e-07, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.1342e-07, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.1342e-07, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.1298e-07, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.1298e-07, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.1342e-07, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.1254e-07, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.1254e-07, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.1254e-07, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.1254e-07, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.1342e-07, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.1298e-07, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.1342e-07, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.1298e-07, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.1342e-07, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.1342e-07, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.1342e-07, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.1254e-07, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.1210e-07, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.1298e-07, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.1342e-07, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[    4] train: 44.340% test: 61.538%
INFO:root:Accuracy: 0.44762, Precision: 0.57534, Recall: 0.60870, F1: 0.59155
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.761904776096344
INFO:root:Epoch 5
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.1386e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0167e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 8.047) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.6185e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.9432e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.2434e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.2434e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.7412e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.8449e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0012e-05, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0090e-05, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2706) tensor(1.)
Training Output torch.Size([2]) tensor([2.2474e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.2562e-05, 9.9998e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.5933e-05, 9.9995e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.2457e-05, 9.9995e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.6856e-05, 9.9990e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.5355e-05, 9.9990e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0020, 0.9980], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.0353) tensor(1.)
Training Output torch.Size([2]) tensor([0.1335, 0.8665], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1268, 0.8732], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2108, 0.7892], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2186, 0.7814], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6070, 0.3930], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6081, 0.3919], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6747, 0.3253], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6295, 0.3705], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1846, 0.8154], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1865, 0.8135], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0369, 0.9631], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0366, 0.9634], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0907, 0.9093], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0907, 0.9093], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3539, 0.6461], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3526, 0.6474], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6425, 0.3575], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6447, 0.3553], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7200, 0.2800], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7213, 0.2787], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.6519, 0.3481], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6542, 0.3458], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3884, 0.6116], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3963, 0.6037], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 52.381% (loss: 0.725) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3464, 0.6536], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3533, 0.6467], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5598, 0.4402], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5574, 0.4426], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5508, 0.4492], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5547, 0.4453], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.3412)
Training Output torch.Size([2]) tensor([0.2960, 0.7040], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2975, 0.7025], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3204, 0.6796], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3208, 0.6792], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9998)
Training Output torch.Size([2]) tensor([0.6341, 0.3659], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6350, 0.3650], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6509, 0.3491], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6494, 0.3506], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3707, 0.6293], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3707, 0.6293], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6696)
Training Output torch.Size([2]) tensor([0.4078, 0.5922], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4083, 0.5917], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7284, 0.2716], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7284, 0.2716], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7256, 0.2744], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7256, 0.2744], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4475, 0.5525], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4475, 0.5525], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4776, 0.5224], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4795, 0.5205], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7513, 0.2487], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7496, 0.2504], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7370, 0.2630], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7379, 0.2621], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5686)
Training Output torch.Size([2]) tensor([0.4885, 0.5115], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4861, 0.5139], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1443, 0.8557], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1434, 0.8566], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0175, 0.9825], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0175, 0.9825], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0093, 0.9907], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0092, 0.9908], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0223, 0.9777], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0222, 0.9778], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 45.122% (loss: 0.023) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0176, 0.9824], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0177, 0.9823], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0036, 0.9964], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0042, 0.9958], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0042, 0.9958], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0279, 0.9721], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0281, 0.9719], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4985, 0.5015], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5024, 0.4976], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9663, 0.0337], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9672, 0.0328], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9844, 0.0156], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9840, 0.0160], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9324, 0.0676], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9304, 0.0696], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9634, 0.0366], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9641, 0.0359], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8676, 0.1324], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8664, 0.1336], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3484, 0.6516], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3478, 0.6522], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8391)
Training Output torch.Size([2]) tensor([0.0340, 0.9660], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 37, Training ones: 69 / 68
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0163, 0.9837], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0163, 0.9837], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.016) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0163, 0.9837], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0163, 0.9837], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0163, 0.9837], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0163, 0.9837], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0163, 0.9837], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0163, 0.9837], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0163, 0.9837], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0163, 0.9837], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0163, 0.9837], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0163, 0.9837], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0163, 0.9837], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0163, 0.9837], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0162, 0.9838], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0163, 0.9837], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0163, 0.9837], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0163, 0.9837], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0163, 0.9837], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0163, 0.9837], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0163, 0.9837], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0163, 0.9837], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0163, 0.9837], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0163, 0.9837], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0163, 0.9837], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0163, 0.9837], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[    5] train: 45.283% test: 61.538%
INFO:root:Accuracy: 0.45714, Precision: 0.58824, Recall: 0.57971, F1: 0.58394
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.761904776096344
INFO:root:Epoch 6
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0162, 0.9838], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0159, 0.9841], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 2.078) [mem: 2.63e+04]
Training min-max: tensor(0.0933) tensor(1.)
Training Output torch.Size([2]) tensor([0.0398, 0.9602], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0400, 0.9600], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0512, 0.9488], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0514, 0.9486], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0231, 0.9769], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0234, 0.9766], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0025, 0.9975], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.2604e-05, 9.9992e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.1007e-05, 9.9992e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.3366e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.3596e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.5641e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([6.8256e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.7875e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.9177e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.2951e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([5.2951e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.2311e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3627e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.3230e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.4971e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.2318e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.2699e-05, 9.9997e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([3.0595e-04, 9.9969e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.0595e-04, 9.9969e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7803)
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0461, 0.9539], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0464, 0.9536], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8192, 0.1808], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8189, 0.1811], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9772, 0.0228], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9770, 0.0230], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9820, 0.0180], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9821, 0.0179], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9325, 0.0675], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9327, 0.0673], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4990, 0.5010], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4961, 0.5039], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 61.905% (loss: 0.690) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1116, 0.8884], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1116, 0.8884], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0801, 0.9199], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0800, 0.9200], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1928, 0.8072], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1927, 0.8073], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1365, 0.8635], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1383, 0.8617], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2814, 0.7186], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2796, 0.7204], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7156, 0.2844], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7237, 0.2763], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8033, 0.1967], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8070, 0.1930], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6777, 0.3223], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6773, 0.3227], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7632, 0.2368], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7659, 0.2341], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6436, 0.3564], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6370, 0.3630], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2900, 0.7100], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2864, 0.7136], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2224, 0.7776], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2200, 0.7800], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4039)
Training Output torch.Size([2]) tensor([0.3659, 0.6341], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3573, 0.6427], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7645)
Training Output torch.Size([2]) tensor([0.6948, 0.3052], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6969, 0.3031], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.7595, 0.2405], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7622, 0.2378], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6156)
Training Output torch.Size([2]) tensor([0.6418, 0.3582], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6413, 0.3587], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3493, 0.6507], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3492, 0.6508], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0837, 0.9163], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0910, 0.9090], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0490, 0.9510], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0541, 0.9459], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0713, 0.9287], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0661, 0.9339], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 52.439% (loss: 0.071) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0474, 0.9526], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0454, 0.9546], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0152, 0.9848], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0173, 0.9827], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.0183, 0.9817], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0179, 0.9821], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0393, 0.9607], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0420, 0.9580], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1729, 0.8271], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1768, 0.8232], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5418, 0.4582], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5418, 0.4582], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3540, 0.6460], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4334, 0.5666], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0087, 0.9913], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0088, 0.9912], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.7557e-04, 9.9922e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.6804e-04, 9.9923e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.1409e-05, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1577e-05, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.3661e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 26, Training ones: 69 / 79
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([9.1236e-07, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.1415e-07, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.000) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([9.0925e-07, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.1103e-07, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([9.1549e-07, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.1325e-07, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([9.1192e-07, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.0969e-07, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([9.1236e-07, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.1325e-07, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([9.0836e-07, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.1325e-07, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([9.1325e-07, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.1236e-07, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([9.1459e-07, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.1058e-07, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([9.1370e-07, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.1147e-07, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([9.1014e-07, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.1236e-07, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([9.1370e-07, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.1147e-07, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([9.1325e-07, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.1370e-07, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([9.1192e-07, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.1325e-07, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[    6] train: 53.774% test: 61.538%
INFO:root:Accuracy: 0.54286, Precision: 0.63291, Recall: 0.72464, F1: 0.67568
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.761904776096344
INFO:root:Epoch 7
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.6318e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([9.0925e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 6.957) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.4870e-04, 9.9965e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.3732e-04, 9.9966e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0216, 0.9784], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0219, 0.9781], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0086, 0.9914], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0089, 0.9911], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.8998e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.2350e-05, 9.9997e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.6120e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.5901e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.4111e-09, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.4445e-09, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.9131e-11, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.0605e-11, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.5698e-10, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.2590e-10, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.7767e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([5.3845e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.9852e-04, 9.9980e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.0623e-04, 9.9979e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5737, 0.4263], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5583, 0.4417], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4980)
Training Output torch.Size([2]) tensor([0.8888, 0.1112], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8903, 0.1097], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4349, 0.5651], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4369, 0.5631], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0014) tensor(0.6348)
Training Output torch.Size([2]) tensor([0.0104, 0.9896], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0103, 0.9897], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0069, 0.9931], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0066, 0.9934], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0459, 0.9541], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0457, 0.9543], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5215, 0.4785], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5249, 0.4751], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7170, 0.2830], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7170, 0.2830], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4815, 0.5185], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4810, 0.5190], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0873, 0.9127], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0874, 0.9126], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 57.143% (loss: 1.264) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.0677, 0.9323], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0679, 0.9321], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2500, 0.7500], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2500, 0.7500], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8492, 0.1508], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8482, 0.1518], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.9235, 0.0765], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9237, 0.0763], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9921, 0.0079], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9920, 0.0080], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9996e-01, 3.6124e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9996e-01, 3.5843e-05], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 4.0670e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 4.0630e-06], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9997e-01, 2.9312e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9997e-01, 2.8857e-05], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9980e-01, 1.9602e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9980e-01, 1.9640e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9650, 0.0350], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9650, 0.0350], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7718)
Training Output torch.Size([2]) tensor([0.0146, 0.9854], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0146, 0.9854], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0094, 0.9906], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0094, 0.9906], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5920, 0.4080], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5943, 0.4057], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7877, 0.2123], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7849, 0.2151], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4370, 0.5630], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4370, 0.5630], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0392) tensor(1.)
Training Output torch.Size([2]) tensor([0.0393, 0.9607], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0393, 0.9607], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.4264e-04, 9.9916e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.3936e-04, 9.9916e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.0475e-04, 9.9970e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.1320e-04, 9.9969e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7569)
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 54.878% (loss: 0.003) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0089, 0.9911], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0089, 0.9911], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0070, 0.9930], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0072, 0.9928], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6622, 0.3378], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6656, 0.3344], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8809, 0.1191], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8819, 0.1181], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.0353) tensor(0.6863)
Training Output torch.Size([2]) tensor([0.3694, 0.6306], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3739, 0.6261], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6911, 0.3089], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6890, 0.3110], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2067, 0.7933], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2121, 0.7879], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4890, 0.5110], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4855, 0.5145], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7843)
Training Output torch.Size([2]) tensor([0.1399, 0.8601], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1403, 0.8597], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8691)
Training Output torch.Size([2]) tensor([0.0040, 0.9960], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0041, 0.9959], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.7355e-05, 9.9993e-01], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 34, Training ones: 69 / 71
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([2.4491e-05, 9.9998e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.4395e-05, 9.9998e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.000) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([2.4300e-05, 9.9998e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.4395e-05, 9.9998e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([2.4491e-05, 9.9998e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.4395e-05, 9.9998e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([2.4491e-05, 9.9998e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.4395e-05, 9.9998e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([2.4491e-05, 9.9998e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.4491e-05, 9.9998e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([2.4395e-05, 9.9998e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.4491e-05, 9.9998e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([2.4491e-05, 9.9998e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.4395e-05, 9.9998e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([2.4491e-05, 9.9998e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.4395e-05, 9.9998e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([2.4491e-05, 9.9998e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.4395e-05, 9.9998e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([2.4491e-05, 9.9998e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.4491e-05, 9.9998e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([2.4491e-05, 9.9998e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.4395e-05, 9.9998e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([2.4491e-05, 9.9998e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.4491e-05, 9.9998e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([2.4491e-05, 9.9998e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.4395e-05, 9.9998e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[    7] train: 53.774% test: 61.538%
INFO:root:Accuracy: 0.54286, Precision: 0.64789, Recall: 0.66667, F1: 0.65714
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.761904776096344
INFO:root:Epoch 8
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.4491e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.6070e-05, 9.9997e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 5.277) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0452e-04, 9.9990e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0330e-04, 9.9990e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.1728e-04, 9.9948e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.3369e-04, 9.9947e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9989)
Training Output torch.Size([2]) tensor([0.0034, 0.9966], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0034, 0.9966], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.1444e-04, 9.9979e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.1319e-04, 9.9979e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.3150e-05, 9.9996e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.3066e-05, 9.9996e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9996)
Training Output torch.Size([2]) tensor([7.1839e-05, 9.9993e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.0587e-05, 9.9993e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.0566e-04, 9.9919e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.9009e-04, 9.9921e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0043, 0.9957], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0043, 0.9957], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1124, 0.8876], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1127, 0.8873], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2662, 0.7338], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2621, 0.7379], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1187, 0.8813], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1199, 0.8801], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8279)
Training Output torch.Size([2]) tensor([0.0107, 0.9893], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0108, 0.9892], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0071, 0.9929], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0071, 0.9929], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0233, 0.9767], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0230, 0.9770], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2134, 0.7866], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2112, 0.7888], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3286, 0.6714], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3295, 0.6705], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1807, 0.8193], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1807, 0.8193], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0333, 0.9667], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0337, 0.9663], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 76.190% (loss: 1.718) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0252, 0.9748], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0256, 0.9744], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.0579, 0.9421], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0582, 0.9418], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2481, 0.7519], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2471, 0.7529], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3372, 0.6628], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3370, 0.6630], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6268, 0.3732], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6267, 0.3733], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9125, 0.0875], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9127, 0.0873], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9512, 0.0488], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9517, 0.0483], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9262, 0.0738], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9262, 0.0738], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9496, 0.0504], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9500, 0.0500], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9160, 0.0840], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9161, 0.0839], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7586, 0.2414], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7586, 0.2414], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4170, 0.5830], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4169, 0.5831], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4183, 0.5817], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4181, 0.5819], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6068, 0.3932], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6059, 0.3941], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6272, 0.3728], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6277, 0.3723], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4277, 0.5723], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4306, 0.5694], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7373)
Training Output torch.Size([2]) tensor([0.2690, 0.7310], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2690, 0.7310], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9999)
Training Output torch.Size([2]) tensor([0.1232, 0.8768], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1230, 0.8770], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1171, 0.8829], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1157, 0.8843], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2801, 0.7199], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2806, 0.7194], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 64.634% (loss: 0.329) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2360, 0.7640], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2373, 0.7627], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0625, 0.9375], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0614, 0.9386], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0559, 0.9441], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0553, 0.9447], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1492, 0.8508], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1504, 0.8496], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5767, 0.4233], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5779, 0.4221], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6787, 0.3213], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6773, 0.3227], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4907, 0.5093], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4901, 0.5099], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1605, 0.8395], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1609, 0.8391], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1229, 0.8771], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1231, 0.8769], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.2549)
Training Output torch.Size([2]) tensor([0.0377, 0.9623], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0375, 0.9625], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0030, 0.9970], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0031, 0.9969], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.2421e-05, 9.9991e-01], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 22, Training ones: 69 / 83
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([2.6070e-05, 9.9997e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.5969e-05, 9.9997e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.000) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([2.5969e-05, 9.9997e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.5969e-05, 9.9997e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([2.6070e-05, 9.9997e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.6070e-05, 9.9997e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([2.5969e-05, 9.9997e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.5969e-05, 9.9997e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([2.5969e-05, 9.9997e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.6070e-05, 9.9997e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([2.5969e-05, 9.9997e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.6070e-05, 9.9997e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([2.5969e-05, 9.9997e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.5969e-05, 9.9997e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([2.5969e-05, 9.9997e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.5969e-05, 9.9997e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([2.5969e-05, 9.9997e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.5969e-05, 9.9997e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([2.5969e-05, 9.9997e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.5969e-05, 9.9997e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([2.5969e-05, 9.9997e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.5969e-05, 9.9997e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([2.5969e-05, 9.9997e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.6070e-05, 9.9997e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([2.5969e-05, 9.9997e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.5969e-05, 9.9997e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[    8] train: 63.208% test: 61.538%
INFO:root:Accuracy: 0.63810, Precision: 0.68675, Recall: 0.82609, F1: 0.75000
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.761904776096344
INFO:root:Epoch 9
Training min-max: tensor(0.) tensor(0.9999)
Training Output torch.Size([2]) tensor([2.5969e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.6378e-05, 9.9997e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 5.273) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.6322e-05, 9.9992e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.3974e-05, 9.9993e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.8235e-04, 9.9982e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.6998e-04, 9.9983e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7410)
Training Output torch.Size([2]) tensor([3.1320e-04, 9.9969e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.1320e-04, 9.9969e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.8977e-04, 9.9951e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.8406e-04, 9.9952e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.3495e-04, 9.9937e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.1783e-04, 9.9938e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.7324e-04, 9.9933e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.6023e-04, 9.9934e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.0235e-04, 9.9940e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.1064e-04, 9.9939e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0027, 0.9973], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0027, 0.9973], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0472, 0.9528], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0457, 0.9543], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0851, 0.9149], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0857, 0.9143], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4271, 0.5729], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4294, 0.5706], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4438, 0.5562], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4472, 0.5528], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1988, 0.8012], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2039, 0.7961], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0528, 0.9472], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0533, 0.9467], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0497, 0.9503], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0489, 0.9511], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1023, 0.8977], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1027, 0.8973], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2986, 0.7014], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2955, 0.7045], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3771, 0.6229], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3800, 0.6200], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3172, 0.6828], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3121, 0.6879], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1767, 0.8233], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1771, 0.8229], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 76.190% (loss: 0.964) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.8550)
Training Output torch.Size([2]) tensor([0.1634, 0.8366], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1624, 0.8376], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2323, 0.7677], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2296, 0.7704], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3715, 0.6285], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3707, 0.6293], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4025, 0.5975], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4024, 0.5976], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4903, 0.5097], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4904, 0.5096], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7690)
Training Output torch.Size([2]) tensor([0.6178, 0.3822], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6179, 0.3821], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5817, 0.4183], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5867, 0.4133], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1145, 0.8855], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1126, 0.8874], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2651, 0.7349], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2670, 0.7330], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9653, 0.0347], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9653, 0.0347], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9922, 0.0078], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9922, 0.0078], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4902)
Training Output torch.Size([2]) tensor([0.9569, 0.0431], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9569, 0.0431], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7835)
Training Output torch.Size([2]) tensor([0.9870, 0.0130], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9869, 0.0131], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8225)
Training Output torch.Size([2]) tensor([0.8912, 0.1088], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8922, 0.1078], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0440, 0.9560], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0439, 0.9561], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9984)
Training Output torch.Size([2]) tensor([2.3576e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.3830e-05, 9.9998e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.0526e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.0526e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.7775e-11, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([8.9157e-11, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.1009e-10, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9462e-11, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.3774e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.4915e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 64.634% (loss: 0.000) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.2632e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.0895e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7018)
Training Output torch.Size([2]) tensor([2.2168e-04, 9.9978e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.1867e-04, 9.9978e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2169, 0.7831], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2163, 0.7837], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9961e-01, 3.8823e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9961e-01, 3.8899e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9998e-01, 1.5507e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 1.5937e-05], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9119)
Training Output torch.Size([2]) tensor([9.9986e-01, 1.4037e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9986e-01, 1.3605e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9736, 0.0264], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9734, 0.0266], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.2969, 0.7031], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2967, 0.7033], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2869, 0.7131], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2865, 0.7135], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([0.1794, 0.8206], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1793, 0.8207], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8788)
Training Output torch.Size([2]) tensor([0.0629, 0.9371], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0623, 0.9377], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9989)
Training Output torch.Size([2]) tensor([0.0081, 0.9919], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 22, Training ones: 69 / 83
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.005) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[    9] train: 61.321% test: 61.538%
INFO:root:Accuracy: 0.61905, Precision: 0.67470, Recall: 0.81159, F1: 0.73684
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.761904776096344
INFO:root:Epoch 10
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0049, 0.9951], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0048, 0.9952], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 2.667) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0154, 0.9846], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0153, 0.9847], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0129, 0.9871], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0122, 0.9878], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0023, 0.9977], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.9525e-04, 9.9980e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.9487e-04, 9.9981e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.3176) tensor(0.9999)
Training Output torch.Size([2]) tensor([1.2956e-05, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.2805e-05, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.5125e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([8.5792e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.1724e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([5.3158e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.5685e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.5025e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0130e-05, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0575e-05, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.5714e-04, 9.9974e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.6324e-04, 9.9974e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0254, 0.9746], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0244, 0.9756], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8867)
Training Output torch.Size([2]) tensor([0.0780, 0.9220], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0812, 0.9188], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0318, 0.9682], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0334, 0.9666], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0027, 0.9973], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0027, 0.9973], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0020, 0.9980], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0071, 0.9929], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0080, 0.9920], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0773, 0.9227], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0828, 0.9172], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1139, 0.8861], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1265, 0.8735], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0593, 0.9407], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0600, 0.9400], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0115, 0.9885], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0115, 0.9885], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 76.190% (loss: 2.236) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0080, 0.9920], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0079, 0.9921], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0171, 0.9829], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0171, 0.9829], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.2510) tensor(1.)
Training Output torch.Size([2]) tensor([0.0689, 0.9311], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0694, 0.9306], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0912, 0.9088], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0914, 0.9086], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2166, 0.7834], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2146, 0.7854], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.5420, 0.4580], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5460, 0.4540], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6056, 0.3944], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6040, 0.3960], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5111, 0.4889], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5120, 0.4880], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7371)
Training Output torch.Size([2]) tensor([0.5321, 0.4679], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5316, 0.4684], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4677, 0.5323], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4712, 0.5288], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3416, 0.6584], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3417, 0.6583], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3731, 0.6269], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3680, 0.6320], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.3098) tensor(1.)
Training Output torch.Size([2]) tensor([0.4742, 0.5258], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4739, 0.5261], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6239, 0.3761], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6248, 0.3752], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.0721, 0.9279], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0719, 0.9281], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.6378e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.8705e-05, 9.9998e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([1.8048e-09, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.1941e-09, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.6866e-13, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.4083e-13, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.2273e-13, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.2448e-13, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.4590e-10, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([8.3278e-10, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 67.073% (loss: 0.000) [mem: 2.63e+04]
Training min-max: tensor(0.0157) tensor(1.)
Training Output torch.Size([2]) tensor([1.1366e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1016e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.0589e-04, 9.9939e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.8669e-04, 9.9941e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9912, 0.0088], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9915, 0.0085], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9956e-01, 4.4206e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9958e-01, 4.1854e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9848, 0.0152], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9849, 0.0151], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0282, 0.9718], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0289, 0.9711], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7020)
Training Output torch.Size([2]) tensor([0.0101, 0.9899], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0102, 0.9898], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0805e-04, 9.9989e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0805e-04, 9.9989e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9111)
Training Output torch.Size([2]) tensor([1.4426e-04, 9.9986e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.4482e-04, 9.9986e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.1070e-04, 9.9979e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.1070e-04, 9.9979e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.0416e-04, 9.9970e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.0179e-04, 9.9970e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.0291e-04, 9.9960e-01], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 16, Training ones: 69 / 89
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.006) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[   10] train: 65.094% test: 61.538%
INFO:root:Accuracy: 0.65714, Precision: 0.68539, Recall: 0.88406, F1: 0.77215
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.761904776096344
INFO:root:Epoch 11
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0058, 0.9942], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 2.583) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.9899)
Training Output torch.Size([2]) tensor([0.1900, 0.8100], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1918, 0.8082], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4040, 0.5960], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4113, 0.5887], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2796, 0.7204], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2749, 0.7251], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0754, 0.9246], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0785, 0.9215], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7632)
Training Output torch.Size([2]) tensor([0.0076, 0.9924], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0073, 0.9927], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.9176e-04, 9.9981e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.9251e-04, 9.9981e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.0238e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.8185e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.4959e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([8.3153e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.2654e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.1322e-06, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.2564e-05, 9.9996e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.3744e-05, 9.9996e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0031, 0.9969], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0158, 0.9842], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0172, 0.9828], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0075, 0.9925], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0073, 0.9927], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.3604e-04, 9.9946e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.0927e-04, 9.9949e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.9650e-04, 9.9950e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.8612e-04, 9.9941e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0033, 0.9967], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0038, 0.9962], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0548, 0.9452], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0527, 0.9473], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0801, 0.9199], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0813, 0.9187], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2980) tensor(1.)
Training Output torch.Size([2]) tensor([0.0324, 0.9676], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0323, 0.9677], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0059, 0.9941], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 76.190% (loss: 2.591) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0055, 0.9945], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0056, 0.9944], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0208, 0.9792], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0193, 0.9807], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7291)
Training Output torch.Size([2]) tensor([0.1402, 0.8598], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1402, 0.8598], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2260, 0.7740], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2402, 0.7598], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5395, 0.4605], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5472, 0.4528], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9015, 0.0985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9035, 0.0965], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9271, 0.0729], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9282, 0.0718], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7699, 0.2301], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7698, 0.2302], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7937, 0.2063], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7947, 0.2053], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4671, 0.5329], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4659, 0.5341], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0253, 0.9747], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0253, 0.9747], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0094, 0.9906], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0095, 0.9905], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0371, 0.9629], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0372, 0.9628], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3627, 0.6373], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3621, 0.6379], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9948)
Training Output torch.Size([2]) tensor([0.9247, 0.0753], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9251, 0.0749], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9611, 0.0389], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9611, 0.0389], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9148, 0.0852], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9148, 0.0852], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7504, 0.2496], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7522, 0.2478], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4729, 0.5271], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4724, 0.5276], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4012, 0.5988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3988, 0.6012], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 62.195% (loss: 0.511) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2632, 0.7368], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2627, 0.7373], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1286, 0.8714], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1277, 0.8723], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1126, 0.8874], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1066, 0.8934], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1888, 0.8112], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1893, 0.8107], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4246, 0.5754], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4220, 0.5780], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7403, 0.2597], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7415, 0.2585], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6981, 0.3019], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6969, 0.3031], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5738, 0.4262], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5751, 0.4249], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5848, 0.4152], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5846, 0.4154], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3479, 0.6521], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3472, 0.6528], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0377, 0.9623], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0373, 0.9627], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7020)
Training Output torch.Size([2]) tensor([1.9525e-04, 9.9980e-01], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 26, Training ones: 69 / 79
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.0370e-05, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0330e-05, 9.9999e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.000) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.0330e-05, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0370e-05, 9.9999e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.0370e-05, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0370e-05, 9.9999e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.0330e-05, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0330e-05, 9.9999e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.0370e-05, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0370e-05, 9.9999e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.0330e-05, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0370e-05, 9.9999e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.0411e-05, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0370e-05, 9.9999e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.0370e-05, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0330e-05, 9.9999e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.0330e-05, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0330e-05, 9.9999e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.0370e-05, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0411e-05, 9.9999e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.0370e-05, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0330e-05, 9.9999e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.0370e-05, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0370e-05, 9.9999e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.0330e-05, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0411e-05, 9.9999e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[   11] train: 59.434% test: 61.538%
INFO:root:Accuracy: 0.60000, Precision: 0.67089, Recall: 0.76812, F1: 0.71622
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.761904776096344
INFO:root:Epoch 12
Training min-max: tensor(0.) tensor(0.9994)
Training Output torch.Size([2]) tensor([1.0492e-05, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0290e-05, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 5.742) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.1195e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.1030e-05, 9.9998e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9999)
Training Output torch.Size([2]) tensor([4.2647e-05, 9.9996e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.3489e-05, 9.9996e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.9928e-05, 9.9991e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.9928e-05, 9.9991e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.6800e-04, 9.9983e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.6156e-04, 9.9984e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.6686e-04, 9.9973e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.6634e-04, 9.9973e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.7998e-04, 9.9962e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.7119e-04, 9.9963e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.8975e-04, 9.9961e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.8899e-04, 9.9961e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0260, 0.9740], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0265, 0.9735], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9971, 0.0029], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9970, 0.0030], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9948e-01, 5.2032e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9948e-01, 5.2032e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9827, 0.0173], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9817, 0.0183], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3570, 0.6430], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3582, 0.6418], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0488, 0.9512], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0490, 0.9510], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0158, 0.9842], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0155, 0.9845], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0186, 0.9814], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0191, 0.9809], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0612, 0.9388], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0607, 0.9393], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3482, 0.6518], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3471, 0.6529], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5475, 0.4525], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5475, 0.4525], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4180, 0.5820], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4182, 0.5818], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0968, 0.9032], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0968, 0.9032], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 61.905% (loss: 1.218) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0607, 0.9393], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0603, 0.9397], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1449, 0.8551], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1446, 0.8554], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6545, 0.3455], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6549, 0.3451], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7944, 0.2056], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7944, 0.2056], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9772)
Training Output torch.Size([2]) tensor([0.9735, 0.0265], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9735, 0.0265], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9935e-01, 6.4557e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9934e-01, 6.5958e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9989e-01, 1.1412e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9989e-01, 1.1412e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9984e-01, 1.6283e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9983e-01, 1.6507e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9979e-01, 2.1402e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9979e-01, 2.0623e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9984, 0.0016], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9985, 0.0015], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9594, 0.0406], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9589, 0.0411], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2522, 0.7478], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2528, 0.7472], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0439, 0.9561], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0437, 0.9563], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0359, 0.9641], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0361, 0.9639], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1068, 0.8932], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1063, 0.8937], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0824, 0.9176], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0823, 0.9177], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7212)
Training Output torch.Size([2]) tensor([0.0218, 0.9782], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0219, 0.9781], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6824)
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0025, 0.9975], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0025, 0.9975], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 59.756% (loss: 0.002) [mem: 2.63e+04]
Training min-max: tensor(0.0706) tensor(1.)
Training Output torch.Size([2]) tensor([0.0036, 0.9964], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0038, 0.9962], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0031, 0.9969], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0031, 0.9969], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.3686)
Training Output torch.Size([2]) tensor([0.0109, 0.9891], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0106, 0.9894], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0905, 0.9095], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0897, 0.9103], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5997, 0.4003], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6015, 0.3985], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6240, 0.3760], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6228, 0.3772], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3101, 0.6899], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3121, 0.6879], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.3059) tensor(1.)
Training Output torch.Size([2]) tensor([0.0330, 0.9670], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0329, 0.9671], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2061, 0.7939], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2017, 0.7983], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0252, 0.9748], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0252, 0.9748], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7919)
Training Output torch.Size([2]) tensor([1.2497e-04, 9.9988e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.4913e-04, 9.9985e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.2239e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 30, Training ones: 69 / 75
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([2.3643e-04, 9.9976e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.3643e-04, 9.9976e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.000) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([2.3782e-04, 9.9976e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.3690e-04, 9.9976e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([2.3597e-04, 9.9976e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.3643e-04, 9.9976e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([2.3782e-04, 9.9976e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.3736e-04, 9.9976e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([2.3782e-04, 9.9976e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.3690e-04, 9.9976e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([2.3736e-04, 9.9976e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.3551e-04, 9.9976e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([2.3643e-04, 9.9976e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.3643e-04, 9.9976e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([2.3597e-04, 9.9976e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.3736e-04, 9.9976e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([2.3782e-04, 9.9976e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.3736e-04, 9.9976e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([2.3782e-04, 9.9976e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.3690e-04, 9.9976e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([2.3690e-04, 9.9976e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.3736e-04, 9.9976e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([2.3597e-04, 9.9976e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.3597e-04, 9.9976e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([2.3736e-04, 9.9976e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.3643e-04, 9.9976e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[   12] train: 59.434% test: 61.538%
INFO:root:Accuracy: 0.60000, Precision: 0.68000, Recall: 0.73913, F1: 0.70833
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.761904776096344
INFO:root:Epoch 13
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.3643e-04, 9.9976e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.3922e-04, 9.9976e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 4.168) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0043, 0.9957], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0043, 0.9957], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0087, 0.9913], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0087, 0.9913], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0028, 0.9972], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0028, 0.9972], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.7850e-04, 9.9962e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.7924e-04, 9.9962e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.1986e-05, 9.9996e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.2151e-05, 9.9996e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.5660e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.5482e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.1029e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([5.1029e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.9749e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([6.9749e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.6986e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.6647e-06, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.7980e-05, 9.9992e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.8285e-05, 9.9992e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0201, 0.9799], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0202, 0.9798], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9998)
Training Output torch.Size([2]) tensor([0.0199, 0.9801], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0198, 0.9802], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.4286) tensor(1.)
Training Output torch.Size([2]) tensor([0.0041, 0.9959], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0041, 0.9959], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0049, 0.9951], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0049, 0.9951], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0256, 0.9744], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0256, 0.9744], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3054, 0.6946], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3050, 0.6950], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5400, 0.4600], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5397, 0.4603], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4125, 0.5875], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4125, 0.5875], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1144, 0.8856], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1145, 0.8855], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 71.429% (loss: 1.145) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0927, 0.9073], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0927, 0.9073], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2076, 0.7924], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2075, 0.7925], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6333, 0.3667], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6335, 0.3665], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7420, 0.2580], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7419, 0.2581], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9262, 0.0738], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9262, 0.0738], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9925, 0.0075], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9925, 0.0075], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9969, 0.0031], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9969, 0.0031], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9953, 0.0047], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9953, 0.0047], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9969, 0.0031], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9969, 0.0031], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9934, 0.0066], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9934, 0.0066], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9683, 0.0317], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9683, 0.0317], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7986, 0.2014], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7986, 0.2014], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6316, 0.3684], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6318, 0.3682], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9980)
Training Output torch.Size([2]) tensor([0.3220, 0.6780], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3222, 0.6778], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2425, 0.7575], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2427, 0.7573], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1202, 0.8798], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1202, 0.8798], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0366, 0.9634], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0365, 0.9635], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0059, 0.9941], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0059, 0.9941], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0028, 0.9972], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0028, 0.9972], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0044, 0.9956], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0044, 0.9956], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 67.073% (loss: 0.004) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0044, 0.9956], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0044, 0.9956], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.2745) tensor(1.)
Training Output torch.Size([2]) tensor([0.0518, 0.9482], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0518, 0.9482], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8822, 0.1178], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8822, 0.1178], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6744)
Training Output torch.Size([2]) tensor([0.9657, 0.0343], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9658, 0.0342], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7587, 0.2413], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7590, 0.2410], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0039) tensor(0.4118)
Training Output torch.Size([2]) tensor([0.1830, 0.8170], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1831, 0.8169], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2003, 0.7997], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2008, 0.7992], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1381, 0.8619], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1381, 0.8619], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0601, 0.9399], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0599, 0.9401], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0159, 0.9841], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 30, Training ones: 69 / 75
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0092, 0.9908], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0092, 0.9908], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.009) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0092, 0.9908], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0092, 0.9908], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0092, 0.9908], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0092, 0.9908], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0092, 0.9908], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0092, 0.9908], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0092, 0.9908], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0092, 0.9908], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0092, 0.9908], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0092, 0.9908], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0092, 0.9908], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0092, 0.9908], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0092, 0.9908], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0092, 0.9908], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0092, 0.9908], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0092, 0.9908], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0092, 0.9908], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0092, 0.9908], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0092, 0.9908], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0092, 0.9908], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0092, 0.9908], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0092, 0.9908], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0092, 0.9908], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0092, 0.9908], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[   13] train: 63.208% test: 61.538%
INFO:root:Accuracy: 0.63810, Precision: 0.70667, Recall: 0.76812, F1: 0.73611
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.761904776096344
INFO:root:Epoch 14
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0093, 0.9907], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0092, 0.9908], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 2.348) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.9961)
Training Output torch.Size([2]) tensor([0.0113, 0.9887], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0114, 0.9886], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0076, 0.9924], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0076, 0.9924], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0030, 0.9970], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0030, 0.9970], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.1461e-04, 9.9909e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.1283e-04, 9.9909e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.6324e-04, 9.9974e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.6119e-04, 9.9974e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.5433e-05, 9.9992e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.5433e-05, 9.9992e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.2562e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.2739e-05, 9.9998e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.2126e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.1868e-05, 9.9998e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.2050e-05, 9.9994e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.2293e-05, 9.9994e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.5118e-04, 9.9985e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.5118e-04, 9.9985e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.8855e-04, 9.9921e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.8701e-04, 9.9921e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0028, 0.9972], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0028, 0.9972], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0062, 0.9938], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0062, 0.9938], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.0071, 0.9929], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0070, 0.9930], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0160, 0.9840], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0160, 0.9840], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9999)
Training Output torch.Size([2]) tensor([0.0581, 0.9419], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0581, 0.9419], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2423, 0.7577], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2424, 0.7576], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4017, 0.5983], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4016, 0.5984], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4136, 0.5864], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4136, 0.5864], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3133, 0.6867], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3132, 0.6868], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 76.190% (loss: 0.768) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3342, 0.6658], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3343, 0.6657], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4482, 0.5518], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4476, 0.5524], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6234)
Training Output torch.Size([2]) tensor([0.6403, 0.3597], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6404, 0.3596], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.6860, 0.3140], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6852, 0.3148], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7990, 0.2010], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7984, 0.2016], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.0431) tensor(1.)
Training Output torch.Size([2]) tensor([0.9216, 0.0784], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9220, 0.0780], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9415, 0.0585], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9414, 0.0586], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9049, 0.0951], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9053, 0.0947], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9260, 0.0740], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9261, 0.0739], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8717, 0.1283], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8725, 0.1275], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5960, 0.4040], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5948, 0.4052], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9852, 0.0148], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9848, 0.0152], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 1.5040e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.4952e-07], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 3.0053e-08], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 2.9936e-08], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9999e-01, 9.5956e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 9.6567e-06], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9999e-01, 9.6143e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 9.5862e-06], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6976, 0.3024], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6976, 0.3024], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.1994e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.1796e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.7840e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.7893e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.5422e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.5447e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 62.195% (loss: 0.000) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.8393e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.8468e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.5082e-05, 9.9994e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.5082e-05, 9.9994e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8372)
Training Output torch.Size([2]) tensor([0.0661, 0.9339], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0666, 0.9334], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9988, 0.0012], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9988, 0.0012], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9994e-01, 5.8548e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9994e-01, 5.7697e-05], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.0510) tensor(0.7294)
Training Output torch.Size([2]) tensor([9.9974e-01, 2.5639e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9974e-01, 2.5564e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9997)
Training Output torch.Size([2]) tensor([0.9854, 0.0146], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9854, 0.0146], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.3250, 0.6750], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3253, 0.6747], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6665)
Training Output torch.Size([2]) tensor([0.0947, 0.9053], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0947, 0.9053], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0083, 0.9917], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0083, 0.9917], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9569)
Training Output torch.Size([2]) tensor([1.7265e-04, 9.9983e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.7350e-04, 9.9983e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7333)
Training Output torch.Size([2]) tensor([4.2146e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 38, Training ones: 69 / 67
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.1381e-06, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.1381e-06, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.000) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.1351e-06, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.1381e-06, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.1412e-06, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.1381e-06, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.1351e-06, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.1381e-06, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.1351e-06, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.1381e-06, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.1381e-06, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.1381e-06, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.1412e-06, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.1412e-06, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.1381e-06, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.1412e-06, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.1351e-06, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.1381e-06, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.1351e-06, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.1381e-06, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.1443e-06, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.1351e-06, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.1412e-06, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.1412e-06, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([3.1381e-06, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.1412e-06, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[   14] train: 59.434% test: 61.538%
INFO:root:Accuracy: 0.60000, Precision: 0.70149, Recall: 0.68116, F1: 0.69118
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.761904776096344
INFO:root:Epoch 15
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.1381e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.1381e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 6.336) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.5041e-05, 9.9994e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.5068e-05, 9.9994e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.0004e-04, 9.9930e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.0038e-04, 9.9930e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0038, 0.9962], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0038, 0.9962], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.7830e-04, 9.9902e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.7640e-04, 9.9902e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.3635e-04, 9.9986e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3555e-04, 9.9986e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.1112e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.1154e-05, 9.9998e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.0849e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.0929e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.7537e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.7537e-05, 9.9998e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.7188e-04, 9.9903e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.7473e-04, 9.9903e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0314) tensor(1.)
Training Output torch.Size([2]) tensor([0.0162, 0.9838], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0162, 0.9838], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8374, 0.1626], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8371, 0.1629], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9305, 0.0695], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9307, 0.0693], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4664, 0.5336], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4688, 0.5312], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0223, 0.9777], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0223, 0.9777], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0202, 0.9798], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0203, 0.9797], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0790, 0.9210], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0793, 0.9207], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9998)
Training Output torch.Size([2]) tensor([0.4104, 0.5896], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4104, 0.5896], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6366, 0.3634], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6364, 0.3636], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6353, 0.3647], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6351, 0.3649], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4696, 0.5304], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4698, 0.5302], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 57.143% (loss: 0.695) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4826, 0.5174], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4826, 0.5174], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6328, 0.3672], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6326, 0.3674], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6082, 0.3918], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6086, 0.3914], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4463, 0.5537], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4460, 0.5540], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4513, 0.5487], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4509, 0.5491], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5839, 0.4161], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5841, 0.4159], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5651, 0.4349], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5653, 0.4347], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4395, 0.5605], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4400, 0.5600], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7372)
Training Output torch.Size([2]) tensor([0.4520, 0.5480], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4519, 0.5481], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5477, 0.4523], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5473, 0.4527], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5381, 0.4619], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5380, 0.4620], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4706, 0.5294], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4706, 0.5294], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4789, 0.5211], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4790, 0.5210], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5078, 0.4922], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5081, 0.4919], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5244, 0.4756], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5254, 0.4746], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4796, 0.5204], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4785, 0.5215], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5450)
Training Output torch.Size([2]) tensor([0.3890, 0.6110], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3886, 0.6114], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2392, 0.7608], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2392, 0.7608], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1974, 0.8026], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1975, 0.8025], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2536, 0.7464], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2536, 0.7464], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 47.561% (loss: 0.292) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2309, 0.7691], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2303, 0.7697], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1340, 0.8660], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1329, 0.8671], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1318, 0.8682], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1318, 0.8682], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2165, 0.7835], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2168, 0.7832], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4523, 0.5477], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4525, 0.5475], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.0745) tensor(1.)
Training Output torch.Size([2]) tensor([0.7898, 0.2102], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7914, 0.2086], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8725, 0.1275], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8724, 0.1276], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8375, 0.1625], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8368, 0.1632], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5804)
Training Output torch.Size([2]) tensor([0.8832, 0.1168], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8831, 0.1169], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8232, 0.1768], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8244, 0.1756], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5840, 0.4160], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5879, 0.4121], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2037, 0.7963], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 36, Training ones: 69 / 69
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5246, 0.4754], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5251, 0.4749], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: 0.744) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5259, 0.4741], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5251, 0.4749], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5243, 0.4757], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5248, 0.4752], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5255, 0.4745], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5260, 0.4740], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5253, 0.4747], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5246, 0.4754], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5259, 0.4741], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5245, 0.4755], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5249, 0.4751], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5249, 0.4751], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5245, 0.4755], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5254, 0.4746], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5254, 0.4746], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5254, 0.4746], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5256, 0.4744], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5252, 0.4748], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5252, 0.4748], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5255, 0.4745], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5247, 0.4753], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5247, 0.4753], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5256, 0.4744], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5249, 0.4751], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[   15] train: 44.340% test: 38.462%
INFO:root:Accuracy: 0.44762, Precision: 0.57971, Recall: 0.57971, F1: 0.57971
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 16
Training min-max: tensor(0.3080) tensor(1.)
Training Output torch.Size([2]) tensor([0.4935, 0.5065], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5118, 0.4882], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.675) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9934e-01, 6.6443e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9933e-01, 6.7062e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9720, 0.0280], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9698, 0.0302], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2988, 0.7012], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2998, 0.7002], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1314, 0.8686], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1311, 0.8689], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0191, 0.9809], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0191, 0.9809], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.3712e-04, 9.9986e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3685e-04, 9.9986e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.7962e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.7744e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.8971e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.9355e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.0222e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.9986e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.5283e-05, 9.9993e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.5283e-05, 9.9993e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3734, 0.6266], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3730, 0.6270], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1845, 0.8155], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1851, 0.8149], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.3605e-04, 9.9966e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.3347e-04, 9.9967e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0389e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0553e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.9428e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.9221e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.8234e-04, 9.9972e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.8805e-04, 9.9971e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0728, 0.9272], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0732, 0.9268], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2341, 0.7659], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2341, 0.7659], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1126, 0.8874], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1130, 0.8870], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0120, 0.9880], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0120, 0.9880], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 69.048% (loss: 2.217) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0075, 0.9925], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0077, 0.9923], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0214, 0.9786], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0219, 0.9781], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9956)
Training Output torch.Size([2]) tensor([0.1700, 0.8300], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1700, 0.8300], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2759, 0.7241], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2755, 0.7245], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6663, 0.3337], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6658, 0.3342], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9603, 0.0397], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9602, 0.0398], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9844, 0.0156], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9843, 0.0157], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9781, 0.0219], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9780, 0.0220], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9891, 0.0109], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9891, 0.0109], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6627)
Training Output torch.Size([2]) tensor([0.9830, 0.0170], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9830, 0.0170], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9381, 0.0619], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9380, 0.0620], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6817, 0.3183], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6809, 0.3191], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5059, 0.4941], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5049, 0.4951], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2634, 0.7366], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2642, 0.7358], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9998)
Training Output torch.Size([2]) tensor([0.2498, 0.7502], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2491, 0.7509], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1357, 0.8643], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1341, 0.8659], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0382, 0.9618], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0388, 0.9612], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0043, 0.9957], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0044, 0.9956], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 65.854% (loss: 0.003) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0027, 0.9973], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0043, 0.9957], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0046, 0.9954], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0247, 0.9753], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0249, 0.9751], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1644, 0.8356], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1600, 0.8400], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6203, 0.3797], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6189, 0.3811], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6826, 0.3174], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6820, 0.3180], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8031)
Training Output torch.Size([2]) tensor([0.4469, 0.5531], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4452, 0.5548], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4224, 0.5776], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4211, 0.5789], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2309, 0.7691], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2317, 0.7683], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0414, 0.9586], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0414, 0.9586], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.5725) tensor(0.9647)
Training Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 27, Training ones: 69 / 78
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.3658e-04, 9.9986e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.3658e-04, 9.9986e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.000) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.3552e-04, 9.9986e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.3658e-04, 9.9986e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.3605e-04, 9.9986e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.3658e-04, 9.9986e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.3605e-04, 9.9986e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.3605e-04, 9.9986e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.3658e-04, 9.9986e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.3658e-04, 9.9986e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.3605e-04, 9.9986e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.3658e-04, 9.9986e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.3658e-04, 9.9986e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.3658e-04, 9.9986e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.3658e-04, 9.9986e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.3658e-04, 9.9986e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.3658e-04, 9.9986e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.3658e-04, 9.9986e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.3658e-04, 9.9986e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.3658e-04, 9.9986e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.3658e-04, 9.9986e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.3658e-04, 9.9986e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.3658e-04, 9.9986e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.3658e-04, 9.9986e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.3605e-04, 9.9986e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.3658e-04, 9.9986e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[   16] train: 62.264% test: 61.538%
INFO:root:Accuracy: 0.62857, Precision: 0.69231, Recall: 0.78261, F1: 0.73469
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.761904776096344
INFO:root:Epoch 17
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.3658e-04, 9.9986e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3658e-04, 9.9986e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 4.449) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.4063e-04, 9.9966e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.3996e-04, 9.9966e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.1384e-04, 9.9929e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.1523e-04, 9.9928e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.7703e-04, 9.9942e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.7032e-04, 9.9943e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.3277e-04, 9.9977e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.4062e-04, 9.9976e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.8132e-05, 9.9992e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.7828e-05, 9.9992e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1885, 0.8115], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1682, 0.8318], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9981)
Training Output torch.Size([2]) tensor([0.0119, 0.9881], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0121, 0.9879], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0761, 0.9239], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0759, 0.9241], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0471, 0.9529], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0468, 0.9532], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0078, 0.9922], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0079, 0.9921], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.4848e-04, 9.9945e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.4634e-04, 9.9945e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.3648e-04, 9.9956e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.3905e-04, 9.9956e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0042, 0.9958], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0043, 0.9957], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2427, 0.7573], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2382, 0.7618], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9357)
Training Output torch.Size([2]) tensor([0.2789, 0.7211], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2727, 0.7273], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0512, 0.9488], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0517, 0.9483], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0029, 0.9971], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0029, 0.9971], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 76.190% (loss: 2.916) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0053, 0.9947], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0053, 0.9947], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0351, 0.9649], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0351, 0.9649], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0575, 0.9425], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0573, 0.9427], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1430, 0.8570], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1432, 0.8568], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3833, 0.6167], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3832, 0.6168], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7585, 0.2415], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7587, 0.2413], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8471, 0.1529], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8495, 0.1505], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9477, 0.0523], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9483, 0.0517], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9506, 0.0494], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9505, 0.0495], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8676, 0.1324], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8679, 0.1321], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4637, 0.5363], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4643, 0.5357], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2578, 0.7422], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2618, 0.7382], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2931, 0.7069], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2880, 0.7120], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5259, 0.4741], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5176, 0.4824], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.5270, 0.4730], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5274, 0.4726], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3204, 0.6796], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3199, 0.6801], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0796, 0.9204], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0819, 0.9181], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0459, 0.9541], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0465, 0.9535], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0632, 0.9368], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0610, 0.9390], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 59.756% (loss: 0.064) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0393, 0.9607], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0390, 0.9610], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0109, 0.9891], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0109, 0.9891], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0081, 0.9919], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0084, 0.9916], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0163, 0.9837], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0166, 0.9834], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0582, 0.9418], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0564, 0.9436], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2285, 0.7715], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2234, 0.7766], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5685, 0.4315], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5666, 0.4334], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2941) tensor(1.)
Training Output torch.Size([2]) tensor([0.7058, 0.2942], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7064, 0.2936], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.2980) tensor(1.)
Training Output torch.Size([2]) tensor([0.8204, 0.1796], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8205, 0.1795], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.1015) tensor(1.)
Training Output torch.Size([2]) tensor([0.8252, 0.1748], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8242, 0.1758], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7402, 0.2598], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7404, 0.2596], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5202, 0.4798], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 25, Training ones: 69 / 80
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4079, 0.5921], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4078, 0.5922], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.524) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4078, 0.5922], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4078, 0.5922], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4080, 0.5920], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4079, 0.5921], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4079, 0.5921], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4078, 0.5922], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4077, 0.5923], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4079, 0.5921], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4079, 0.5921], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4079, 0.5921], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4078, 0.5922], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4079, 0.5921], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4079, 0.5921], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4078, 0.5922], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4079, 0.5921], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4079, 0.5921], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4078, 0.5922], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4077, 0.5923], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4078, 0.5922], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4078, 0.5922], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4079, 0.5921], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4079, 0.5921], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4078, 0.5922], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4079, 0.5921], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[   17] train: 55.660% test: 61.538%
INFO:root:Accuracy: 0.55238, Precision: 0.63750, Recall: 0.73913, F1: 0.68456
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.761904776096344
INFO:root:Epoch 18
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4118, 0.5882], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4073, 0.5927], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 0.715) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4275, 0.5725], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4274, 0.5726], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3319, 0.6681], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3343, 0.6657], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1623, 0.8377], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1628, 0.8372], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0339, 0.9661], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0341, 0.9659], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.4346e-05, 9.9996e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.4173e-05, 9.9996e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.2402e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([9.2402e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.4663e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.3597e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.6251e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.6832e-05, 9.9998e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.2636e-04, 9.9917e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.3609e-04, 9.9916e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3630, 0.6370], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3630, 0.6370], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.9020e-12, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.8372e-12, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([7.1232e-23, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([6.2617e-23, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.5414e-32, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.2080e-32, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.9514e-32, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([7.7068e-32, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.9430e-24, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([5.1399e-24, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.0006) tensor(0.7529)
Training Output torch.Size([2]) tensor([1.3724e-12, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.2968e-12, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.4522e-05, 9.9994e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.3522e-05, 9.9994e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7020)
Training Output torch.Size([2]) tensor([0.8418, 0.1582], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8418, 0.1582], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7969, 0.2031], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7969, 0.2031], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 71.429% (loss: 0.910) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0070, 0.9930], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0070, 0.9930], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0149, 0.9851], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0150, 0.9850], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4639, 0.5361], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4639, 0.5361], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8886)
Training Output torch.Size([2]) tensor([0.4216, 0.5784], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4216, 0.5784], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8190, 0.1810], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8193, 0.1807], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9904, 0.0096], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9904, 0.0096], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.0000)
Training Output torch.Size([2]) tensor([0.9890, 0.0110], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9890, 0.0110], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7765, 0.2235], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7763, 0.2237], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6478, 0.3522], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6480, 0.3520], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0441, 0.9559], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0442, 0.9558], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.5367e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.5367e-05, 9.9997e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.2051e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.2005e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.4971e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.4971e-06, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3518, 0.6482], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3518, 0.6482], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6523, 0.3477], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6521, 0.3479], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4377, 0.5623], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4376, 0.5624], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0840, 0.9160], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0839, 0.9161], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0435, 0.9565], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0435, 0.9565], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0778, 0.9222], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0779, 0.9221], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 64.634% (loss: 0.081) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0466, 0.9534], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0466, 0.9534], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0079, 0.9921], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0078, 0.9922], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7843)
Training Output torch.Size([2]) tensor([0.0062, 0.9938], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0062, 0.9938], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0237, 0.9763], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0238, 0.9762], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.2324, 0.7676], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2323, 0.7677], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8854, 0.1146], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8848, 0.1152], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9422, 0.0578], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9420, 0.0580], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7978, 0.2022], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7980, 0.2020], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8187, 0.1813], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8186, 0.1814], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4270, 0.5730], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4268, 0.5732], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0127, 0.9873], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0126, 0.9874], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([5.0393e-06, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 24, Training ones: 69 / 81
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([4.8876e-08, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([4.8876e-08, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.000) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([4.8876e-08, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([4.8971e-08, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([4.8971e-08, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([4.8971e-08, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([4.8971e-08, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([4.8971e-08, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([4.8876e-08, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([4.9259e-08, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([4.8876e-08, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([4.9259e-08, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([4.8876e-08, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([4.8971e-08, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([4.8876e-08, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([4.8876e-08, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([4.8876e-08, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([4.8876e-08, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([4.8780e-08, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([4.8876e-08, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([4.8876e-08, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([4.8876e-08, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([4.9259e-08, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([4.8876e-08, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([4.8876e-08, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([4.8876e-08, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[   18] train: 61.321% test: 61.538%
INFO:root:Accuracy: 0.61905, Precision: 0.67901, Recall: 0.79710, F1: 0.73333
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.761904776096344
INFO:root:Epoch 19
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.8876e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.8780e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 8.422) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.0582e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([8.1373e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.1990e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.2206e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.9190e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([8.0280e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.4231e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.4264e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.5590e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.5386e-05, 9.9998e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7020)
Training Output torch.Size([2]) tensor([7.0570e-05, 9.9993e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.0621e-05, 9.9993e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.6732e-04, 9.9973e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.6751e-04, 9.9973e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7686)
Training Output torch.Size([2]) tensor([0.0871, 0.9129], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0868, 0.9132], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9988, 0.0012], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9988, 0.0012], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9997e-01, 3.3409e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9997e-01, 3.3279e-05], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6900)
Training Output torch.Size([2]) tensor([9.9993e-01, 7.2120e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9993e-01, 7.2685e-05], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9961, 0.0039], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9961, 0.0039], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0135) tensor(0.5020)
Training Output torch.Size([2]) tensor([0.3526, 0.6474], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3522, 0.6478], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([1.9045e-04, 9.9981e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.8934e-04, 9.9981e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8395)
Training Output torch.Size([2]) tensor([1.4682e-05, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.4826e-05, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.5341e-04, 9.9985e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.5089e-04, 9.9985e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0265, 0.9735], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0267, 0.9733], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0543, 0.9457], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0543, 0.9457], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0089, 0.9911], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0089, 0.9911], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.2856e-04, 9.9987e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3033e-04, 9.9987e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 61.905% (loss: 4.481) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.7669e-05, 9.9995e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.7114e-05, 9.9995e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.7695e-04, 9.9972e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.7533e-04, 9.9972e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0060, 0.9940], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0060, 0.9940], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7254)
Training Output torch.Size([2]) tensor([0.0161, 0.9839], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0161, 0.9839], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0823, 0.9177], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0824, 0.9176], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4079, 0.5921], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4081, 0.5919], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.0042) tensor(1.)
Training Output torch.Size([2]) tensor([0.9139, 0.0861], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9145, 0.0855], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9242, 0.0758], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9241, 0.0759], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9874, 0.0126], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9877, 0.0123], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9710, 0.0290], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9708, 0.0292], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6413, 0.3587], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6418, 0.3582], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0696, 0.9304], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0695, 0.9305], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0592, 0.9408], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0591, 0.9409], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2713, 0.7287], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2716, 0.7284], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7744, 0.2256], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7744, 0.2256], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.8433, 0.1567], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8434, 0.1566], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.7144, 0.2856], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7154, 0.2846], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2858, 0.7142], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2864, 0.7136], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1995, 0.8005], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1996, 0.8004], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.3176) tensor(1.)
Training Output torch.Size([2]) tensor([0.3577, 0.6423], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3577, 0.6423], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 50.000% (loss: 0.443) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2494, 0.7506], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2492, 0.7508], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0561, 0.9439], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0561, 0.9439], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.1990) tensor(1.)
Training Output torch.Size([2]) tensor([0.0435, 0.9565], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0434, 0.9566], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1067, 0.8933], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1066, 0.8934], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4504, 0.5496], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4504, 0.5496], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9223, 0.0777], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9213, 0.0787], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9707, 0.0293], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9708, 0.0292], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9615, 0.0385], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9612, 0.0388], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9808, 0.0192], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9808, 0.0192], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9719, 0.0281], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9719, 0.0281], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0353) tensor(1.)
Training Output torch.Size([2]) tensor([0.9129, 0.0871], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9134, 0.0866], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6714, 0.3286], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 37, Training ones: 69 / 68
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5537, 0.4463], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5539, 0.4461], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: 0.807) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5537, 0.4463], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5537, 0.4463], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5535, 0.4465], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5537, 0.4463], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5537, 0.4463], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5536, 0.4464], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5536, 0.4464], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5537, 0.4463], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5537, 0.4463], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5536, 0.4464], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5539, 0.4461], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5536, 0.4464], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5536, 0.4464], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5536, 0.4464], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5537, 0.4463], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5537, 0.4463], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5536, 0.4464], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5536, 0.4464], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5536, 0.4464], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5537, 0.4463], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5537, 0.4463], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5535, 0.4465], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5536, 0.4464], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5536, 0.4464], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[   19] train: 48.113% test: 38.462%
INFO:root:Accuracy: 0.47619, Precision: 0.60294, Recall: 0.59420, F1: 0.59854
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 20
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5525, 0.4475], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5529, 0.4471], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 0.698) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.8077)
Training Output torch.Size([2]) tensor([0.3284, 0.6716], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3282, 0.6718], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1199, 0.8801], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1200, 0.8800], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0226, 0.9774], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0226, 0.9774], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8153)
Training Output torch.Size([2]) tensor([5.0349e-05, 9.9995e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.0645e-05, 9.9995e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.3550e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3656e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7790)
Training Output torch.Size([2]) tensor([3.2116e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.1866e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.5505e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.5307e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.3270e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([5.3898e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.3687e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.1160e-06, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0329, 0.9671], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0329, 0.9671], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0501, 0.9499], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0503, 0.9497], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0103, 0.9897], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0100, 0.9900], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0158, 0.9842], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0158, 0.9842], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1065, 0.8935], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1058, 0.8942], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.0353) tensor(1.)
Training Output torch.Size([2]) tensor([0.7179, 0.2821], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7158, 0.2842], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7870, 0.2130], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7883, 0.2117], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3923, 0.6077], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3912, 0.6088], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0253, 0.9747], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0254, 0.9746], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 66.667% (loss: 1.851) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0350, 0.9650], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0351, 0.9649], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4890, 0.5110], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4915, 0.5085], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9963e-01, 3.6543e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9965e-01, 3.5007e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9917e-01, 8.2636e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9914e-01, 8.5590e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9913e-01, 8.7107e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9909e-01, 9.1461e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9964e-01, 3.6047e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9962e-01, 3.7924e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8858, 0.1142], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8899, 0.1101], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8960)
Training Output torch.Size([2]) tensor([0.2127, 0.7873], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2137, 0.7863], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2598, 0.7402], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2591, 0.7409], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4489, 0.5511], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4504, 0.5496], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4790, 0.5210], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4776, 0.5224], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6826, 0.3174], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6822, 0.3178], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9194, 0.0806], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9189, 0.0811], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9592, 0.0408], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9594, 0.0406], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9458, 0.0542], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9460, 0.0540], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8303, 0.1697], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8300, 0.1700], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3739, 0.6261], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3739, 0.6261], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0345, 0.9655], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0350, 0.9650], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0078, 0.9922], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0080, 0.9920], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0059, 0.9941], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0059, 0.9941], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 59.756% (loss: 0.006) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.7497e-04, 9.9933e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.4471e-04, 9.9936e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.6319e-04, 9.9924e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.4008e-04, 9.9926e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0029, 0.9971], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0031, 0.9969], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0315, 0.9685], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0316, 0.9684], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.4622, 0.5378], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4615, 0.5385], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9800, 0.0200], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9801, 0.0199], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9857, 0.0143], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9857, 0.0143], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9970, 0.0030], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9968, 0.0032], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9687, 0.0313], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9681, 0.0319], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0027, 0.9973], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0030, 0.9970], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.3724e-09, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 34, Training ones: 69 / 71
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([4.8096e-11, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([4.8474e-11, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.000) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([4.8474e-11, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([4.8854e-11, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([4.8096e-11, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([4.8854e-11, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([4.8854e-11, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([4.8474e-11, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([4.8474e-11, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([4.8474e-11, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([4.8474e-11, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([4.8096e-11, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([4.8096e-11, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([4.8854e-11, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([4.8474e-11, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([4.8474e-11, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([4.8854e-11, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([4.8474e-11, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([4.8854e-11, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([4.8474e-11, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([4.8474e-11, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([4.8474e-11, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([4.8474e-11, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([4.8096e-11, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([4.8854e-11, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([4.8096e-11, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[   20] train: 55.660% test: 61.538%
INFO:root:Accuracy: 0.56190, Precision: 0.66197, Recall: 0.68116, F1: 0.67143
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.761904776096344
INFO:root:Epoch 21
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.7722e-11, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.8474e-11, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 11.875) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.6251e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.5828e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.1523) tensor(1.)
Training Output torch.Size([2]) tensor([5.1745e-05, 9.9995e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.1846e-05, 9.9995e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0517, 0.9483], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0519, 0.9481], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.2645e-04, 9.9947e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.2645e-04, 9.9947e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.1840e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1840e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.2290e-11, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.1790e-11, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.1897e-14, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1712e-14, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.4217e-11, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.4107e-11, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0111, 0.9889], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0111, 0.9889], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0831, 0.9169], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0834, 0.9166], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 5.3687e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 5.3062e-07], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 1.3056e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.3082e-06], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2334, 0.7666], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2334, 0.7666], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0442e-11, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0483e-11, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.3431e-15, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([6.3184e-15, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.4367e-13, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.4945e-13, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.8059e-09, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.8208e-09, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.8337e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.8057e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.2338e-04, 9.9948e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.2235e-04, 9.9948e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0118, 0.9882], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0118, 0.9882], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 66.667% (loss: 2.227) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4756, 0.5244], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4766, 0.5234], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9873, 0.0127], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9873, 0.0127], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9940, 0.0060], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9940, 0.0060], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9520, 0.0480], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9518, 0.0482], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9191, 0.0809], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9191, 0.0809], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9783, 0.0217], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9783, 0.0217], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9466, 0.0534], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9468, 0.0532], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4097, 0.5903], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4095, 0.5905], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7725)
Training Output torch.Size([2]) tensor([0.2713, 0.7287], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2709, 0.7291], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9966)
Training Output torch.Size([2]) tensor([0.6995, 0.3005], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6995, 0.3005], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9999)
Training Output torch.Size([2]) tensor([0.5441, 0.4559], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5443, 0.4557], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0625, 0.9375], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0625, 0.9375], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0556, 0.9444], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0556, 0.9444], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3450, 0.6550], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3448, 0.6552], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9544, 0.0456], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9542, 0.0458], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9840, 0.0160], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9840, 0.0160], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9661, 0.0339], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9660, 0.0340], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7963, 0.2037], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7961, 0.2039], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.2043, 0.7957], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2044, 0.7956], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0944, 0.9056], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0942, 0.9058], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 52.439% (loss: 0.099) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0174, 0.9826], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0175, 0.9825], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.8691e-04, 9.9951e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.8406e-04, 9.9952e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0133, 0.9867], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0133, 0.9867], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1597, 0.8403], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1607, 0.8393], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6911, 0.3089], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6913, 0.3087], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7749, 0.2251], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7745, 0.2255], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9996)
Training Output torch.Size([2]) tensor([0.9082, 0.0918], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9080, 0.0920], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8594, 0.1406], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8585, 0.1415], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.5622, 0.4378], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5617, 0.4383], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1680, 0.8320], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 38, Training ones: 69 / 67
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1261, 0.8739], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1261, 0.8739], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.135) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1261, 0.8739], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1261, 0.8739], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1261, 0.8739], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1261, 0.8739], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1261, 0.8739], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1261, 0.8739], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1261, 0.8739], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1261, 0.8739], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1261, 0.8739], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1261, 0.8739], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1261, 0.8739], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1261, 0.8739], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1261, 0.8739], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1261, 0.8739], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1261, 0.8739], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1261, 0.8739], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1261, 0.8739], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1261, 0.8739], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1261, 0.8739], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1261, 0.8739], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1261, 0.8739], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1261, 0.8739], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1261, 0.8739], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1261, 0.8739], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[   21] train: 48.113% test: 61.538%
INFO:root:Accuracy: 0.48571, Precision: 0.61194, Recall: 0.59420, F1: 0.60294
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.761904776096344
INFO:root:Epoch 22
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1261, 0.8739], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1261, 0.8739], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 1.103) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2224, 0.7776], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2224, 0.7776], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1818, 0.8182], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1818, 0.8182], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0552, 0.9448], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0552, 0.9448], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.5491e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.5244e-05, 9.9997e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.6567e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.6632e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.0045e-10, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([9.0045e-10, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9282e-10, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0006e-09, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9211)
Training Output torch.Size([2]) tensor([8.4780e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([8.5780e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.1655e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.2311e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.2133) tensor(1.)
Training Output torch.Size([2]) tensor([0.0330, 0.9670], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0329, 0.9671], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0093, 0.9907], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0093, 0.9907], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.2172e-05, 9.9994e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.2172e-05, 9.9994e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.6018e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.6469e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.1323e-05, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1323e-05, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.5319e-04, 9.9985e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.5379e-04, 9.9985e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0173, 0.9827], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0172, 0.9828], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0232, 0.9768], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0231, 0.9769], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0093) tensor(1.)
Training Output torch.Size([2]) tensor([0.0122, 0.9878], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0122, 0.9878], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 76.190% (loss: 2.211) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0158, 0.9842], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0159, 0.9841], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0413, 0.9587], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0412, 0.9588], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1603, 0.8397], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1590, 0.8410], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2550, 0.7450], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2550, 0.7450], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.2471) tensor(1.)
Training Output torch.Size([2]) tensor([0.4946, 0.5054], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4951, 0.5049], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8047, 0.1953], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8041, 0.1959], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8483)
Training Output torch.Size([2]) tensor([0.8802, 0.1198], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8804, 0.1196], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8578, 0.1422], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8585, 0.1415], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8985, 0.1015], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8993, 0.1007], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8627, 0.1373], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8639, 0.1361], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7172, 0.2828], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7172, 0.2828], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4357, 0.5643], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4363, 0.5637], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3766, 0.6234], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3778, 0.6222], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4696, 0.5304], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4698, 0.5302], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6674, 0.3326], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6674, 0.3326], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6990, 0.3010], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6998, 0.3002], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6104, 0.3896], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6098, 0.3902], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4662, 0.5338], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4651, 0.5349], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4485, 0.5515], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4488, 0.5512], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6784)
Training Output torch.Size([2]) tensor([0.4971, 0.5029], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4973, 0.5027], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 57.317% (loss: 0.688) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4951, 0.5049], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4950, 0.5050], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7064)
Training Output torch.Size([2]) tensor([0.4498, 0.5502], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4497, 0.5503], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4574, 0.5426], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4574, 0.5426], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5109, 0.4891], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5108, 0.4892], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5423, 0.4577], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5422, 0.4578], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5170, 0.4830], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5160, 0.4840], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4732, 0.5268], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4729, 0.5271], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3982, 0.6018], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3984, 0.6016], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3938, 0.6062], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3958, 0.6042], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3447, 0.6553], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3458, 0.6542], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2384, 0.7616], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2374, 0.7626], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1047, 0.8953], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 24, Training ones: 69 / 81
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0646, 0.9354], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0644, 0.9356], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.067) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0644, 0.9356], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0644, 0.9356], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0644, 0.9356], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0645, 0.9355], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0645, 0.9355], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0644, 0.9356], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0645, 0.9355], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0645, 0.9355], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0645, 0.9355], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0644, 0.9356], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0645, 0.9355], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0645, 0.9355], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0644, 0.9356], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0645, 0.9355], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0645, 0.9355], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0645, 0.9355], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0645, 0.9355], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0645, 0.9355], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0644, 0.9356], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0645, 0.9355], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0644, 0.9356], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0644, 0.9356], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0645, 0.9355], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0644, 0.9356], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[   22] train: 57.547% test: 61.538%
INFO:root:Accuracy: 0.58095, Precision: 0.65432, Recall: 0.76812, F1: 0.70667
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.761904776096344
INFO:root:Epoch 23
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0645, 0.9355], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0646, 0.9354], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 1.403) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0685, 0.9315], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0685, 0.9315], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0450, 0.9550], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0451, 0.9549], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0161, 0.9839], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0162, 0.9838], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.4110e-04, 9.9976e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.3969e-04, 9.9976e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.9374e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.9488e-05, 9.9998e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.3980e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3980e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8529)
Training Output torch.Size([2]) tensor([7.1124e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([7.1682e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.5314e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.5314e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.6765e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.7065e-06, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.2243e-04, 9.9988e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.2267e-04, 9.9988e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0066, 0.9934], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0065, 0.9935], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0616, 0.9384], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0615, 0.9385], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9693, 0.0307], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9686, 0.0314], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9743, 0.0257], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9744, 0.0256], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5494, 0.4506], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5465, 0.4535], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2714) tensor(1.)
Training Output torch.Size([2]) tensor([0.0680, 0.9320], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0675, 0.9325], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0056, 0.9944], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0056, 0.9944], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 66.667% (loss: 2.595) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0093, 0.9907], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0094, 0.9906], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1073, 0.8927], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1061, 0.8939], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8022, 0.1978], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8041, 0.1959], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9009, 0.0991], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8984, 0.1016], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9994)
Training Output torch.Size([2]) tensor([0.9836, 0.0164], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9838, 0.0162], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9964e-01, 3.5532e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9965e-01, 3.4879e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9987e-01, 1.2667e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9987e-01, 1.2730e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9908e-01, 9.1774e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9906e-01, 9.3811e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.0667) tensor(0.8116)
Training Output torch.Size([2]) tensor([0.9969, 0.0031], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9968, 0.0032], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9349, 0.0651], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9354, 0.0646], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2487, 0.7513], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2476, 0.7524], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1401, 0.8599], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1408, 0.8592], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3657, 0.6343], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3655, 0.6345], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7264, 0.2736], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7266, 0.2734], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.6751, 0.3249], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6747, 0.3253], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4221, 0.5779], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4217, 0.5783], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1514, 0.8486], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1520, 0.8480], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8253)
Training Output torch.Size([2]) tensor([0.0337, 0.9663], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0337, 0.9663], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0216, 0.9784], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0217, 0.9783], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0412, 0.9588], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0412, 0.9588], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 59.756% (loss: 0.042) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0341, 0.9659], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0341, 0.9659], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0126, 0.9874], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0126, 0.9874], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.0078) tensor(1.)
Training Output torch.Size([2]) tensor([0.0148, 0.9852], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0149, 0.9851], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0486, 0.9514], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0482, 0.9518], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3078, 0.6922], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3084, 0.6916], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9191, 0.0809], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9188, 0.0812], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9588, 0.0412], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9582, 0.0418], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8996, 0.1004], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8999, 0.1001], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9430, 0.0570], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9430, 0.0570], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9292, 0.0708], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9291, 0.0709], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8483, 0.1517], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8486, 0.1514], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6936)
Training Output torch.Size([2]) tensor([0.6191, 0.3809], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 39, Training ones: 69 / 66
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5321, 0.4679], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5321, 0.4679], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: 0.759) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5322, 0.4678], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5321, 0.4679], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5322, 0.4678], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5321, 0.4679], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5321, 0.4679], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5323, 0.4677], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5321, 0.4679], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5321, 0.4679], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5322, 0.4678], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5321, 0.4679], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5322, 0.4678], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5321, 0.4679], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5323, 0.4677], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5321, 0.4679], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5321, 0.4679], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5321, 0.4679], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5321, 0.4679], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5322, 0.4678], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5321, 0.4679], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5321, 0.4679], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5322, 0.4678], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5322, 0.4678], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5321, 0.4679], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5321, 0.4679], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[   23] train: 55.660% test: 38.462%
INFO:root:Accuracy: 0.55238, Precision: 0.66667, Recall: 0.63768, F1: 0.65185
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 24
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5322, 0.4678], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5327, 0.4673], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 0.695) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3502, 0.6498], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3504, 0.6496], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1577, 0.8423], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1572, 0.8428], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0419, 0.9581], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0418, 0.9582], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0047, 0.9953], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0047, 0.9953], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.4346e-04, 9.9976e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.4251e-04, 9.9976e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.7326e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.6986e-06, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.6165e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.5760e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.0367e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.8973e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.0003e-04, 9.9970e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.0003e-04, 9.9970e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0175, 0.9825], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0179, 0.9821], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9673, 0.0327], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9666, 0.0334], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6465, 0.3535], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6433, 0.3567], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.7421e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.5559e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.2864e-14, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1804e-14, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.7100e-15, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9402e-15, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.1954e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1954e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9857, 0.0143], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9857, 0.0143], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9996e-01, 4.4433e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9995e-01, 4.5309e-05], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.9903, 0.0097], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9903, 0.0097], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 52.381% (loss: 3.298) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8870)
Training Output torch.Size([2]) tensor([0.3303, 0.6697], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3268, 0.6732], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.0318) tensor(1.)
Training Output torch.Size([2]) tensor([0.9934, 0.0066], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9933, 0.0067], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9175, 0.0825], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9180, 0.0820], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9595, 0.0405], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9605, 0.0395], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9962e-01, 3.7998e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9962e-01, 3.7850e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7435)
Training Output torch.Size([2]) tensor([9.9946e-01, 5.4315e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9945e-01, 5.5278e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8914, 0.1086], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8926, 0.1074], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9109, 0.0891], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9110, 0.0890], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2668, 0.7332], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2674, 0.7326], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0132, 0.9868], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0130, 0.9870], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0089, 0.9911], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0089, 0.9911], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0224, 0.9776], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0222, 0.9778], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1265, 0.8735], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1250, 0.8750], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([0.6469, 0.3531], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6456, 0.3544], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8882, 0.1118], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8884, 0.1116], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9214, 0.0786], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9208, 0.0792], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8721, 0.1279], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8719, 0.1281], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6822, 0.3178], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6809, 0.3191], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3053, 0.6947], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3069, 0.6931], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 50.000% (loss: 0.365) [mem: 2.63e+04]
Training min-max: tensor(0.1997) tensor(1.)
Training Output torch.Size([2]) tensor([0.0617, 0.9383], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0617, 0.9383], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0068, 0.9932], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0068, 0.9932], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.2523) tensor(1.)
Training Output torch.Size([2]) tensor([0.0029, 0.9971], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0029, 0.9971], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0077, 0.9923], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0078, 0.9922], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0306, 0.9694], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0307, 0.9693], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1244, 0.8756], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1236, 0.8764], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.1750, 0.8250], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1757, 0.8243], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3094, 0.6906], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3124, 0.6876], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3083, 0.6917], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3087, 0.6913], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2363, 0.7637], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2369, 0.7631], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1490, 0.8510], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 36, Training ones: 69 / 69
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1340, 0.8660], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1340, 0.8660], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.144) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1338, 0.8662], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1340, 0.8660], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1340, 0.8660], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1339, 0.8661], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1339, 0.8661], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1339, 0.8661], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1339, 0.8661], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1339, 0.8661], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1339, 0.8661], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1340, 0.8660], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1340, 0.8660], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1340, 0.8660], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1340, 0.8660], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1339, 0.8661], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1339, 0.8661], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1339, 0.8661], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1340, 0.8660], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1340, 0.8660], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1338, 0.8662], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1339, 0.8661], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1340, 0.8660], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1340, 0.8660], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1339, 0.8661], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1340, 0.8660], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[   24] train: 51.887% test: 61.538%
INFO:root:Accuracy: 0.52381, Precision: 0.63768, Recall: 0.63768, F1: 0.63768
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.761904776096344
INFO:root:Epoch 25
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1340, 0.8660], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1340, 0.8660], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 1.077) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1678, 0.8322], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1675, 0.8325], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1449, 0.8551], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1435, 0.8565], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0801, 0.9199], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0795, 0.9205], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0214, 0.9786], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0214, 0.9786], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6588)
Training Output torch.Size([2]) tensor([5.8748e-05, 9.9994e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.9557e-05, 9.9994e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.4090e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.4090e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.5564e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.5386e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7294)
Training Output torch.Size([2]) tensor([1.9561e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.9485e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.0018e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.0018e-06, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.3333e-05, 9.9992e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.3659e-05, 9.9992e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.1728e-04, 9.9948e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.1829e-04, 9.9948e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0034, 0.9966], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0034, 0.9966], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8033)
Training Output torch.Size([2]) tensor([0.0180, 0.9820], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0181, 0.9819], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1774, 0.8226], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1778, 0.8222], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8522, 0.1478], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8520, 0.1480], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8982)
Training Output torch.Size([2]) tensor([0.8816, 0.1184], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8812, 0.1188], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6410, 0.3590], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6410, 0.3590], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3013, 0.6987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3011, 0.6989], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 61.905% (loss: 0.779) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3334, 0.6666], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3330, 0.6670], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4287, 0.5713], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4287, 0.5713], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5683, 0.4317], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5681, 0.4319], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2160, 0.7840], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2159, 0.7841], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6071, 0.3929], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6114, 0.3886], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8796, 0.1204], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8804, 0.1196], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8644, 0.1356], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8634, 0.1366], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7290, 0.2710], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7293, 0.2707], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9569)
Training Output torch.Size([2]) tensor([0.7378, 0.2622], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7395, 0.2605], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6005, 0.3995], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6028, 0.3972], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3022, 0.6978], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3012, 0.6988], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2130, 0.7870], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2128, 0.7872], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2561, 0.7439], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2548, 0.7452], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.2510) tensor(1.0000)
Training Output torch.Size([2]) tensor([0.4460, 0.5540], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4458, 0.5542], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7612, 0.2388], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7607, 0.2393], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8591, 0.1409], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8592, 0.1408], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8581, 0.1419], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8574, 0.1426], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7746, 0.2254], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7748, 0.2252], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5587, 0.4413], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5583, 0.4417], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2486, 0.7514], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2494, 0.7506], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 50.000% (loss: 0.286) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0604, 0.9396], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0609, 0.9391], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0089, 0.9911], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0089, 0.9911], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9192)
Training Output torch.Size([2]) tensor([0.0030, 0.9970], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0030, 0.9970], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6627)
Training Output torch.Size([2]) tensor([0.0054, 0.9946], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0055, 0.9945], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0217, 0.9783], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0218, 0.9782], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1265, 0.8735], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1263, 0.8737], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2150, 0.7850], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2150, 0.7850], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4865, 0.5135], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4858, 0.5142], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5189, 0.4811], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5153, 0.4847], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3871, 0.6129], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3871, 0.6129], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6350)
Training Output torch.Size([2]) tensor([0.2303, 0.7697], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 32, Training ones: 69 / 73
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2141, 0.7859], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2142, 0.7858], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.241) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2141, 0.7859], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2140, 0.7860], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2141, 0.7859], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2141, 0.7859], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2141, 0.7859], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2142, 0.7858], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2141, 0.7859], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2141, 0.7859], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2142, 0.7858], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2141, 0.7859], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2140, 0.7860], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2141, 0.7859], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2141, 0.7859], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2141, 0.7859], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2141, 0.7859], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2142, 0.7858], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2141, 0.7859], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2140, 0.7860], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2140, 0.7860], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2141, 0.7859], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2141, 0.7859], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2141, 0.7859], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2141, 0.7859], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2140, 0.7860], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[   25] train: 50.000% test: 61.538%
INFO:root:Accuracy: 0.50476, Precision: 0.61644, Recall: 0.65217, F1: 0.63380
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.761904776096344
INFO:root:Epoch 26
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2141, 0.7859], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2136, 0.7864], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 0.892) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2767, 0.7233], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2766, 0.7234], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2728, 0.7272], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2723, 0.7277], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2175, 0.7825], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2175, 0.7825], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1329, 0.8671], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1324, 0.8676], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0544, 0.9456], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0542, 0.9458], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0122, 0.9878], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0121, 0.9879], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7341)
Training Output torch.Size([2]) tensor([2.6017e-04, 9.9974e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.6427e-04, 9.9974e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.7883e-04, 9.9982e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.7709e-04, 9.9982e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0275) tensor(1.)
Training Output torch.Size([2]) tensor([1.3033e-04, 9.9987e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3008e-04, 9.9987e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.9365e-04, 9.9971e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.9251e-04, 9.9971e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8878)
Training Output torch.Size([2]) tensor([5.9071e-04, 9.9941e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.8841e-04, 9.9941e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9251)
Training Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4078)
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0056, 0.9944], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0056, 0.9944], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0486, 0.9514], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0484, 0.9516], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5071, 0.4929], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5066, 0.4934], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7373)
Training Output torch.Size([2]) tensor([0.7221, 0.2779], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7225, 0.2775], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5784, 0.4216], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5787, 0.4213], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2454, 0.7546], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2482, 0.7518], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 61.905% (loss: 0.845) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1875, 0.8125], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1896, 0.8104], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2463, 0.7537], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2488, 0.7512], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4270, 0.5730], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4269, 0.5731], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4512, 0.5488], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4512, 0.5488], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5892, 0.4108], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5896, 0.4104], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7957, 0.2043], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7955, 0.2045], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8341, 0.1659], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8340, 0.1660], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7722, 0.2278], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7726, 0.2274], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8014, 0.1986], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8013, 0.1987], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7374, 0.2626], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7375, 0.2625], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5882, 0.4118], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5882, 0.4118], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9957)
Training Output torch.Size([2]) tensor([0.3989, 0.6011], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3988, 0.6012], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3356, 0.6644], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3355, 0.6645], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3474, 0.6526], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3466, 0.6534], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4080, 0.5920], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4083, 0.5917], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4136, 0.5864], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4137, 0.5863], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3773, 0.6227], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3774, 0.6226], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3152, 0.6848], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3154, 0.6846], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2988, 0.7012], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2985, 0.7015], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3159, 0.6841], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3161, 0.6839], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 59.756% (loss: 0.380) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3037, 0.6963], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3048, 0.6952], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2674, 0.7326], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2665, 0.7335], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2642, 0.7358], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2643, 0.7357], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2892, 0.7108], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2889, 0.7111], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3389, 0.6611], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3388, 0.6612], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4080, 0.5920], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4081, 0.5919], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4930, 0.5070], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4934, 0.5066], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.1294) tensor(1.)
Training Output torch.Size([2]) tensor([0.5237, 0.4763], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5234, 0.4766], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5828, 0.4172], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5826, 0.4174], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5769, 0.4231], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5770, 0.4230], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4951, 0.5049], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4945, 0.5055], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7786)
Training Output torch.Size([2]) tensor([0.3000, 0.7000], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 26, Training ones: 69 / 79
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2679, 0.7321], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2679, 0.7321], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.312) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2681, 0.7319], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2679, 0.7321], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2677, 0.7323], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2678, 0.7322], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2680, 0.7320], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2682, 0.7318], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2679, 0.7321], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2679, 0.7321], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2680, 0.7320], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2677, 0.7323], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2678, 0.7322], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2679, 0.7321], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2677, 0.7323], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2679, 0.7321], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2680, 0.7320], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2679, 0.7321], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2681, 0.7319], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2679, 0.7321], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2679, 0.7321], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2679, 0.7321], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2677, 0.7323], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2677, 0.7323], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2680, 0.7320], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2679, 0.7321], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[   26] train: 57.547% test: 61.538%
INFO:root:Accuracy: 0.58095, Precision: 0.65823, Recall: 0.75362, F1: 0.70270
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.761904776096344
INFO:root:Epoch 27
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2652, 0.7348], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2667, 0.7333], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 0.815) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.7215)
Training Output torch.Size([2]) tensor([0.3583, 0.6417], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3582, 0.6418], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3350, 0.6650], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3350, 0.6650], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2279, 0.7721], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2294, 0.7706], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0939, 0.9061], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0922, 0.9078], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0139, 0.9861], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0141, 0.9859], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7097)
Training Output torch.Size([2]) tensor([3.4939e-04, 9.9965e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.5213e-04, 9.9965e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0431) tensor(1.)
Training Output torch.Size([2]) tensor([5.1942e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.2349e-06, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9987)
Training Output torch.Size([2]) tensor([2.2212e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.1953e-05, 9.9998e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6628, 0.3372], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6671, 0.3329], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0176, 0.9824], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0172, 0.9828], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8429, 0.1571], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8423, 0.1577], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0208, 0.9792], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0217, 0.9783], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9990)
Training Output torch.Size([2]) tensor([1.7323e-09, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.8694e-09, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.1573e-16, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.7372e-16, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.4818e-14, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([6.3317e-14, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8425)
Training Output torch.Size([2]) tensor([4.6925e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.6560e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0056, 0.9944], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0058, 0.9942], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0040, 0.9960], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0040, 0.9960], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.5894e-04, 9.9934e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.6023e-04, 9.9934e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 66.667% (loss: 3.662) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0184, 0.9816], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0182, 0.9818], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5550, 0.4450], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5634, 0.4366], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9123, 0.0877], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9112, 0.0888], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9977, 0.0023], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9976, 0.0024], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9998e-01, 1.6315e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 1.6571e-05], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 1.8520e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.8305e-06], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9999e-01, 5.3382e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 5.2966e-06], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9999e-01, 1.4454e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 1.4369e-05], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9975e-01, 2.4729e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9973e-01, 2.7479e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0314) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.9846, 0.0154], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9834, 0.0166], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5263, 0.4737], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5482, 0.4518], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2058, 0.7942], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2063, 0.7937], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1886, 0.8114], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1884, 0.8116], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3167, 0.6833], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3169, 0.6831], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3460, 0.6540], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3416, 0.6584], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8912)
Training Output torch.Size([2]) tensor([0.2923, 0.7077], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2804, 0.7196], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1974, 0.8026], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1863, 0.8137], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0059, 0.9941], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0097, 0.9903], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2687, 0.7313], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2477, 0.7523], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 64.634% (loss: 0.299) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1170, 0.8830], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1005, 0.8995], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0161, 0.9839], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0161, 0.9839], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7043)
Training Output torch.Size([2]) tensor([0.0096, 0.9904], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0096, 0.9904], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0150, 0.9850], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0159, 0.9841], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0587, 0.9413], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0589, 0.9411], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 2.6118e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.7129e-06], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0146, 0.9854], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0145, 0.9855], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9686)
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.3936e-04, 9.9926e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.2507e-04, 9.9927e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.6158) tensor(0.9808)
Training Output torch.Size([2]) tensor([4.5121e-04, 9.9955e-01], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 26, Training ones: 69 / 79
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0020, 0.9980], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.002) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0020, 0.9980], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0020, 0.9980], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0020, 0.9980], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0020, 0.9980], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0020, 0.9980], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0020, 0.9980], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0020, 0.9980], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0020, 0.9980], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0020, 0.9980], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0020, 0.9980], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0020, 0.9980], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0020, 0.9980], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0020, 0.9980], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0020, 0.9980], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0020, 0.9980], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0020, 0.9980], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0020, 0.9980], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0020, 0.9980], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[   27] train: 63.208% test: 61.538%
INFO:root:Accuracy: 0.63810, Precision: 0.69620, Recall: 0.79710, F1: 0.74324
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.761904776096344
INFO:root:Epoch 28
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0020, 0.9980], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 3.095) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0379, 0.9621], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0395, 0.9605], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1126, 0.8874], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1266, 0.8734], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0947, 0.9053], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0936, 0.9064], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0192, 0.9808], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0191, 0.9809], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.5100e-04, 9.9925e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.2633e-04, 9.9937e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.2299e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.7848e-05, 9.9998e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.8883e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([6.2279e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5089)
Training Output torch.Size([2]) tensor([2.0661e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.8091e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0030, 0.9970], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0028, 0.9972], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0329, 0.9671], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0335, 0.9665], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 2.0470e-16], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.9380e-16], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 2.9155e-15], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 2.8038e-15], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9965e-01, 3.5213e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9960e-01, 4.0369e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.4891e-15, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.5244e-15, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.3241e-22, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([7.1662e-22, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([4.3400e-19, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.3400e-19, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.0730e-10, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.9780e-10, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.6462e-04, 9.9954e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.3627e-04, 9.9956e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4135, 0.5865], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4144, 0.5856], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0167, 0.9833], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0171, 0.9829], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 61.905% (loss: 2.055) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.8230, 0.1770], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8229, 0.1771], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2015, 0.7985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2009, 0.7991], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9474, 0.0526], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9475, 0.0525], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5870, 0.4130], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5875, 0.4125], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9719, 0.0281], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9719, 0.0281], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9997e-01, 3.1324e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9997e-01, 3.1263e-05], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9998e-01, 1.6156e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 1.5968e-05], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8843)
Training Output torch.Size([2]) tensor([9.9998e-01, 1.6030e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 1.5968e-05], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9998e-01, 1.6507e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 1.6571e-05], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9989, 0.0011], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9989, 0.0011], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5044, 0.4956], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5039, 0.4961], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.3512e-04, 9.9986e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3512e-04, 9.9986e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.1959e-05, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1889e-05, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9513, 0.0487], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9513, 0.0487], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9901e-01, 9.8501e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9902e-01, 9.7545e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9881, 0.0119], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9882, 0.0118], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1544, 0.8456], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1544, 0.8456], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7017, 0.2983], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6988, 0.3012], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7974, 0.2026], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7976, 0.2024], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 50.000% (loss: 1.597) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6225, 0.3775], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6211, 0.3789], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1864, 0.8136], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1865, 0.8135], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0843, 0.9157], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0847, 0.9153], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1039, 0.8961], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1039, 0.8961], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3255, 0.6745], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3242, 0.6758], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8719, 0.1281], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8715, 0.1285], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9549, 0.0451], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9559, 0.0441], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9268, 0.0732], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9268, 0.0732], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9652, 0.0348], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9649, 0.0351], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8792)
Training Output torch.Size([2]) tensor([0.9220, 0.0780], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9211, 0.0789], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6206, 0.3794], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6204, 0.3796], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.3137) tensor(1.)
Training Output torch.Size([2]) tensor([0.1269, 0.8731], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 50, Training ones: 69 / 55
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0573, 0.9427], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0572, 0.9428], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.059) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0573, 0.9427], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0572, 0.9428], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0571, 0.9429], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0573, 0.9427], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0572, 0.9428], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0572, 0.9428], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0572, 0.9428], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0572, 0.9428], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0572, 0.9428], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0572, 0.9428], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0572, 0.9428], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0572, 0.9428], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0572, 0.9428], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0572, 0.9428], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0572, 0.9428], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0572, 0.9428], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0572, 0.9428], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0572, 0.9428], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0572, 0.9428], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0572, 0.9428], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0572, 0.9428], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0572, 0.9428], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0572, 0.9428], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0572, 0.9428], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[   28] train: 44.340% test: 61.538%
INFO:root:Accuracy: 0.44762, Precision: 0.60000, Recall: 0.47826, F1: 0.53226
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.761904776096344
INFO:root:Epoch 29
Training min-max: tensor(0.) tensor(0.8443)
Training Output torch.Size([2]) tensor([0.0574, 0.9426], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0572, 0.9428], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 1.460) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0673, 0.9327], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0676, 0.9324], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0452, 0.9548], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0449, 0.9551], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0171, 0.9829], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0172, 0.9828], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0030, 0.9970], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0030, 0.9970], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.8296e-04, 9.9972e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.8296e-04, 9.9972e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.4064e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.4539e-05, 9.9998e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.1400e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.1400e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.8351e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.8240e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.2932e-04, 9.9987e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.2932e-04, 9.9987e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0054, 0.9946], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0054, 0.9946], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9864, 0.0136], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9864, 0.0136], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9942, 0.0058], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9942, 0.0058], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3359, 0.6641], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3358, 0.6642], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.0959e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.1080e-05, 9.9997e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.0314) tensor(1.)
Training Output torch.Size([2]) tensor([2.4394e-04, 9.9976e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.4157e-04, 9.9976e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0038, 0.9962], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0038, 0.9962], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0020, 0.9980], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0020, 0.9980], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.7704e-04, 9.9912e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.6937e-04, 9.9913e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.5837e-04, 9.9964e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.5977e-04, 9.9964e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 66.667% (loss: 3.967) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.7127e-04, 9.9933e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.7456e-04, 9.9933e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.0059, 0.9941], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0059, 0.9941], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1655, 0.8345], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1657, 0.8343], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5631, 0.4369], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5627, 0.4373], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7426)
Training Output torch.Size([2]) tensor([0.9676, 0.0324], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9676, 0.0324], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4118)
Training Output torch.Size([2]) tensor([9.9961e-01, 3.8748e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9961e-01, 3.8861e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9996e-01, 3.5703e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9996e-01, 3.6336e-05], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9997e-01, 3.1324e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9997e-01, 3.1942e-05], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9997e-01, 2.9484e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9997e-01, 2.9715e-05], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9983e-01, 1.6931e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9983e-01, 1.7031e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6426)
Training Output torch.Size([2]) tensor([0.9964, 0.0036], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9964, 0.0036], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8870, 0.1130], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8870, 0.1130], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6320, 0.3680], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6328, 0.3672], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1906, 0.8094], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1898, 0.8102], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1238, 0.8762], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1238, 0.8762], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0463, 0.9537], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0456, 0.9544], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0090, 0.9910], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0090, 0.9910], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.0589e-04, 9.9939e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.0235e-04, 9.9940e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.2695e-04, 9.9967e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.2822e-04, 9.9967e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 67.073% (loss: 0.002) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0113, 0.9887], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0115, 0.9885], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0041, 0.9959], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0041, 0.9959], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0535, 0.9465], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0542, 0.9458], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9172, 0.0828], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9161, 0.0839], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8075)
Training Output torch.Size([2]) tensor([0.9732, 0.0268], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9732, 0.0268], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8788, 0.1212], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8785, 0.1215], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1195, 0.8805], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1192, 0.8808], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.1401e-04, 9.9989e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1368e-04, 9.9989e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.3668e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.3507e-05, 9.9998e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.2497e-05, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.2472e-05, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2039) tensor(1.)
Training Output torch.Size([2]) tensor([1.1147e-05, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1158e-05, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.3122e-05, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 30, Training ones: 69 / 75
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.004) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[   29] train: 65.094% test: 61.538%
INFO:root:Accuracy: 0.65714, Precision: 0.72000, Recall: 0.78261, F1: 0.75000
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.761904776096344
INFO:root:Epoch 30
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 2.807) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9854, 0.0146], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9853, 0.0147], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9982, 0.0018], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9982, 0.0018], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9714, 0.0286], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9713, 0.0287], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2420, 0.7580], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2422, 0.7578], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.5189e-05, 9.9994e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.5082e-05, 9.9994e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.1813e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.1813e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.1493e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.1655e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.0104e-05, 9.9991e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.9665e-05, 9.9991e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2505, 0.7495], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2505, 0.7495], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8044, 0.1956], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8050, 0.1950], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7934, 0.2066], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7944, 0.2056], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2070) tensor(1.)
Training Output torch.Size([2]) tensor([0.2798, 0.7202], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2783, 0.7217], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2999, 0.7001], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2995, 0.7005], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7931, 0.2069], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7912, 0.2088], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7596, 0.2404], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7599, 0.2401], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2513, 0.7487], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2516, 0.7484], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0075, 0.9925], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0075, 0.9925], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.1947e-05, 9.9995e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.2099e-05, 9.9995e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 47.619% (loss: 4.934) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.1437e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.0344e-06, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(8.0130e-05) tensor(1.)
Training Output torch.Size([2]) tensor([5.1337e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.1739e-06, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.1942e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.2318e-05, 9.9997e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.3982e-04, 9.9986e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.4037e-04, 9.9986e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0358, 0.9642], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0357, 0.9643], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4173, 0.5827], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4173, 0.5827], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0275) tensor(1.)
Training Output torch.Size([2]) tensor([0.7251, 0.2749], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7249, 0.2751], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9370, 0.0630], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9369, 0.0631], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9601, 0.0399], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9600, 0.0400], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9307, 0.0693], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9309, 0.0691], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7792, 0.2208], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7793, 0.2207], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7203, 0.2797], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7208, 0.2792], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4645, 0.5355], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4653, 0.5347], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4310, 0.5690], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4303, 0.5697], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2326, 0.7674], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2335, 0.7665], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0523, 0.9477], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0524, 0.9476], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0035, 0.9965], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0035, 0.9965], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 54.878% (loss: 0.002) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2431) tensor(1.)
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0059, 0.9941], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0059, 0.9941], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0482, 0.9518], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0483, 0.9517], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3769, 0.6231], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3750, 0.6250], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8902, 0.1098], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8904, 0.1096], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8568, 0.1432], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8567, 0.1433], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2352, 0.7648], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2358, 0.7642], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0593, 0.9407], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0593, 0.9407], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.0937e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.1136e-06, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.6212e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 30, Training ones: 69 / 75
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([8.5278e-08, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([8.5278e-08, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.000) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([8.5278e-08, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([8.5612e-08, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([8.5612e-08, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([8.5278e-08, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([8.5278e-08, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([8.5278e-08, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([8.5278e-08, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([8.5278e-08, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([8.5278e-08, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([8.5612e-08, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([8.5278e-08, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([8.5278e-08, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([8.5612e-08, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([8.5278e-08, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([8.5278e-08, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([8.5278e-08, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([8.5278e-08, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([8.5278e-08, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([8.5612e-08, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([8.5278e-08, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([8.5612e-08, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([8.5612e-08, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([8.5278e-08, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([8.5278e-08, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[   30] train: 53.774% test: 61.538%
INFO:root:Accuracy: 0.54286, Precision: 0.64000, Recall: 0.69565, F1: 0.66667
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.761904776096344
INFO:root:Epoch 31
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.6284e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([8.5612e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 8.141) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.9961)
Training Output torch.Size([2]) tensor([2.5415e-04, 9.9975e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.5514e-04, 9.9974e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0433, 0.9567], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0434, 0.9566], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.3414e-04, 9.9977e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.3414e-04, 9.9977e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.1412e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.1250e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.5322e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.5502e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.3099e-09, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([9.3829e-09, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.9465e-10, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([7.8846e-10, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.1586e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1586e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.6403e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.6546e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.9223e-04, 9.9981e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.9223e-04, 9.9981e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0176, 0.9824], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0176, 0.9824], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0360, 0.9640], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0359, 0.9641], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0117, 0.9883], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0118, 0.9882], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.7447e-04, 9.9913e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.7107e-04, 9.9913e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0073, 0.9927], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0072, 0.9928], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0118, 0.9882], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0117, 0.9883], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0088, 0.9912], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0088, 0.9912], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0033, 0.9967], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0033, 0.9967], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 76.190% (loss: 2.853) [mem: 2.63e+04]
Training min-max: tensor(0.2487) tensor(1.)
Training Output torch.Size([2]) tensor([0.0028, 0.9972], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0028, 0.9972], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0053, 0.9947], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0054, 0.9946], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0181, 0.9819], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0177, 0.9823], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0263, 0.9737], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0267, 0.9733], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0625, 0.9375], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0630, 0.9370], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1757, 0.8243], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1768, 0.8232], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4312, 0.5688], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4320, 0.5680], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5713, 0.4287], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5712, 0.4288], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7397, 0.2603], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7401, 0.2599], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7641, 0.2359], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7637, 0.2363], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9993)
Training Output torch.Size([2]) tensor([0.6789, 0.3211], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6787, 0.3213], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4767, 0.5233], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4767, 0.5233], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.4328, 0.5672], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4327, 0.5673], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5059, 0.4941], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5055, 0.4945], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5327, 0.4673], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5324, 0.4676], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4543, 0.5457], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4545, 0.5455], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3080, 0.6920], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3078, 0.6922], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1429, 0.8571], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1429, 0.8571], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4627)
Training Output torch.Size([2]) tensor([0.1087, 0.8913], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1093, 0.8907], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9961)
Training Output torch.Size([2]) tensor([0.1648, 0.8352], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1647, 0.8353], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 64.634% (loss: 0.180) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1665, 0.8335], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1648, 0.8352], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0940, 0.9060], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0938, 0.9062], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.1946) tensor(1.)
Training Output torch.Size([2]) tensor([0.1010, 0.8990], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1011, 0.8989], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1888, 0.8112], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1883, 0.8117], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3950, 0.6050], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3953, 0.6047], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8396, 0.1604], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8408, 0.1592], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7122, 0.2878], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7029, 0.2971], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0025, 0.9975], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0025, 0.9975], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0030, 0.9970], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0030, 0.9970], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.3955e-05, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.4454e-05, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0696e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([8.8676e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.2509)
Training Output torch.Size([2]) tensor([7.5236e-10, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 16, Training ones: 69 / 89
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([2.2650e-05, 9.9998e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.2518e-05, 9.9998e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.000) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([2.2343e-05, 9.9998e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.2430e-05, 9.9998e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([2.2739e-05, 9.9998e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.2695e-05, 9.9998e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([2.2518e-05, 9.9998e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.2386e-05, 9.9998e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([2.2518e-05, 9.9998e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.2695e-05, 9.9998e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([2.2386e-05, 9.9998e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.2739e-05, 9.9998e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([2.2430e-05, 9.9998e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.2474e-05, 9.9998e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([2.2695e-05, 9.9998e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.2474e-05, 9.9998e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([2.2430e-05, 9.9998e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.2474e-05, 9.9998e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([2.2430e-05, 9.9998e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.2430e-05, 9.9998e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([2.2518e-05, 9.9998e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.2474e-05, 9.9998e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([2.2650e-05, 9.9998e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.2606e-05, 9.9998e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([2.2430e-05, 9.9998e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.2430e-05, 9.9998e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[   31] train: 61.321% test: 61.538%
INFO:root:Accuracy: 0.61905, Precision: 0.66292, Recall: 0.85507, F1: 0.74684
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.761904776096344
INFO:root:Epoch 32
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.3142e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.1237e-05, 9.9998e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 5.379) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7798, 0.2202], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7770, 0.2230], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9570, 0.0430], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9573, 0.0427], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7229, 0.2771], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7231, 0.2769], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0226, 0.9774], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0224, 0.9776], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.3316e-05, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3316e-05, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8856)
Training Output torch.Size([2]) tensor([1.0225e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0145e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.2066e-11, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1972e-11, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.5615e-11, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.5615e-11, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.1941e-09, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([7.1941e-09, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.8936e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([6.8667e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.4633e-04, 9.9975e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.4633e-04, 9.9975e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0049, 0.9951], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0070, 0.9930], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0070, 0.9930], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0047, 0.9953], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0047, 0.9953], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6621)
Training Output torch.Size([2]) tensor([0.0290, 0.9710], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0290, 0.9710], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0530, 0.9470], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0530, 0.9470], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0337, 0.9663], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0337, 0.9663], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0082, 0.9918], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0082, 0.9918], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 61.905% (loss: 2.406) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0062, 0.9938], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0062, 0.9938], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0135, 0.9865], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0135, 0.9865], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0702, 0.9298], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0702, 0.9298], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9999)
Training Output torch.Size([2]) tensor([0.1130, 0.8870], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1133, 0.8867], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3569, 0.6431], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3569, 0.6431], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8755)
Training Output torch.Size([2]) tensor([0.8512, 0.1488], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8511, 0.1489], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9418, 0.0582], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9419, 0.0581], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9336, 0.0664], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9335, 0.0665], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9720, 0.0280], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9720, 0.0280], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9640, 0.0360], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9641, 0.0359], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8862, 0.1138], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8866, 0.1134], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5217, 0.4783], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5215, 0.4785], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3298, 0.6702], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3298, 0.6702], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3614, 0.6386], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3614, 0.6386], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5896, 0.4104], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5894, 0.4106], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5910, 0.4090], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5908, 0.4092], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6034)
Training Output torch.Size([2]) tensor([0.3998, 0.6002], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3998, 0.6002], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1411, 0.8589], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1411, 0.8589], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0920, 0.9080], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0917, 0.9083], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1165, 0.8835], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1165, 0.8835], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 54.878% (loss: 0.124) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0784, 0.9216], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0783, 0.9217], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0297, 0.9703], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0297, 0.9703], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0233, 0.9767], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0234, 0.9766], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0345, 0.9655], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0345, 0.9655], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0842, 0.9158], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0841, 0.9159], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.1544) tensor(1.)
Training Output torch.Size([2]) tensor([0.2690, 0.7310], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2687, 0.7313], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6830, 0.3170], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6830, 0.3170], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8467, 0.1533], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8465, 0.1535], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9577, 0.0423], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9577, 0.0423], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9755, 0.0245], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9755, 0.0245], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9704, 0.0296], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9704, 0.0296], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9369, 0.0631], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 35, Training ones: 69 / 70
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9293, 0.0707], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9293, 0.0707], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: 2.648) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9293, 0.0707], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9293, 0.0707], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9292, 0.0708], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9292, 0.0708], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9292, 0.0708], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9292, 0.0708], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9293, 0.0707], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9293, 0.0707], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9293, 0.0707], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9292, 0.0708], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9293, 0.0707], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9292, 0.0708], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9292, 0.0708], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9293, 0.0707], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9293, 0.0707], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9292, 0.0708], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9293, 0.0707], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9293, 0.0707], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9293, 0.0707], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9292, 0.0708], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9292, 0.0708], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9292, 0.0708], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9293, 0.0707], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9293, 0.0707], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[   32] train: 51.887% test: 38.462%
INFO:root:Accuracy: 0.51429, Precision: 0.62857, Recall: 0.63768, F1: 0.63309
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 33
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9293, 0.0707], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9292, 0.0708], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 1.361) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8746, 0.1254], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8748, 0.1252], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7243, 0.2757], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7240, 0.2760], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4579, 0.5421], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4580, 0.5420], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2131, 0.7869], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2128, 0.7872], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0849, 0.9151], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0852, 0.9148], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0326, 0.9674], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0326, 0.9674], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0112, 0.9888], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0111, 0.9889], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9961)
Training Output torch.Size([2]) tensor([0.0076, 0.9924], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0077, 0.9923], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7172)
Training Output torch.Size([2]) tensor([0.0115, 0.9885], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0114, 0.9886], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0102, 0.9898], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0102, 0.9898], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0212, 0.9788], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0211, 0.9789], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0198, 0.9802], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0199, 0.9801], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0076, 0.9924], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0076, 0.9924], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.7703e-04, 9.9942e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.8156e-04, 9.9942e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6661)
Training Output torch.Size([2]) tensor([9.7926e-04, 9.9902e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.7926e-04, 9.9902e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0046, 0.9954], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0046, 0.9954], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0098, 0.9902], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0098, 0.9902], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0064, 0.9936], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0064, 0.9936], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 66.667% (loss: 3.093) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7372)
Training Output torch.Size([2]) tensor([0.0071, 0.9929], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0071, 0.9929], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0513, 0.9487], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0511, 0.9489], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0867, 0.9133], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0868, 0.9132], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2947, 0.7053], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2951, 0.7049], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7815, 0.2185], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7811, 0.2189], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8407, 0.1593], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8405, 0.1595], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6164, 0.3836], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6165, 0.3835], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7433, 0.2567], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7432, 0.2568], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5833, 0.4167], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5833, 0.4167], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1171, 0.8829], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1172, 0.8828], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0941, 0.9059], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0939, 0.9061], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3472, 0.6528], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3468, 0.6532], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8709, 0.1291], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8707, 0.1293], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9147, 0.0853], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9147, 0.0853], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8168, 0.1832], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8171, 0.1829], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6212, 0.3788], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6212, 0.3788], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4392, 0.5608], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4391, 0.5609], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5522, 0.4478], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5522, 0.4478], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4607, 0.5393], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4610, 0.5390], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 52.439% (loss: 0.618) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2264, 0.7736], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2265, 0.7735], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0487, 0.9513], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0487, 0.9513], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0304, 0.9696], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0303, 0.9697], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0537, 0.9463], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0536, 0.9464], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1457, 0.8543], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1458, 0.8542], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3537, 0.6463], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3537, 0.6463], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7563, 0.2437], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7571, 0.2429], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5556, 0.4444], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5565, 0.4435], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7897, 0.2103], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7896, 0.2104], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5318, 0.4682], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5318, 0.4682], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6934)
Training Output torch.Size([2]) tensor([0.0831, 0.9169], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0831, 0.9169], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9999)
Training Output torch.Size([2]) tensor([0.0063, 0.9937], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 34, Training ones: 69 / 71
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0085, 0.9915], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0085, 0.9915], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.009) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0085, 0.9915], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0085, 0.9915], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0085, 0.9915], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0085, 0.9915], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0085, 0.9915], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0085, 0.9915], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0085, 0.9915], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0085, 0.9915], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0085, 0.9915], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0085, 0.9915], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0085, 0.9915], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0085, 0.9915], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0085, 0.9915], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0085, 0.9915], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0085, 0.9915], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0085, 0.9915], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0085, 0.9915], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0085, 0.9915], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0085, 0.9915], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0085, 0.9915], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0085, 0.9915], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0085, 0.9915], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0085, 0.9915], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0085, 0.9915], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[   33] train: 50.000% test: 61.538%
INFO:root:Accuracy: 0.50476, Precision: 0.61972, Recall: 0.63768, F1: 0.62857
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.761904776096344
INFO:root:Epoch 34
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0085, 0.9915], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0085, 0.9915], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 2.385) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3554, 0.6446], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3556, 0.6444], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1412, 0.8588], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1409, 0.8591], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9153e-05, 9.9990e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9153e-05, 9.9990e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.6825e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.6825e-06, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.4005e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([6.4256e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.1253e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([7.1532e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.5502e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.5502e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.2952e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.3081e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.6981e-05, 9.9996e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.6909e-05, 9.9996e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6902)
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0137, 0.9863], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0137, 0.9863], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7569)
Training Output torch.Size([2]) tensor([0.0283, 0.9717], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0284, 0.9716], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9166)
Training Output torch.Size([2]) tensor([0.0162, 0.9838], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0162, 0.9838], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0292, 0.9708], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0293, 0.9707], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1325, 0.8675], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1323, 0.8677], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6540, 0.3460], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6553, 0.3447], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8554, 0.1446], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8559, 0.1441], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8431, 0.1569], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8431, 0.1569], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6361, 0.3639], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6357, 0.3643], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 61.905% (loss: 0.731) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2095, 0.7905], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2095, 0.7905], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1149, 0.8851], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1151, 0.8849], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1410, 0.8590], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1410, 0.8590], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0817, 0.9183], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0818, 0.9182], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1040, 0.8960], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1039, 0.8961], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2397, 0.7603], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2397, 0.7603], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6118, 0.3882], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6123, 0.3877], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7506, 0.2494], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7509, 0.2491], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9158, 0.0842], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9154, 0.0846], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9395, 0.0605], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9398, 0.0602], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9083, 0.0917], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9087, 0.0913], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9238)
Training Output torch.Size([2]) tensor([0.7798, 0.2202], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7803, 0.2197], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7334, 0.2666], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7335, 0.2665], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5617, 0.4383], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5624, 0.4376], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2983, 0.7017], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2983, 0.7017], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1017, 0.8983], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1017, 0.8983], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0252, 0.9748], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0252, 0.9748], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0142) tensor(1.)
Training Output torch.Size([2]) tensor([0.0049, 0.9951], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0049, 0.9951], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 59.756% (loss: 0.002) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0020, 0.9980], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0020, 0.9980], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0186, 0.9814], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0185, 0.9815], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1807, 0.8193], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1803, 0.8197], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8775, 0.1225], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8773, 0.1227], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9770, 0.0230], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9769, 0.0231], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9745, 0.0255], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9746, 0.0254], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9915, 0.0085], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9915, 0.0085], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9862, 0.0138], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9863, 0.0137], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9369, 0.0631], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9371, 0.0629], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6744, 0.3256], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 37, Training ones: 69 / 68
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4955, 0.5045], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4952, 0.5048], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.684) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4952, 0.5048], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4955, 0.5045], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4954, 0.5046], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4955, 0.5045], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4952, 0.5048], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4954, 0.5046], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4954, 0.5046], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4955, 0.5045], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4954, 0.5046], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4954, 0.5046], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4955, 0.5045], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4952, 0.5048], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4954, 0.5046], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4952, 0.5048], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4954, 0.5046], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4954, 0.5046], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4954, 0.5046], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4955, 0.5045], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4955, 0.5045], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4954, 0.5046], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4952, 0.5048], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4954, 0.5046], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4954, 0.5046], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4952, 0.5048], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[   34] train: 55.660% test: 61.538%
INFO:root:Accuracy: 0.55238, Precision: 0.66176, Recall: 0.65217, F1: 0.65693
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.761904776096344
INFO:root:Epoch 35
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4951, 0.5049], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4949, 0.5051], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 0.694) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4241, 0.5759], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4243, 0.5757], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2809, 0.7191], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2807, 0.7193], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1455, 0.8545], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1454, 0.8546], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0592, 0.9408], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0592, 0.9408], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0167, 0.9833], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0167, 0.9833], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0023, 0.9977], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0023, 0.9977], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.2125e-04, 9.9978e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.2125e-04, 9.9978e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9930e-05, 9.9990e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9930e-05, 9.9990e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.5664e-04, 9.9974e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.5815e-04, 9.9974e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.2389e-04, 9.9938e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.2025e-04, 9.9938e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0051, 0.9949], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0051, 0.9949], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0151, 0.9849], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0151, 0.9849], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0132, 0.9868], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0132, 0.9868], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0046, 0.9954], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0046, 0.9954], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0044, 0.9956], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0044, 0.9956], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0099, 0.9901], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0099, 0.9901], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9598)
Training Output torch.Size([2]) tensor([0.0418, 0.9582], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0417, 0.9583], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2706) tensor(1.)
Training Output torch.Size([2]) tensor([0.0686, 0.9314], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0686, 0.9314], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7410)
Training Output torch.Size([2]) tensor([0.0517, 0.9483], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0517, 0.9483], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0204, 0.9796], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0204, 0.9796], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 76.190% (loss: 1.956) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0165, 0.9835], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0165, 0.9835], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.0431) tensor(1.)
Training Output torch.Size([2]) tensor([0.0245, 0.9755], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0246, 0.9754], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.2706) tensor(1.)
Training Output torch.Size([2]) tensor([0.0619, 0.9381], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0618, 0.9382], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6701)
Training Output torch.Size([2]) tensor([0.0786, 0.9214], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0785, 0.9215], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1643, 0.8357], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1644, 0.8356], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4441, 0.5559], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4443, 0.5557], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.0130) tensor(1.)
Training Output torch.Size([2]) tensor([0.8575, 0.1425], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8574, 0.1426], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9459, 0.0541], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9458, 0.0542], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9907, 0.0093], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9907, 0.0093], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9953, 0.0047], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9953, 0.0047], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.3020) tensor(1.)
Training Output torch.Size([2]) tensor([0.9928, 0.0072], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9929, 0.0071], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9768, 0.0232], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9768, 0.0232], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9699, 0.0301], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9699, 0.0301], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9291, 0.0709], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9291, 0.0709], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7881, 0.2119], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7880, 0.2120], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4824, 0.5176], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4826, 0.5174], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2003, 0.7997], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2005, 0.7995], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0702, 0.9298], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0703, 0.9297], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0424, 0.9576], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0424, 0.9576], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0421, 0.9579], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0420, 0.9580], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 64.634% (loss: 0.043) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0323, 0.9677], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0323, 0.9677], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0174, 0.9826], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0174, 0.9826], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0169, 0.9831], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0169, 0.9831], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0296, 0.9704], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0296, 0.9704], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0941, 0.9059], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0945, 0.9055], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4810, 0.5190], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4824, 0.5176], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9721, 0.0279], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9720, 0.0280], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.5894e-04, 9.9934e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.6023e-04, 9.9934e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0097, 0.9903], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0096, 0.9904], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.0611e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.0611e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.0617e-09, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([5.1014e-09, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0118) tensor(0.1804)
Training Output torch.Size([2]) tensor([2.1177e-11, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 20, Training ones: 69 / 85
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([5.8717e-09, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([5.8717e-09, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.000) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([5.8717e-09, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([5.8717e-09, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([5.8717e-09, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([5.8717e-09, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([5.8717e-09, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([5.8488e-09, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([5.8717e-09, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([5.8717e-09, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([5.8947e-09, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([5.8717e-09, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([5.8488e-09, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([5.8717e-09, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([5.8717e-09, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([5.8488e-09, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([5.8717e-09, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([5.8947e-09, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([5.8717e-09, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([5.8717e-09, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([5.8717e-09, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([5.8717e-09, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([5.8717e-09, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([5.8717e-09, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([5.8717e-09, 1.0000e+00], device='cuda:0')
Validation Output torch.Size([2]) tensor([5.8717e-09, 1.0000e+00], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[   35] train: 61.321% test: 61.538%
INFO:root:Accuracy: 0.61905, Precision: 0.67059, Recall: 0.82609, F1: 0.74026
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.761904776096344
INFO:root:Epoch 36
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.8717e-09, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([5.8717e-09, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 9.477) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.7545e-04, 9.9902e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.7259e-04, 9.9903e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1674, 0.8326], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1674, 0.8326], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.3725)
Training Output torch.Size([2]) tensor([0.0777, 0.9223], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0777, 0.9223], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7135)
Training Output torch.Size([2]) tensor([4.3905e-04, 9.9956e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.3905e-04, 9.9956e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.6929e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.6863e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.2142e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.2334e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.5770e-10, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.6019e-10, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.0940) tensor(1.)
Training Output torch.Size([2]) tensor([3.2174e-09, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.2174e-09, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.9397e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.9747e-06, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4384, 0.5616], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4381, 0.5619], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7872, 0.2128], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7874, 0.2126], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7047, 0.2953], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7048, 0.2952], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9960)
Training Output torch.Size([2]) tensor([0.3785, 0.6215], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3783, 0.6217], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3656, 0.6344], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3656, 0.6344], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9961)
Training Output torch.Size([2]) tensor([0.5515, 0.4485], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5516, 0.4484], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5484, 0.4516], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5481, 0.4519], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3921, 0.6079], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3923, 0.6077], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7685)
Training Output torch.Size([2]) tensor([0.1497, 0.8503], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1497, 0.8503], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.0000)
Training Output torch.Size([2]) tensor([0.0186, 0.9814], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0185, 0.9815], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 61.905% (loss: 2.003) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0065, 0.9935], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0065, 0.9935], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0089, 0.9911], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0089, 0.9911], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0323, 0.9677], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0323, 0.9677], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0379, 0.9621], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0378, 0.9622], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.0864, 0.9136], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0863, 0.9137], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2399, 0.7601], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2397, 0.7603], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5188, 0.4812], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5188, 0.4812], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6466, 0.3534], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6466, 0.3534], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7727, 0.2273], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7729, 0.2271], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8043, 0.1957], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8040, 0.1960], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7781, 0.2219], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7778, 0.2222], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6920, 0.3080], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6920, 0.3080], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6614, 0.3386], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6617, 0.3383], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5643, 0.4357], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5649, 0.4351], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3980, 0.6020], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3981, 0.6019], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2051, 0.7949], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2049, 0.7951], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0698, 0.9302], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0699, 0.9301], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.0146, 0.9854], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0146, 0.9854], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0048, 0.9952], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0048, 0.9952], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 59.756% (loss: 0.005) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0031, 0.9969], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0031, 0.9969], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0144, 0.9856], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0144, 0.9856], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9897)
Training Output torch.Size([2]) tensor([0.0930, 0.9070], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0931, 0.9069], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5111, 0.4889], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5112, 0.4888], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6803, 0.3197], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6809, 0.3191], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8897, 0.1103], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8897, 0.1103], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8787, 0.1213], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8789, 0.1211], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7281, 0.2719], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7284, 0.2716], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4742, 0.5258], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 34, Training ones: 69 / 71
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3983, 0.6017], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3983, 0.6017], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.508) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3984, 0.6016], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3983, 0.6017], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3983, 0.6017], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3983, 0.6017], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3983, 0.6017], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3983, 0.6017], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3982, 0.6018], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3983, 0.6017], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3983, 0.6017], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3985, 0.6015], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3983, 0.6017], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3982, 0.6018], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3983, 0.6017], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3983, 0.6017], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3983, 0.6017], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3982, 0.6018], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3983, 0.6017], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3984, 0.6016], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3983, 0.6017], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3983, 0.6017], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3983, 0.6017], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3983, 0.6017], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3983, 0.6017], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3983, 0.6017], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[   36] train: 53.774% test: 61.538%
INFO:root:Accuracy: 0.54286, Precision: 0.64789, Recall: 0.66667, F1: 0.65714
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.761904776096344
INFO:root:Epoch 37
Training min-max: tensor(0.) tensor(0.7371)
Training Output torch.Size([2]) tensor([0.3983, 0.6017], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3983, 0.6017], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 0.714) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4400, 0.5600], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4400, 0.5600], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4364, 0.5636], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4364, 0.5636], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3649, 0.6351], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3650, 0.6350], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2197, 0.7803], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2195, 0.7805], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0647, 0.9353], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0645, 0.9355], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0042, 0.9958], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0042, 0.9958], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.7669e-05, 9.9995e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.7950e-05, 9.9995e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.7745e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.7086e-06, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.2873e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.2873e-05, 9.9998e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.6025e-05, 9.9992e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.5876e-05, 9.9992e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0025, 0.9975], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0025, 0.9975], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0191, 0.9809], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0190, 0.9810], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0084, 0.9916], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0084, 0.9916], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.6261e-04, 9.9914e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.6345e-04, 9.9914e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.9432e-04, 9.9911e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.8823e-04, 9.9911e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0045, 0.9955], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0045, 0.9955], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8729)
Training Output torch.Size([2]) tensor([0.0441, 0.9559], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0441, 0.9559], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7293)
Training Output torch.Size([2]) tensor([0.0791, 0.9209], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0789, 0.9211], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0529, 0.9471], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0530, 0.9470], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0173, 0.9827], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0174, 0.9826], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 76.190% (loss: 2.036) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.7442)
Training Output torch.Size([2]) tensor([0.0136, 0.9864], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0136, 0.9864], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0222, 0.9778], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0222, 0.9778], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8682)
Training Output torch.Size([2]) tensor([0.0545, 0.9455], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0545, 0.9455], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0714, 0.9286], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0715, 0.9285], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1222, 0.8778], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1218, 0.8782], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2346, 0.7654], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2346, 0.7654], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4390, 0.5610], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4383, 0.5617], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5455, 0.4545], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5458, 0.4542], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7017, 0.2983], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7011, 0.2989], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7353, 0.2647], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7351, 0.2649], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6792, 0.3208], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6794, 0.3206], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5530, 0.4470], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5525, 0.4475], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5151, 0.4849], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5151, 0.4849], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4282, 0.5718], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4280, 0.5720], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4180, 0.5820], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4180, 0.5820], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3564, 0.6436], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3562, 0.6438], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2546, 0.7454], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2546, 0.7454], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1352, 0.8648], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1357, 0.8643], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1050, 0.8950], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1058, 0.8942], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1261, 0.8739], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1259, 0.8741], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 69.512% (loss: 0.135) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1088, 0.8912], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1090, 0.8910], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0669, 0.9331], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0669, 0.9331], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0667, 0.9333], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0668, 0.9332], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1013, 0.8987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1013, 0.8987], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1741, 0.8259], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1739, 0.8261], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2646, 0.7354], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2646, 0.7354], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3484, 0.6516], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3481, 0.6519], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3335, 0.6665], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3330, 0.6670], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3684, 0.6316], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3682, 0.6318], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3255, 0.6745], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3248, 0.6752], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2146, 0.7854], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2150, 0.7850], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0746, 0.9254], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 12, Training ones: 69 / 93
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0549, 0.9451], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0549, 0.9451], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.056) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0549, 0.9451], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0549, 0.9451], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0549, 0.9451], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0549, 0.9451], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0549, 0.9451], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0549, 0.9451], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0549, 0.9451], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0549, 0.9451], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0549, 0.9451], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0549, 0.9451], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0548, 0.9452], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0549, 0.9451], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0549, 0.9451], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0549, 0.9451], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0549, 0.9451], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0549, 0.9451], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0549, 0.9451], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0548, 0.9452], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0549, 0.9451], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0549, 0.9451], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0549, 0.9451], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0549, 0.9451], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0549, 0.9451], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0548, 0.9452], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[   37] train: 66.981% test: 61.538%
INFO:root:Accuracy: 0.67619, Precision: 0.68817, Recall: 0.92754, F1: 0.79012
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.761904776096344
INFO:root:Epoch 38
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0549, 0.9451], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0549, 0.9451], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 1.479) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1076, 0.8924], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1074, 0.8926], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0761, 0.9239], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0761, 0.9239], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0204, 0.9796], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0204, 0.9796], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2745) tensor(1.)
Training Output torch.Size([2]) tensor([1.0150e-04, 9.9990e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0131e-04, 9.9990e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.5660e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.5838e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.8266e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.8195e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.5559e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.5760e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.3536e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.4113e-06, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9647)
Training Output torch.Size([2]) tensor([7.6921e-05, 9.9992e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.7524e-05, 9.9992e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0094, 0.9906], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0094, 0.9906], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0123, 0.9877], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0123, 0.9877], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0062, 0.9938], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0062, 0.9938], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.3098) tensor(1.)
Training Output torch.Size([2]) tensor([0.0072, 0.9928], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0072, 0.9928], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0165, 0.9835], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0165, 0.9835], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0537, 0.9463], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0535, 0.9465], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0790, 0.9210], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0788, 0.9212], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0692, 0.9308], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0690, 0.9310], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0397, 0.9603], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0398, 0.9602], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 76.190% (loss: 1.634) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0366, 0.9634], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0365, 0.9635], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0512, 0.9488], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0511, 0.9489], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0972, 0.9028], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0972, 0.9028], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1200, 0.8800], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1203, 0.8797], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1898, 0.8102], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1900, 0.8100], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3406, 0.6594], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3407, 0.6593], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5863, 0.4137], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5864, 0.4136], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7092, 0.2908], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7089, 0.2911], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8459, 0.1541], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8457, 0.1543], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8848, 0.1152], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8849, 0.1151], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8736, 0.1264], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8736, 0.1264], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.8151, 0.1849], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8152, 0.1848], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8044, 0.1956], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8043, 0.1957], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7402, 0.2598], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7399, 0.2601], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.0000)
Training Output torch.Size([2]) tensor([0.6169, 0.3831], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6172, 0.3828], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4508, 0.5492], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4511, 0.5489], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2916, 0.7084], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2914, 0.7086], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1745, 0.8255], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1746, 0.8254], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1365, 0.8635], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1366, 0.8634], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1405, 0.8595], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1406, 0.8594], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 64.634% (loss: 0.151) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1302, 0.8698], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1303, 0.8697], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1024, 0.8976], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1025, 0.8975], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.1067, 0.8933], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1067, 0.8933], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1487, 0.8513], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1490, 0.8510], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2707, 0.7293], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2700, 0.7300], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7137)
Training Output torch.Size([2]) tensor([0.5648, 0.4352], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5648, 0.4352], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6830, 0.3170], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6838, 0.3162], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6111, 0.3889], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6111, 0.3889], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6944, 0.3056], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6952, 0.3048], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6142, 0.3858], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6149, 0.3851], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.0000)
Training Output torch.Size([2]) tensor([0.4286, 0.5714], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4286, 0.5714], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2510, 0.7490], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 28, Training ones: 69 / 77
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2082, 0.7918], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2081, 0.7919], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.233) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2080, 0.7920], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2082, 0.7918], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2082, 0.7918], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2081, 0.7919], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2080, 0.7920], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2081, 0.7919], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2081, 0.7919], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2082, 0.7918], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2082, 0.7918], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2082, 0.7918], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2081, 0.7919], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2082, 0.7918], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2082, 0.7918], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2082, 0.7918], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2080, 0.7920], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2082, 0.7918], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2081, 0.7919], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2082, 0.7918], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2082, 0.7918], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2082, 0.7918], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2082, 0.7918], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2082, 0.7918], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2080, 0.7920], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2082, 0.7918], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[   38] train: 59.434% test: 61.538%
INFO:root:Accuracy: 0.60000, Precision: 0.67532, Recall: 0.75362, F1: 0.71233
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.761904776096344
INFO:root:Epoch 39
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2082, 0.7918], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2082, 0.7918], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 0.901) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2222, 0.7778], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2221, 0.7779], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2071, 0.7929], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2070, 0.7930], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1719, 0.8281], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1718, 0.8282], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1271, 0.8729], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1271, 0.8729], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0827, 0.9173], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0827, 0.9173], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2275) tensor(1.)
Training Output torch.Size([2]) tensor([0.0462, 0.9538], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0463, 0.9537], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0210, 0.9790], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0210, 0.9790], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0128, 0.9872], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0128, 0.9872], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0114, 0.9886], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0113, 0.9887], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0034) tensor(1.)
Training Output torch.Size([2]) tensor([0.0076, 0.9924], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0076, 0.9924], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0077, 0.9923], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0077, 0.9923], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9133)
Training Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0045, 0.9955], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0045, 0.9955], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0071, 0.9929], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0071, 0.9929], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0071, 0.9929], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0071, 0.9929], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0049, 0.9951], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0049, 0.9951], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 76.190% (loss: 2.665) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0054, 0.9946], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0054, 0.9946], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0088, 0.9912], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0088, 0.9912], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0202, 0.9798], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0202, 0.9798], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0270, 0.9730], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0270, 0.9730], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0525, 0.9475], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0526, 0.9474], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1468, 0.8532], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1469, 0.8531], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5089, 0.4911], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5084, 0.4916], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6701, 0.3299], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6709, 0.3291], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9237, 0.0763], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9233, 0.0767], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8275)
Training Output torch.Size([2]) tensor([0.9326, 0.0674], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9331, 0.0669], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7955, 0.2045], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7956, 0.2044], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4135, 0.5865], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4140, 0.5860], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3331, 0.6669], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3335, 0.6665], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3860, 0.6140], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3860, 0.6140], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5377, 0.4623], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5378, 0.4622], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5607, 0.4393], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5606, 0.4394], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4819, 0.5181], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4817, 0.5183], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3595, 0.6405], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3594, 0.6406], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3386, 0.6614], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3386, 0.6614], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3798, 0.6202], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3800, 0.6200], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 59.756% (loss: 0.478) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.9993)
Training Output torch.Size([2]) tensor([0.3693, 0.6307], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3690, 0.6310], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3192, 0.6808], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3190, 0.6810], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3190, 0.6810], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3188, 0.6812], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6118)
Training Output torch.Size([2]) tensor([0.3569, 0.6431], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3567, 0.6433], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4301, 0.5699], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4300, 0.5700], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5439, 0.4561], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5437, 0.4563], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5849, 0.4151], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5860, 0.4140], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5589, 0.4411], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5588, 0.4412], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5928, 0.4072], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5932, 0.4068], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5654, 0.4346], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5653, 0.4347], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4944, 0.5056], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4945, 0.5055], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0641) tensor(0.5719)
Training Output torch.Size([2]) tensor([0.4027, 0.5973], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 24, Training ones: 69 / 81
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3885, 0.6115], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3885, 0.6115], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.492) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3885, 0.6115], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3884, 0.6116], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3885, 0.6115], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3884, 0.6116], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3885, 0.6115], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3885, 0.6115], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3885, 0.6115], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3885, 0.6115], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3885, 0.6115], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3886, 0.6114], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3885, 0.6115], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3884, 0.6116], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3884, 0.6116], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3885, 0.6115], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3884, 0.6116], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3885, 0.6115], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3884, 0.6116], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3885, 0.6115], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3885, 0.6115], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3885, 0.6115], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3884, 0.6116], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3884, 0.6116], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3885, 0.6115], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3884, 0.6116], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[   39] train: 55.660% test: 61.538%
INFO:root:Accuracy: 0.56190, Precision: 0.64198, Recall: 0.75362, F1: 0.69333
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.761904776096344
INFO:root:Epoch 40
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3884, 0.6116], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3885, 0.6115], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 0.719) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4129, 0.5871], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4129, 0.5871], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7437)
Training Output torch.Size([2]) tensor([0.3955, 0.6045], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3955, 0.6045], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3390, 0.6610], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3388, 0.6612], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2537, 0.7463], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2537, 0.7463], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1558, 0.8442], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1558, 0.8442], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0694, 0.9306], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0694, 0.9306], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0187, 0.9813], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0188, 0.9812], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0080, 0.9920], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0080, 0.9920], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0074, 0.9926], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0074, 0.9926], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0045, 0.9955], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0045, 0.9955], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0073, 0.9927], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0073, 0.9927], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0054, 0.9946], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0055, 0.9945], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8268)
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.9868e-04, 9.9930e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.0141e-04, 9.9930e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.8651e-04, 9.9931e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.8785e-04, 9.9931e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0105, 0.9895], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0105, 0.9895], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0167, 0.9833], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0166, 0.9834], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0100, 0.9900], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0101, 0.9899], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0035, 0.9965], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0035, 0.9965], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 76.190% (loss: 2.830) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.0030, 0.9970], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0030, 0.9970], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.0000)
Training Output torch.Size([2]) tensor([0.0135, 0.9865], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0135, 0.9865], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0195, 0.9805], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0195, 0.9805], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0419, 0.9581], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0418, 0.9582], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1131, 0.8869], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1134, 0.8866], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3176, 0.6824], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3178, 0.6822], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4720, 0.5280], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4717, 0.5283], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7004, 0.2996], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6998, 0.3002], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7661, 0.2339], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7654, 0.2346], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7249, 0.2751], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7241, 0.2759], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5864, 0.4136], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5866, 0.4134], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5524, 0.4476], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5524, 0.4476], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4399, 0.5601], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4405, 0.5595], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4251, 0.5749], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4248, 0.5752], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3464, 0.6536], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3463, 0.6537], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2365, 0.7635], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2364, 0.7636], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1349, 0.8651], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1349, 0.8651], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1020, 0.8980], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1019, 0.8981], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1011, 0.8989], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1011, 0.8989], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 67.073% (loss: 0.107) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0813, 0.9187], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0813, 0.9187], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0531, 0.9469], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0531, 0.9469], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0468, 0.9532], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0468, 0.9532], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0541, 0.9459], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0541, 0.9459], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0767, 0.9233], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0766, 0.9234], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1227, 0.8773], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1227, 0.8773], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2038, 0.7962], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2040, 0.7960], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2555, 0.7445], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2555, 0.7445], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.3388, 0.6612], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3387, 0.6613], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3706, 0.6294], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3708, 0.6292], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3557, 0.6443], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3557, 0.6443], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3136, 0.6864], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 10, Training ones: 69 / 95
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3087, 0.6913], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3087, 0.6913], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.369) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3087, 0.6913], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3087, 0.6913], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3088, 0.6912], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3087, 0.6913], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3087, 0.6913], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3087, 0.6913], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3088, 0.6912], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3087, 0.6913], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3088, 0.6912], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3089, 0.6911], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3087, 0.6913], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3087, 0.6913], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3087, 0.6913], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3087, 0.6913], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3086, 0.6914], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3087, 0.6913], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3087, 0.6913], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3087, 0.6913], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3087, 0.6913], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3087, 0.6913], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3088, 0.6912], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3087, 0.6913], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3087, 0.6913], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3087, 0.6913], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[   40] train: 65.094% test: 61.538%
INFO:root:Accuracy: 0.65714, Precision: 0.67368, Recall: 0.92754, F1: 0.78049
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.761904776096344
INFO:root:Epoch 41
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3085, 0.6915], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3087, 0.6913], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 0.772) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3307, 0.6693], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3307, 0.6693], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3243, 0.6757], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3243, 0.6757], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2950, 0.7050], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2953, 0.7047], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2504, 0.7496], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2507, 0.7493], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1964, 0.8036], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1966, 0.8034], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1361, 0.8639], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1361, 0.8639], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0753, 0.9247], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0752, 0.9248], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0552, 0.9448], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0550, 0.9450], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0588, 0.9412], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0588, 0.9412], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0472, 0.9528], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0471, 0.9529], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0546, 0.9454], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0545, 0.9455], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0456, 0.9544], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0455, 0.9545], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0265, 0.9735], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0265, 0.9735], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0096, 0.9904], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0095, 0.9905], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0060, 0.9940], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0061, 0.9939], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0072, 0.9928], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0072, 0.9928], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0137, 0.9863], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0137, 0.9863], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.0000)
Training Output torch.Size([2]) tensor([0.0149, 0.9851], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0149, 0.9851], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0106, 0.9894], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0106, 0.9894], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 76.190% (loss: 2.649) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0041, 0.9959], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0041, 0.9959], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0056, 0.9944], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0055, 0.9945], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5608)
Training Output torch.Size([2]) tensor([0.0108, 0.9892], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0109, 0.9891], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0132, 0.9868], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0132, 0.9868], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0217, 0.9783], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0216, 0.9784], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0427, 0.9573], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0426, 0.9574], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0883, 0.9117], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0883, 0.9117], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1177, 0.8823], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1179, 0.8821], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1861, 0.8139], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1856, 0.8144], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3448, 0.6552], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3455, 0.6545], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4018, 0.5982], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4025, 0.5975], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5651, 0.4349], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5645, 0.4355], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.7998, 0.2002], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7996, 0.2004], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2122, 0.7878], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2187, 0.7813], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7306, 0.2694], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7298, 0.2702], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3750, 0.6250], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3793, 0.6207], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9997)
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.0000)
Training Output torch.Size([2]) tensor([3.0352e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.0471e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.1565e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1520e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.1688e-05, 9.9994e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.0200e-05, 9.9994e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 67.073% (loss: 0.000) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0095, 0.9905], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0093, 0.9907], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1624, 0.8376], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1624, 0.8376], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9990, 0.0011], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9990, 0.0010], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9969e-01, 3.1435e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9970e-01, 2.9828e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9867, 0.0133], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9865, 0.0135], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4969, 0.5031], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4969, 0.5031], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1757, 0.8243], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1763, 0.8237], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5796, 0.4204], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5796, 0.4204], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7001, 0.2999], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7000, 0.3000], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6308)
Training Output torch.Size([2]) tensor([0.5615, 0.4385], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5610, 0.4390], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1756, 0.8244], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 18, Training ones: 69 / 87
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1305, 0.8695], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1305, 0.8695], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.140) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1305, 0.8695], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1303, 0.8697], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1306, 0.8694], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1305, 0.8695], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1302, 0.8698], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1303, 0.8697], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1305, 0.8695], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1306, 0.8694], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1305, 0.8695], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1304, 0.8696], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1305, 0.8695], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1306, 0.8694], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1305, 0.8695], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1303, 0.8697], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1305, 0.8695], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1303, 0.8697], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1305, 0.8695], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1304, 0.8696], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1303, 0.8697], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1305, 0.8695], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1305, 0.8695], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1305, 0.8695], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1304, 0.8696], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1305, 0.8695], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[   41] train: 59.434% test: 61.538%
INFO:root:Accuracy: 0.60000, Precision: 0.65517, Recall: 0.82609, F1: 0.73077
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.761904776096344
INFO:root:Epoch 42
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1303, 0.8697], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1298, 0.8702], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 1.090) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3030, 0.6970], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3026, 0.6974], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2480, 0.7520], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2484, 0.7516], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0657, 0.9343], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0659, 0.9341], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0025, 0.9975], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.4682e-05, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.4653e-05, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.6365e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.6547e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0262e-10, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0262e-10, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.0501e-11, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.0501e-11, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.9137e-09, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.9137e-09, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.0917e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.0758e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.9922e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.9747e-06, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.3535e-04, 9.9966e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.2951e-04, 9.9967e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0706) tensor(1.)
Training Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0072, 0.9928], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0072, 0.9928], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0316, 0.9684], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0315, 0.9685], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1573, 0.8427], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1577, 0.8423], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5581, 0.4419], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5578, 0.4422], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6388, 0.3612], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6391, 0.3609], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4551, 0.5449], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4546, 0.5454], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2914, 0.7086], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2912, 0.7088], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 66.667% (loss: 0.789) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3468, 0.6532], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3468, 0.6532], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4894, 0.5106], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4891, 0.5109], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6715, 0.3285], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6710, 0.3290], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7232, 0.2768], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7224, 0.2776], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8126, 0.1874], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8128, 0.1872], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.0353) tensor(1.)
Training Output torch.Size([2]) tensor([0.9087, 0.0913], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9090, 0.0910], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8137)
Training Output torch.Size([2]) tensor([0.9274, 0.0726], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9271, 0.0729], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8983, 0.1017], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8992, 0.1008], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9102, 0.0898], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9107, 0.0893], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8671, 0.1329], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8672, 0.1328], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7113, 0.2887], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7106, 0.2894], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3805, 0.6195], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3823, 0.6177], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3318, 0.6682], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3321, 0.6679], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4666, 0.5334], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4666, 0.5334], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6907, 0.3093], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6907, 0.3093], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6956, 0.3044], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6955, 0.3045], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5742, 0.4258], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5739, 0.4261], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4144, 0.5856], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4143, 0.5857], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3767, 0.6233], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3766, 0.6234], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4102, 0.5898], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4105, 0.5895], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 54.878% (loss: 0.528) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3974, 0.6026], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3974, 0.6026], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0353) tensor(0.8196)
Training Output torch.Size([2]) tensor([0.3464, 0.6536], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3467, 0.6533], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3456, 0.6544], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3457, 0.6543], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3894, 0.6106], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3895, 0.6105], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4637, 0.5363], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4637, 0.5363], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5528, 0.4472], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5529, 0.4471], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5886, 0.4114], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5884, 0.4116], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5820, 0.4180], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5821, 0.4179], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6009, 0.3991], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6010, 0.3990], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9529)
Training Output torch.Size([2]) tensor([0.5831, 0.4169], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5827, 0.4173], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5321, 0.4679], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5322, 0.4678], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4545, 0.5455], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 40, Training ones: 69 / 65
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4191, 0.5809], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4192, 0.5808], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.543) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4191, 0.5809], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4191, 0.5809], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4191, 0.5809], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4192, 0.5808], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4191, 0.5809], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4191, 0.5809], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4192, 0.5808], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4191, 0.5809], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4191, 0.5809], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4191, 0.5809], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4192, 0.5808], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4192, 0.5808], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4192, 0.5808], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4191, 0.5809], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4191, 0.5809], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4191, 0.5809], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4191, 0.5809], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4191, 0.5809], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4192, 0.5808], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4191, 0.5809], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4191, 0.5809], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4191, 0.5809], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4191, 0.5809], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4191, 0.5809], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[   42] train: 50.000% test: 61.538%
INFO:root:Accuracy: 0.50476, Precision: 0.63077, Recall: 0.59420, F1: 0.61194
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.761904776096344
INFO:root:Epoch 43
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4192, 0.5808], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4191, 0.5809], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 0.707) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4217, 0.5783], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4217, 0.5783], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3957, 0.6043], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3957, 0.6043], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3413, 0.6587], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3415, 0.6585], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2566, 0.7434], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2564, 0.7436], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1482, 0.8518], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1480, 0.8520], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0519, 0.9481], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0520, 0.9480], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0079, 0.9921], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0079, 0.9921], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9865)
Training Output torch.Size([2]) tensor([0.0020, 0.9980], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0020, 0.9980], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.1064) tensor(1.)
Training Output torch.Size([2]) tensor([0.0036, 0.9964], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0036, 0.9964], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0058, 0.9942], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0054, 0.9946], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0054, 0.9946], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0031, 0.9969], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0031, 0.9969], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0061, 0.9939], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0061, 0.9939], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.2539) tensor(1.)
Training Output torch.Size([2]) tensor([0.0350, 0.9650], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0350, 0.9650], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3717, 0.6283], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3728, 0.6272], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2768, 0.7232], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2739, 0.7261], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.5354e-05, 9.9995e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.6406e-05, 9.9995e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.1805e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.3042e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 76.190% (loss: 8.820) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.4009e-05, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3578e-05, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9926, 0.0074], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9919, 0.0081], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9990e-01, 9.7998e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9990e-01, 9.7998e-05], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([0.9099, 0.0901], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9164, 0.0836], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9815, 0.0185], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9830, 0.0170], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9999e-01, 6.4516e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 6.8409e-06], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9996e-01, 4.1741e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9996e-01, 4.1416e-05], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7225, 0.2775], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7241, 0.2759], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7670, 0.2330], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7645, 0.2355], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1618, 0.8382], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1613, 0.8387], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0192, 0.9808], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0192, 0.9808], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6527, 0.3473], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6536, 0.3464], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9052, 0.0948], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9052, 0.0948], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8099, 0.1901], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8096, 0.1904], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([0.2261, 0.7739], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2258, 0.7742], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 64.634% (loss: 0.002) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.1194e-04, 9.9909e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.1105e-04, 9.9909e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.5837e-04, 9.9964e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.5837e-04, 9.9964e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.0898e-04, 9.9929e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.0760e-04, 9.9929e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0046, 0.9954], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0046, 0.9954], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0568, 0.9432], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0568, 0.9432], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5173, 0.4827], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5185, 0.4815], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8109, 0.1891], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8111, 0.1889], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8463, 0.1537], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8466, 0.1534], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9298, 0.0702], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9299, 0.0701], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9259, 0.0741], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9257, 0.0743], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8487, 0.1513], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8483, 0.1517], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5962, 0.4038], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 35, Training ones: 69 / 70
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4596, 0.5404], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4591, 0.5409], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.615) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4586, 0.5414], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4596, 0.5404], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4596, 0.5404], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4596, 0.5404], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4591, 0.5409], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4596, 0.5404], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4591, 0.5409], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4591, 0.5409], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4596, 0.5404], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4596, 0.5404], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4596, 0.5404], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4596, 0.5404], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4596, 0.5404], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4591, 0.5409], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4591, 0.5409], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4596, 0.5404], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4591, 0.5409], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4596, 0.5404], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4591, 0.5409], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4596, 0.5404], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4596, 0.5404], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4596, 0.5404], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4591, 0.5409], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4591, 0.5409], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[   43] train: 59.434% test: 61.538%
INFO:root:Accuracy: 0.59048, Precision: 0.68571, Recall: 0.69565, F1: 0.69065
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.761904776096344
INFO:root:Epoch 44
Training min-max: tensor(0.) tensor(0.9993)
Training Output torch.Size([2]) tensor([0.4591, 0.5409], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4591, 0.5409], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 0.696) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4766, 0.5234], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4776, 0.5224], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3598, 0.6402], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3603, 0.6397], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1775, 0.8225], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1775, 0.8225], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0520, 0.9480], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0522, 0.9478], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0094, 0.9906], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0094, 0.9906], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0658e-04, 9.9989e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0721e-04, 9.9989e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.0959e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.0658e-05, 9.9997e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.6429e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.6172e-05, 9.9997e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.3877e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.3784e-05, 9.9998e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.5514e-05, 9.9994e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.5189e-05, 9.9994e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.1390e-04, 9.9989e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1390e-04, 9.9989e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.1402e-04, 9.9979e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.1402e-04, 9.9979e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.6401e-04, 9.9964e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.6330e-04, 9.9964e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0065, 0.9935], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0065, 0.9935], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0401, 0.9599], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0402, 0.9598], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0950, 0.9050], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0953, 0.9047], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1217, 0.8783], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1213, 0.8787], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1046, 0.8954], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1047, 0.8953], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 76.190% (loss: 1.184) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.1240, 0.8760], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1243, 0.8757], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1803, 0.8197], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1799, 0.8201], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8028)
Training Output torch.Size([2]) tensor([0.2901, 0.7099], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2902, 0.7098], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3318, 0.6682], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3317, 0.6683], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.4314, 0.5686], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4312, 0.5688], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6050, 0.3950], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6052, 0.3948], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6439, 0.3561], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6439, 0.3561], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4196)
Training Output torch.Size([2]) tensor([0.5626, 0.4374], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5626, 0.4374], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.2510)
Training Output torch.Size([2]) tensor([0.5831, 0.4169], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5832, 0.4168], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7031)
Training Output torch.Size([2]) tensor([0.5070, 0.4930], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5070, 0.4930], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3958, 0.6042], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3959, 0.6041], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3870, 0.6130], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3873, 0.6127], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5177, 0.4823], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5178, 0.4822], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4311, 0.5689], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4306, 0.5694], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4824, 0.5176], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4820, 0.5180], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4408, 0.5592], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4408, 0.5592], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3920, 0.6080], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3926, 0.6074], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3332, 0.6668], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3332, 0.6668], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3259, 0.6741], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3256, 0.6744], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3509, 0.6491], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3512, 0.6488], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 64.634% (loss: 0.432) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3375, 0.6625], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3377, 0.6623], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9913)
Training Output torch.Size([2]) tensor([0.2906, 0.7094], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2904, 0.7096], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2820, 0.7180], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2824, 0.7176], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3092, 0.6908], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3095, 0.6905], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3683, 0.6317], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3677, 0.6323], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7527)
Training Output torch.Size([2]) tensor([0.4531, 0.5469], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4532, 0.5468], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5594, 0.4406], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5593, 0.4407], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6092, 0.3908], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6091, 0.3909], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6851, 0.3149], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6851, 0.3149], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7031, 0.2969], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7028, 0.2972], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6676, 0.3324], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6673, 0.3327], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5730, 0.4270], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 23, Training ones: 69 / 82
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5584, 0.4416], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5585, 0.4415], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: 0.817) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5585, 0.4415], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5584, 0.4416], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5584, 0.4416], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5584, 0.4416], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5584, 0.4416], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5584, 0.4416], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5584, 0.4416], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5584, 0.4416], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5584, 0.4416], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5584, 0.4416], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5584, 0.4416], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5584, 0.4416], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5583, 0.4417], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5584, 0.4416], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5585, 0.4415], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5584, 0.4416], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5585, 0.4415], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5584, 0.4416], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5585, 0.4415], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5584, 0.4416], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5584, 0.4416], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5583, 0.4417], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5585, 0.4415], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5584, 0.4416], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[   44] train: 59.434% test: 38.462%
INFO:root:Accuracy: 0.59048, Precision: 0.65854, Recall: 0.78261, F1: 0.71523
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 45
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5581, 0.4419], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5582, 0.4418], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 0.700) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([0.4715, 0.5285], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4714, 0.5286], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2872, 0.7128], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2867, 0.7133], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0577, 0.9423], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0577, 0.9423], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.3757)
Training Output torch.Size([2]) tensor([0.0028, 0.9972], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0028, 0.9972], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.8432e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.8279e-06, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7059)
Training Output torch.Size([2]) tensor([9.4196e-09, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([9.4935e-09, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0161e-11, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0161e-11, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([7.2636e-10, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([7.3206e-10, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0111, 0.9889], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0110, 0.9890], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0889, 0.9111], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0885, 0.9115], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8659)
Training Output torch.Size([2]) tensor([1.0000e+00, 3.3145e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 3.3667e-06], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9999e-01, 6.6955e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 6.6955e-06], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3462, 0.6538], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3455, 0.6545], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.1184e-09, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.1306e-09, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.3452e-11, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.4136e-11, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.0041e-09, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.9963e-09, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6667)
Training Output torch.Size([2]) tensor([1.7701e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.7701e-05, 9.9998e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0061, 0.9939], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0061, 0.9939], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0454, 0.9546], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0453, 0.9547], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0364, 0.9636], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0364, 0.9636], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 66.667% (loss: 1.676) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.0000)
Training Output torch.Size([2]) tensor([0.1533, 0.8467], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1530, 0.8470], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7379, 0.2621], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7383, 0.2617], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8554, 0.1446], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8551, 0.1449], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7314, 0.2686], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7314, 0.2686], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8228, 0.1772], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8230, 0.1770], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9598, 0.0402], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9598, 0.0402], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9632, 0.0368], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9632, 0.0368], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8894, 0.1106], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8897, 0.1103], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8994, 0.1006], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8996, 0.1004], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7762, 0.2238], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7763, 0.2237], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7259)
Training Output torch.Size([2]) tensor([0.4052, 0.5948], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4052, 0.5948], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2908, 0.7092], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2904, 0.7096], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3608, 0.6392], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3609, 0.6391], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5936, 0.4064], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5934, 0.4066], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6380, 0.3620], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6380, 0.3620], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5356, 0.4644], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5355, 0.4645], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3168, 0.6832], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3170, 0.6830], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1102, 0.8898], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1101, 0.8899], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0654, 0.9346], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0654, 0.9346], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0709, 0.9291], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0709, 0.9291], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 57.317% (loss: 0.074) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0468, 0.9532], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0468, 0.9532], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0186, 0.9814], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0186, 0.9814], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0149, 0.9851], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0149, 0.9851], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0228, 0.9772], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0228, 0.9772], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0568, 0.9432], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0568, 0.9432], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1758, 0.8242], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1759, 0.8241], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4722, 0.5278], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4722, 0.5278], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6498, 0.3502], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6496, 0.3504], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8254, 0.1746], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8254, 0.1746], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8699, 0.1301], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8700, 0.1300], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8552, 0.1448], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8555, 0.1445], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8005, 0.1995], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 39, Training ones: 69 / 66
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7884, 0.2116], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7881, 0.2119], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: 1.552) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7884, 0.2116], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7881, 0.2119], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7884, 0.2116], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7884, 0.2116], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7884, 0.2116], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7884, 0.2116], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7884, 0.2116], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7884, 0.2116], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7884, 0.2116], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7884, 0.2116], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7884, 0.2116], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7884, 0.2116], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7884, 0.2116], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7881, 0.2119], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7884, 0.2116], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7884, 0.2116], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7884, 0.2116], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7884, 0.2116], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7884, 0.2116], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7881, 0.2119], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7881, 0.2119], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7881, 0.2119], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7881, 0.2119], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7884, 0.2116], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[   45] train: 55.660% test: 38.462%
INFO:root:Accuracy: 0.55238, Precision: 0.66667, Recall: 0.63768, F1: 0.65185
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 46
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7881, 0.2119], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7884, 0.2116], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 0.895) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7461, 0.2539], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7461, 0.2539], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6791, 0.3209], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6790, 0.3210], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5894, 0.4106], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5891, 0.4109], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4795, 0.5205], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4795, 0.5205], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3570, 0.6430], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3568, 0.6432], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2355, 0.7645], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2354, 0.7646], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1305, 0.8695], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1305, 0.8695], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0895, 0.9105], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0895, 0.9105], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0814, 0.9186], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0814, 0.9186], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0593, 0.9407], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0592, 0.9408], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0592, 0.9408], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0592, 0.9408], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0449, 0.9551], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0449, 0.9551], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0248, 0.9752], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0248, 0.9752], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8626)
Training Output torch.Size([2]) tensor([0.0090, 0.9910], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0089, 0.9911], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0055, 0.9945], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0055, 0.9945], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0061, 0.9939], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0061, 0.9939], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0110, 0.9890], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0110, 0.9890], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0114, 0.9886], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0114, 0.9886], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0077, 0.9923], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0077, 0.9923], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0033, 0.9967], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0033, 0.9967], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 61.905% (loss: 2.863) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0025, 0.9975], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0025, 0.9975], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0033, 0.9967], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0033, 0.9967], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0067, 0.9933], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0067, 0.9933], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0080, 0.9920], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0080, 0.9920], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0134, 0.9866], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0134, 0.9866], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0276, 0.9724], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0276, 0.9724], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0613, 0.9387], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0614, 0.9386], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.3020) tensor(1.)
Training Output torch.Size([2]) tensor([0.0891, 0.9109], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0891, 0.9109], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1405, 0.8595], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1407, 0.8593], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2284, 0.7716], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2282, 0.7718], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2778, 0.7222], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2774, 0.7226], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3631, 0.6369], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3632, 0.6368], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4989, 0.5011], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4989, 0.5011], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6245, 0.3755], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6244, 0.3756], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6283, 0.3717], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6284, 0.3716], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5244, 0.4756], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5246, 0.4754], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3363, 0.6637], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3360, 0.6640], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1252, 0.8748], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1253, 0.8747], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1292, 0.8708], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1291, 0.8709], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2973, 0.7027], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2978, 0.7022], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 54.878% (loss: 0.353) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3364, 0.6636], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3368, 0.6632], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2074, 0.7926], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2074, 0.7926], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2174, 0.7826], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2173, 0.7827], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3339, 0.6661], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3340, 0.6660], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6960, 0.3040], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6953, 0.3047], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6770, 0.3230], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6776, 0.3224], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7518)
Training Output torch.Size([2]) tensor([0.3511, 0.6489], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3509, 0.6491], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7717)
Training Output torch.Size([2]) tensor([0.1909, 0.8091], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1908, 0.8092], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2115, 0.7885], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2116, 0.7884], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1894, 0.8106], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1891, 0.8109], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9121)
Training Output torch.Size([2]) tensor([0.1273, 0.8727], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1276, 0.8724], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0562, 0.9438], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 18, Training ones: 69 / 87
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0372, 0.9628], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0372, 0.9628], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.038) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0372, 0.9628], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0372, 0.9628], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0372, 0.9628], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0373, 0.9627], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0372, 0.9628], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0372, 0.9628], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0373, 0.9627], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0372, 0.9628], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0372, 0.9628], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0372, 0.9628], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0372, 0.9628], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0373, 0.9627], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0372, 0.9628], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0372, 0.9628], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0373, 0.9627], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0372, 0.9628], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0373, 0.9627], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0372, 0.9628], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0372, 0.9628], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0372, 0.9628], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0372, 0.9628], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0372, 0.9628], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0372, 0.9628], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0372, 0.9628], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[   46] train: 55.660% test: 61.538%
INFO:root:Accuracy: 0.56190, Precision: 0.63218, Recall: 0.79710, F1: 0.70513
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.761904776096344
INFO:root:Epoch 47
Training min-max: tensor(0.) tensor(0.5398)
Training Output torch.Size([2]) tensor([0.0372, 0.9628], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0372, 0.9628], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 1.664) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0420, 0.9580], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0420, 0.9580], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0291, 0.9709], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0291, 0.9709], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0114, 0.9886], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0114, 0.9886], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0020, 0.9980], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0020, 0.9980], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.1549e-04, 9.9978e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.1570e-04, 9.9978e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.8741e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.8741e-05, 9.9998e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.4480e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.4480e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.9734e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([8.9910e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.5629e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.5699e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0868e-05, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0847e-05, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.7806e-05, 9.9990e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.7806e-05, 9.9990e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2794) tensor(1.)
Training Output torch.Size([2]) tensor([4.9991e-04, 9.9950e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.9991e-04, 9.9950e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0119, 0.9881], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0119, 0.9881], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0649, 0.9351], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0649, 0.9351], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3486, 0.6514], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3491, 0.6509], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5020, 0.4980], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5021, 0.4979], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4132, 0.5868], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4132, 0.5868], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2631, 0.7369], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2631, 0.7369], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 71.429% (loss: 0.820) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2449, 0.7551], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2450, 0.7550], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2781, 0.7219], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2780, 0.7220], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3509, 0.6491], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3508, 0.6492], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3713, 0.6287], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3715, 0.6285], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4356, 0.5644], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4355, 0.5645], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8325)
Training Output torch.Size([2]) tensor([0.5609, 0.4391], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5612, 0.4388], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5842, 0.4158], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5846, 0.4154], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5111, 0.4889], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5111, 0.4889], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5303, 0.4697], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5304, 0.4696], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4693, 0.5307], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4690, 0.5310], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3509, 0.6491], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3507, 0.6493], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3302, 0.6698], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3300, 0.6700], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.3851, 0.6149], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3853, 0.6147], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.2588) tensor(0.6549)
Training Output torch.Size([2]) tensor([0.5266, 0.4734], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5266, 0.4734], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5412, 0.4588], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5413, 0.4587], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4638, 0.5362], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4638, 0.5362], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3759, 0.6241], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3759, 0.6241], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3021, 0.6979], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3022, 0.6978], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2818, 0.7182], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2818, 0.7182], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2992, 0.7008], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2992, 0.7008], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 62.195% (loss: 0.355) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2882, 0.7118], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2882, 0.7118], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2502, 0.7498], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2503, 0.7497], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2502, 0.7498], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2503, 0.7497], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2863, 0.7137], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2865, 0.7135], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3604, 0.6396], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3604, 0.6396], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5061, 0.4939], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5061, 0.4939], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6262, 0.3738], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6259, 0.3741], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5634, 0.4366], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5633, 0.4367], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.0392) tensor(1.)
Training Output torch.Size([2]) tensor([0.6561, 0.3439], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6559, 0.3441], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5841, 0.4159], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5844, 0.4156], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4701, 0.5299], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4698, 0.5302], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3610, 0.6390], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 24, Training ones: 69 / 81
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3540, 0.6460], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3540, 0.6460], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.437) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3541, 0.6459], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3540, 0.6460], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3540, 0.6460], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3540, 0.6460], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3540, 0.6460], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3540, 0.6460], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3540, 0.6460], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3540, 0.6460], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3540, 0.6460], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3540, 0.6460], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3540, 0.6460], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3540, 0.6460], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3540, 0.6460], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3540, 0.6460], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3540, 0.6460], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3540, 0.6460], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3540, 0.6460], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3540, 0.6460], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3540, 0.6460], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3540, 0.6460], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3540, 0.6460], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3541, 0.6459], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3541, 0.6459], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3540, 0.6460], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[   47] train: 57.547% test: 61.538%
INFO:root:Accuracy: 0.58095, Precision: 0.65432, Recall: 0.76812, F1: 0.70667
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.761904776096344
INFO:root:Epoch 48
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3540, 0.6460], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3539, 0.6461], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 0.738) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4508, 0.5492], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4516, 0.5484], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8157)
Training Output torch.Size([2]) tensor([0.4230, 0.5770], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4229, 0.5771], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2833, 0.7167], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2836, 0.7164], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1285, 0.8715], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1286, 0.8714], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0277, 0.9723], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0279, 0.9721], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.4111e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.3924e-05, 9.9998e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.4754e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.4328e-06, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.3507e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.3507e-05, 9.9998e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0220e-04, 9.9990e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0250e-04, 9.9990e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0045, 0.9955], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0044, 0.9956], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0161, 0.9839], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0161, 0.9839], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0038, 0.9962], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0038, 0.9962], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.8484e-04, 9.9962e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.8409e-04, 9.9962e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.4464e-04, 9.9966e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.4464e-04, 9.9966e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0152, 0.9848], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0152, 0.9848], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0338, 0.9662], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0338, 0.9662], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0258, 0.9742], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0258, 0.9742], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0088, 0.9912], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0088, 0.9912], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 76.190% (loss: 2.370) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0081, 0.9919], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0081, 0.9919], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0163, 0.9837], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0163, 0.9837], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0560, 0.9440], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0559, 0.9441], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0818, 0.9182], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0818, 0.9182], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1810, 0.8190], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1809, 0.8191], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4478, 0.5522], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4481, 0.5519], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8097, 0.1903], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8095, 0.1905], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9020, 0.0980], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9019, 0.0981], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9708, 0.0292], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9708, 0.0292], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9790, 0.0210], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9790, 0.0210], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9656, 0.0344], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9656, 0.0344], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9109, 0.0891], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9108, 0.0892], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8901, 0.1099], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8900, 0.1100], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8187, 0.1813], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8187, 0.1813], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6744, 0.3256], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6746, 0.3254], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4757, 0.5243], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4757, 0.5243], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2906, 0.7094], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2908, 0.7092], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1603, 0.8397], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1602, 0.8398], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1163, 0.8837], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1164, 0.8836], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1102, 0.8898], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1103, 0.8897], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 64.634% (loss: 0.117) [mem: 2.63e+04]
Training min-max: tensor(0.0667) tensor(1.)
Training Output torch.Size([2]) tensor([0.0917, 0.9083], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0916, 0.9084], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0655, 0.9345], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0654, 0.9346], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6980)
Training Output torch.Size([2]) tensor([0.0615, 0.9385], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0614, 0.9386], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0750, 0.9250], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0750, 0.9250], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1110, 0.8890], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1110, 0.8890], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1800, 0.8200], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1800, 0.8200], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2902, 0.7098], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2902, 0.7098], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3412, 0.6588], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3413, 0.6587], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7456)
Training Output torch.Size([2]) tensor([0.4200, 0.5800], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4200, 0.5800], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4035, 0.5965], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4035, 0.5965], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2895, 0.7105], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2898, 0.7102], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.3216) tensor(0.5804)
Training Output torch.Size([2]) tensor([0.1027, 0.8973], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 18, Training ones: 69 / 87
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0757, 0.9243], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0757, 0.9243], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.079) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0757, 0.9243], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0757, 0.9243], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0757, 0.9243], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0757, 0.9243], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0758, 0.9242], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0758, 0.9242], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0756, 0.9244], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0758, 0.9242], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0756, 0.9244], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0758, 0.9242], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0757, 0.9243], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0757, 0.9243], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0757, 0.9243], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0757, 0.9243], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0756, 0.9244], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0758, 0.9242], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0758, 0.9242], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0757, 0.9243], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0756, 0.9244], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0757, 0.9243], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0757, 0.9243], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0757, 0.9243], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0758, 0.9242], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0757, 0.9243], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[   48] train: 63.208% test: 61.538%
INFO:root:Accuracy: 0.63810, Precision: 0.67816, Recall: 0.85507, F1: 0.75641
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.761904776096344
INFO:root:Epoch 49
Training min-max: tensor(0.) tensor(0.7665)
Training Output torch.Size([2]) tensor([0.0757, 0.9243], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0758, 0.9242], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 1.329) [mem: 2.63e+04]
Training min-max: tensor(0.0353) tensor(1.)
Training Output torch.Size([2]) tensor([0.1390, 0.8610], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1391, 0.8609], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1129, 0.8871], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1129, 0.8871], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0406, 0.9594], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0405, 0.9595], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0030, 0.9970], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0030, 0.9970], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.2765e-05, 9.9995e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.2868e-05, 9.9995e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.3477e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.3477e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.6883e-09, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.6988e-09, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9994)
Training Output torch.Size([2]) tensor([4.4844e-09, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.4669e-09, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.9967e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([7.9345e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9993)
Training Output torch.Size([2]) tensor([3.8080e-05, 9.9996e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.7932e-05, 9.9996e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7917)
Training Output torch.Size([2]) tensor([0.0265, 0.9735], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0265, 0.9735], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0284, 0.9716], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0284, 0.9716], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0029, 0.9971], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0028, 0.9972], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.0629e-04, 9.9949e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.0432e-04, 9.9950e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.5287e-04, 9.9905e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.4546e-04, 9.9905e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0063, 0.9937], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0063, 0.9937], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0519, 0.9481], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0520, 0.9480], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1076, 0.8924], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1075, 0.8925], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1085, 0.8915], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1085, 0.8915], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0647, 0.9353], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0646, 0.9354], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 76.190% (loss: 1.403) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0620, 0.9380], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0619, 0.9381], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0938, 0.9062], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0938, 0.9062], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1981, 0.8019], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1981, 0.8019], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6979)
Training Output torch.Size([2]) tensor([0.2544, 0.7456], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2544, 0.7456], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4129, 0.5871], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4129, 0.5871], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6765, 0.3235], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6765, 0.3235], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7822, 0.2178], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7821, 0.2179], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7874, 0.2126], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7871, 0.2129], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8542, 0.1458], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8543, 0.1457], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8495, 0.1505], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8493, 0.1507], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7797, 0.2203], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7797, 0.2203], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6230)
Training Output torch.Size([2]) tensor([0.6178, 0.3822], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6176, 0.3824], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5460, 0.4540], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5461, 0.4539], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3989, 0.6011], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3989, 0.6011], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9986)
Training Output torch.Size([2]) tensor([0.3596, 0.6404], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3596, 0.6404], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2606, 0.7394], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2606, 0.7394], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1445, 0.8555], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1445, 0.8555], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0577, 0.9423], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0577, 0.9423], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0358, 0.9642], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0357, 0.9643], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0358, 0.9642], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0358, 0.9642], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 67.073% (loss: 0.036) [mem: 2.63e+04]
Training min-max: tensor(0.0118) tensor(0.3882)
Training Output torch.Size([2]) tensor([0.0243, 0.9757], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0244, 0.9756], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0107, 0.9893], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0107, 0.9893], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0088, 0.9912], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0087, 0.9913], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0130, 0.9870], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0130, 0.9870], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0304, 0.9696], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0304, 0.9696], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0920, 0.9080], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0920, 0.9080], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2787, 0.7213], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2789, 0.7211], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4032, 0.5968], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4035, 0.5965], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5932, 0.4068], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5927, 0.4073], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6269, 0.3731], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6272, 0.3728], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5622, 0.4378], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5621, 0.4379], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4560, 0.5440], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 22, Training ones: 69 / 83
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4277, 0.5723], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4276, 0.5724], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.558) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4277, 0.5723], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4275, 0.5725], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4275, 0.5725], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4276, 0.5724], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4277, 0.5723], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4277, 0.5723], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4275, 0.5725], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4276, 0.5724], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4277, 0.5723], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4275, 0.5725], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4276, 0.5724], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4276, 0.5724], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4276, 0.5724], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4276, 0.5724], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4275, 0.5725], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4275, 0.5725], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4277, 0.5723], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4276, 0.5724], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4276, 0.5724], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4276, 0.5724], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4276, 0.5724], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4277, 0.5723], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4276, 0.5724], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4275, 0.5725], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[   49] train: 59.434% test: 61.538%
INFO:root:Accuracy: 0.60000, Precision: 0.66265, Recall: 0.79710, F1: 0.72368
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.761904776096344
INFO:root:Epoch 50
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4273, 0.5727], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4275, 0.5725], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 0.704) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4477, 0.5523], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4474, 0.5526], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4357, 0.5643], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4355, 0.5645], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3944, 0.6056], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3945, 0.6055], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3176, 0.6824], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3177, 0.6823], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1940, 0.8060], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1941, 0.8059], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0569, 0.9431], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0569, 0.9431], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0029, 0.9971], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0029, 0.9971], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.6800e-04, 9.9933e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.6670e-04, 9.9933e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0781, 0.9219], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0781, 0.9219], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0732, 0.9268], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0733, 0.9267], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0053, 0.9947], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0053, 0.9947], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.9794e-04, 9.9980e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.9833e-04, 9.9980e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.4037e-04, 9.9986e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.4037e-04, 9.9986e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.2959e-04, 9.9917e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.2314e-04, 9.9918e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0125, 0.9875], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0125, 0.9875], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0283, 0.9717], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0282, 0.9718], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0219, 0.9781], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0218, 0.9782], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0068, 0.9932], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0068, 0.9932], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 76.190% (loss: 2.499) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0060, 0.9940], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0060, 0.9940], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0130, 0.9870], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0130, 0.9870], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.0026) tensor(1.)
Training Output torch.Size([2]) tensor([0.0447, 0.9553], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0445, 0.9555], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0635, 0.9365], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0635, 0.9365], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1179, 0.8821], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1181, 0.8819], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2244, 0.7756], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2244, 0.7756], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3820, 0.6180], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3821, 0.6179], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4519, 0.5481], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4524, 0.5476], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5732, 0.4268], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5733, 0.4267], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5991, 0.4009], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5994, 0.4006], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5402, 0.4598], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5400, 0.4600], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4106, 0.5894], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4106, 0.5894], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3695, 0.6305], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3695, 0.6305], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.2784) tensor(1.)
Training Output torch.Size([2]) tensor([0.4002, 0.5998], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4002, 0.5998], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5055, 0.4945], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5052, 0.4948], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5211, 0.4789], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5211, 0.4789], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4510, 0.5490], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4511, 0.5489], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3191, 0.6809], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3191, 0.6809], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2792, 0.7208], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2793, 0.7207], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3058, 0.6942], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3058, 0.6942], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 59.756% (loss: 0.365) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2692, 0.7308], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2692, 0.7308], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1916, 0.8084], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1917, 0.8083], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.2941) tensor(1.)
Training Output torch.Size([2]) tensor([0.1761, 0.8239], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1761, 0.8239], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2044, 0.7956], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2045, 0.7955], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2809, 0.7191], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2810, 0.7190], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.0053) tensor(1.)
Training Output torch.Size([2]) tensor([0.4198, 0.5802], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4198, 0.5802], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6198, 0.3802], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6197, 0.3803], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7115, 0.2885], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7112, 0.2888], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8305, 0.1695], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8305, 0.1695], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8602, 0.1398], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8598, 0.1402], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8317, 0.1683], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8318, 0.1682], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6784)
Training Output torch.Size([2]) tensor([0.7430, 0.2570], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 21, Training ones: 69 / 84
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7142, 0.2858], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7142, 0.2858], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: 1.252) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7142, 0.2858], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7142, 0.2858], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7142, 0.2858], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7142, 0.2858], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7142, 0.2858], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7142, 0.2858], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7142, 0.2858], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7142, 0.2858], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7142, 0.2858], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7142, 0.2858], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7142, 0.2858], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7142, 0.2858], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7142, 0.2858], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7142, 0.2858], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7142, 0.2858], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7142, 0.2858], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7142, 0.2858], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7142, 0.2858], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7142, 0.2858], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7142, 0.2858], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7142, 0.2858], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7142, 0.2858], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7146, 0.2854], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7142, 0.2858], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[   50] train: 55.660% test: 38.462%
INFO:root:Accuracy: 0.55238, Precision: 0.63095, Recall: 0.76812, F1: 0.69281
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 51
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7146, 0.2854], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7142, 0.2858], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 0.795) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6281, 0.3719], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6280, 0.3720], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5001, 0.4999], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5001, 0.4999], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.3686, 0.6314], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3687, 0.6313], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2665, 0.7335], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2665, 0.7335], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1972, 0.8028], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1972, 0.8028], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1459, 0.8541], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1459, 0.8541], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0979, 0.9021], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0979, 0.9021], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0896, 0.9104], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0895, 0.9105], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1210, 0.8790], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1210, 0.8790], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1186, 0.8814], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1186, 0.8814], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1674, 0.8326], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1674, 0.8326], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1532, 0.8468], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1534, 0.8466], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0859, 0.9141], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0859, 0.9141], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0243, 0.9757], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0243, 0.9757], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0162, 0.9838], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0162, 0.9838], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0265, 0.9735], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0265, 0.9735], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0730, 0.9270], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0729, 0.9271], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.0821, 0.9179], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0823, 0.9177], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7772)
Training Output torch.Size([2]) tensor([0.0495, 0.9505], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0496, 0.9504], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0182, 0.9818], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0181, 0.9819], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 66.667% (loss: 2.013) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0131, 0.9869], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0131, 0.9869], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8797)
Training Output torch.Size([2]) tensor([0.0174, 0.9826], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0174, 0.9826], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0364, 0.9636], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0364, 0.9636], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.0418, 0.9582], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0419, 0.9581], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0722, 0.9278], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0721, 0.9279], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1669, 0.8331], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1674, 0.8326], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.3373) tensor(1.)
Training Output torch.Size([2]) tensor([0.4273, 0.5727], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4274, 0.5726], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3965, 0.6035], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3968, 0.6032], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5776, 0.4224], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5776, 0.4224], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4901, 0.5099], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4901, 0.5099], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1958, 0.8042], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1961, 0.8039], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9999)
Training Output torch.Size([2]) tensor([0.2416, 0.7584], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2408, 0.7592], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.1333) tensor(1.)
Training Output torch.Size([2]) tensor([0.4551, 0.5449], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4549, 0.5451], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6285, 0.3715], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6285, 0.3715], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6211, 0.3789], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6210, 0.3790], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5099, 0.4901], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5099, 0.4901], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3217, 0.6783], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3219, 0.6781], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1326, 0.8674], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1326, 0.8674], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0807, 0.9193], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0806, 0.9194], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0796, 0.9204], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0796, 0.9204], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 57.317% (loss: 0.083) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0538, 0.9462], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0537, 0.9463], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0238, 0.9762], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0238, 0.9762], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0182, 0.9818], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0183, 0.9817], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0241, 0.9759], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0241, 0.9759], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0483, 0.9517], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0483, 0.9517], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1219, 0.8781], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1217, 0.8783], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3063, 0.6937], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3063, 0.6937], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4140, 0.5860], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4140, 0.5860], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5903, 0.4097], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5907, 0.4093], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6056, 0.3944], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6054, 0.3946], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4922, 0.5078], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4921, 0.5079], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.3058, 0.6942], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 18, Training ones: 69 / 87
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2730, 0.7270], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2730, 0.7270], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.319) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2731, 0.7269], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2730, 0.7270], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2730, 0.7270], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2730, 0.7270], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2729, 0.7271], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2730, 0.7270], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2730, 0.7270], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2730, 0.7270], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2730, 0.7270], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2730, 0.7270], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2730, 0.7270], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2730, 0.7270], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2730, 0.7270], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2730, 0.7270], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2730, 0.7270], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2730, 0.7270], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2731, 0.7269], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2730, 0.7270], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2730, 0.7270], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2729, 0.7271], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2731, 0.7269], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2730, 0.7270], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2730, 0.7270], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2730, 0.7270], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[   51] train: 53.774% test: 61.538%
INFO:root:Accuracy: 0.54286, Precision: 0.62069, Recall: 0.78261, F1: 0.69231
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.761904776096344
INFO:root:Epoch 52
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2729, 0.7271], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2730, 0.7270], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 0.808) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3227, 0.6773], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3227, 0.6773], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7095)
Training Output torch.Size([2]) tensor([0.3007, 0.6993], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3008, 0.6992], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2341, 0.7659], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2341, 0.7659], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1508, 0.8492], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1508, 0.8492], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2941) tensor(1.)
Training Output torch.Size([2]) tensor([0.0728, 0.9272], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0728, 0.9272], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0207, 0.9793], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0207, 0.9793], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.8305e-04, 9.9912e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.8305e-04, 9.9912e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0062, 0.9938], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0062, 0.9938], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0062, 0.9938], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0062, 0.9938], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.2745) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0314) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0314) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9961)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 57.143% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0044, 0.9956], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2230) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 51.220% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6899)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2510) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 82, Training ones: 69 / 23
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[   52] train: 49.057% test: 38.462%
INFO:root:Accuracy: 0.48571, Precision: 0.82609, Recall: 0.27536, F1: 0.41304
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 53
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5585)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4314)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7843)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7117)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[   53] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 54
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2706) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7255)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0275) tensor(0.3843)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9020)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9676)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[   54] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 55
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.3098) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6115)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[   55] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 56
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0265) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6931)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.3961)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0044, 0.9956], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0044, 0.9956], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 103, Training ones: 69 / 2
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[   56] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.50000, Recall: 0.01449, F1: 0.02817
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 57
Training min-max: tensor(0.2510) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9988)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0275) tensor(0.4431)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7266)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[   57] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 58
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8647)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6461)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4235)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7490)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6975)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9991)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8161)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[   58] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 59
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.0000)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0131) tensor(0.6431)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0745) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9986)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.9961)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.2131) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[   59] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 60
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7216)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7450)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.8510)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.2980) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[   60] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 61
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.6980)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8194)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8877)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.0012) tensor(0.5251)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2824) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6771)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[   61] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 62
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.1255) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7686)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4353)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.8934)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8154)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.3804)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[   62] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 63
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4784)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6903)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.1333) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9346)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[   63] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 64
Training min-max: tensor(0.) tensor(0.9238)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8874)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.3020) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8579)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9107)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6311)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.3451)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7948)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6820)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6470)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[   64] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 65
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0353) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.0000)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8513)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8697)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9441)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9380)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7687)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.1255) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7537)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.2113) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9975)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[   65] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 66
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0044, 0.9956], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 100.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2941) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9998)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8157)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 26.190% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2682) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 34.146% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 104, Training ones: 69 / 1
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[   66] train: 35.849% test: 38.462%
INFO:root:Accuracy: 0.35238, Precision: 1.00000, Recall: 0.01449, F1: 0.02857
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 67
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8275)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6610)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7271)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8041)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2941) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[   67] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 68
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7490)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.0000)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8802)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[   68] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 69
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6431)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9957)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.9999)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4314)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7371)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[   69] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 70
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7138)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6863)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.0431) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.0275) tensor(0.3765)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.2784) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7680)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[   70] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 71
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9996)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7051)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8870)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9241)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[   71] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 72
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.7648)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.0627) tensor(0.9882)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.0033) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9049)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7687)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.2510) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7722)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9961)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6884)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0588) tensor(0.4902)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[   72] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 73
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.9998)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9982)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.0392) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4118)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.1026) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7125)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[   73] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 74
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6270)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8637)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7975)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[   74] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 75
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7676)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.7370)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7216)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[   75] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 76
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.1804) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.2895) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9394)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.0824) tensor(0.4627)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[   76] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 77
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4039)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.2731) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.0623) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9997)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7686)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[   77] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 78
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9999)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.0000)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9848)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.3647)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7780)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[   78] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 79
Training min-max: tensor(0.) tensor(0.7296)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6625)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.0039) tensor(0.7490)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9996)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6902)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[   79] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 80
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8731)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6663)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[   80] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 81
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4627)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6391)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4706)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[   81] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 82
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8868)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6862)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.0000)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7918)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[   82] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 83
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7255)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.3294) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2580) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8596)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9804)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0130) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[   83] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 84
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7175)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9253)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.0706) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8923)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7730)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[   84] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 85
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9108)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5844)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.4706) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[   85] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 86
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0044, 0.9956], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7327)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 26.190% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.5998)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.0392) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 34.146% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2941) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 104, Training ones: 69 / 1
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[   86] train: 35.849% test: 38.462%
INFO:root:Accuracy: 0.35238, Precision: 1.00000, Recall: 0.01449, F1: 0.02857
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 87
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.2902) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.2745) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[   87] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 88
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.2483) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6185)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.0078) tensor(0.2745)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6667)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.3059) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[   88] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 89
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.2351) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.0275) tensor(0.3882)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7253)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.1255) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2481) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7216)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.3020) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[   89] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 90
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8196)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.3137) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9988)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8267)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8115)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9961)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.3373) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9999)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7937)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[   90] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 91
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0824) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0667) tensor(0.8118)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8946)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9967)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4196)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9977)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8627)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.2588) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8786)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9990)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[   91] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 92
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2588) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.3373)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6470)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.1137) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.0353) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7725)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8150)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[   92] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 93
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9996)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9707)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6352)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6980)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.0392) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[   93] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 94
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2745) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6666)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2784) tensor(0.7333)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0392) tensor(0.8518)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[   94] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 95
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7702)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.1216) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.3020) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.0392) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8566)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9996)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.1255) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[   95] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 96
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.1490) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7251)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.8901)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9203)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9977)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[   96] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 97
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7773)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2941) tensor(0.9647)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8783)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.0027) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.1255)
Training Output torch.Size([2]) tensor([0.0044, 0.9956], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 31.707% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.2510) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 104, Training ones: 69 / 1
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[   97] train: 33.962% test: 38.462%
INFO:root:Accuracy: 0.33333, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 98
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9714)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9353)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2921) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7804)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.2691) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.3765)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[   98] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 99
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9039)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.2675) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7761)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.0353) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.2471) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9993)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4471)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[   99] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 100
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0706) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9998)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7255)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0353) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4039)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.0353) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[  100] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 101
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9994)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9569)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9917)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2471) tensor(0.9608)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[  101] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 102
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6784)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8155)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.3176) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9997)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[  102] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 103
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2392) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.0081) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[  103] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 104
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9875)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6941)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.0980) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9247)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9997)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9098)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7214)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[  104] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 105
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.3020) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9686)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.2634) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0627) tensor(0.3212)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[  105] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 106
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7451)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0275) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8142)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7568)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[  106] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 107
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8136)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8682)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.0039) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0314) tensor(0.3882)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[  107] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 108
Training min-max: tensor(0.) tensor(0.7329)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.2233) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6901)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.0000)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7725)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9961)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9848)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[  108] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 109
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6430)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0909) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.0274) tensor(0.5020)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9995)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[  109] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 110
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9999)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.1333) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7020)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2353) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.9840)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7085)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.3118) tensor(0.9999)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[  110] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 111
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.0725) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7961)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.3137) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.1373) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[  111] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 112
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.3059) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9989)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[  112] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 113
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2215) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9999)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6181)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6699)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.1441) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[  113] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 114
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6666)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.2471) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0196) tensor(0.1216)
Training Output torch.Size([2]) tensor([0.0044, 0.9956], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 104, Training ones: 69 / 1
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[  114] train: 33.019% test: 38.462%
INFO:root:Accuracy: 0.33333, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 115
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6156)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.8898)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7098)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.3059) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9989)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7294)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.2980) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2902) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[  115] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 116
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.7137)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8923)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4980)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5647)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8869)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[  116] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 117
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6980)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7412)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9990)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.2980)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[  117] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 118
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6824)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9978)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.6979)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8996)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.2179) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6302)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7408)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2984) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[  118] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 119
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6189)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9312)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.2980) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[  119] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 120
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7863)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7498)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7252)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7934)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.0151) tensor(1.0000)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.6860)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4980)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[  120] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 121
Training min-max: tensor(0.) tensor(0.8706)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6744)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.1932) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.2549) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.2296) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.0000)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8926)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4667)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8835)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.2510) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8907)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.3765)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[  121] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 122
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9954)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7294)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9998)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7607)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6980)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[  122] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 123
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9997)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9947)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7162)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.3137) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[  123] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 124
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7059)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.0000)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.8540)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7250)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4314)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8169)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[  124] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 125
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9137)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7645)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.2843) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.1137) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4980)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[  125] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 126
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9961)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8217)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2157) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9199)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9169)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7922)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.0709) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7490)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[  126] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 127
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9080)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7725)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4392)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4667)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[  127] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 128
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8846)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4745)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9961)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6941)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8669)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7961)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[  128] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 129
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6784)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6901)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9999)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6624)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.0009) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9961)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7175)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.0000)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.0153) tensor(0.9647)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[  129] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 130
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0431) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7490)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7996)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6702)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.2902) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7176)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2799) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0386) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[  130] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 131
Training min-max: tensor(0.) tensor(0.9993)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.3216)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9352)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.2824) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.2745) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6704)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6625)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4235)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[  131] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 132
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.6314)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8935)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7020)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9999)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[  132] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 133
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.0118) tensor(0.6275)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9162)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4549)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7490)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[  133] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 134
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7591)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6667)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[  134] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 135
Training min-max: tensor(0.3529) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6039)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6742)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9991)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.3294)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[  135] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 136
Training min-max: tensor(0.) tensor(0.4118)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9982)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9997)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.2566) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8803)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9998)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[  136] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 137
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.8182)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9569)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[  137] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 138
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7277)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7015)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[  138] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 139
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2656) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8644)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.9995)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9437)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6703)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.0980) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7141)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9734)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6701)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[  139] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 140
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9265)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7959)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7774)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4980)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[  140] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 141
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7516)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9555)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8265)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9088)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7609)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[  141] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 142
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.2308) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7058)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9999)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.0000)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.1255) tensor(0.8686)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.0000)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[  142] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 143
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9055)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6980)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5216)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8431)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.8958)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6588)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.5020) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2902) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[  143] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 144
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8659)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.0392) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[  144] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 145
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4980)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7057)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7098)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.3608)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9988)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9998)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[  145] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 146
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9996)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7431)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8412)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6625)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9879)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[  146] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 147
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8246)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.3333) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7599)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9982)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0238) tensor(0.5020)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[  147] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 148
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9999)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7098)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9750)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6824)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9216)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9060)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7646)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0392) tensor(0.4039)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[  148] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 149
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8981)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.2941) tensor(0.7804)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6349)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.0196) tensor(0.5020)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.7059)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[  149] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 150
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6824)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7569)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2980) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
INFO:root:[   20] 23.810% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6974)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9053)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.4196) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.2902)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[   40] 32.927% (loss: nan) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Training Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 105, Training ones: 69 / 0
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: nan) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Output torch.Size([2]) tensor([nan, nan], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[  150] train: 34.906% test: 38.462%
INFO:root:Accuracy: 0.34286, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:VideoDataset dataset created
INFO:root:VideoDataset unsupervised data loader created
INFO:root:loaded best validation dice from epoch 101 with f1: 0.8108108043670654
INFO:root:loaded pretrained encoder from epoch 101 with msg: <All keys matched successfully>
INFO:root:loaded pretrained classifier from epoch 101 with msg: <All keys matched successfully>
INFO:root:Encountered exception when loading checkpoint loaded state dict has a different number of parameter groups
/home/gridsan/nchutisilp/.local/lib/python3.9/site-packages/torch/backends/cuda/__init__.py:342: FutureWarning: torch.backends.cuda.sdp_kernel() is deprecated. In the future, this context manager will be removed. Please see, torch.nn.attention.sdpa_kernel() for the new context manager, with updated signature.
  warnings.warn(
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3500, 0.6500], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2001, 0.7999], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.327) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4603, 0.5397], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6787, 0.3213], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1644, 0.8356], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9114, 0.0886], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1508, 0.8492], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4120, 0.5880], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.8716, 0.1284], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0387, 0.9613], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0148, 0.9852], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0453, 0.9547], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0275, 0.9725], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7142, 0.2858], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0219, 0.9781], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1067, 0.8933], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5084, 0.4916], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0336, 0.9664], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0515, 0.9485], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5746, 0.4254], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0242, 0.9758], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0443, 0.9557], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5509, 0.4491], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0127, 0.9873], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0589, 0.9411], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1199, 0.8801], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2570, 0.7430], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0516, 0.9484], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0435, 0.9565], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0676, 0.9324], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2399, 0.7601], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([1]) tensor([1], device='cuda:0')
labels torch.Size([1]) tensor([0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0698, 0.9302], device='cuda:0')
Validation Labels torch.Size([1]) tensor([0], device='cuda:0')
[Label/Prediction] Validation zeros: 12 / 7, Training ones: 21 / 26
INFO:root:Test Accuracy: 0.54545, Precision: 0.61538, Recall: 0.76190, F1: 0.68085
