/home/gridsan/nchutisilp/.conda/envs/jepa/bin/python
INFO:root:called-params configs/evals/vitl16_cf_pres_16x2x3_frozen_from_vjepa_fold2.yaml
INFO:root:loaded params...
{   'data': {   'dataset_test': '/home/gridsan/nchutisilp/projects/ModelsGenesis/notebooks/tabular_data/cf_pres_test.csv',
                'dataset_train': '/home/gridsan/nchutisilp/projects/ModelsGenesis/notebooks/tabular_data/cf_pres_train_fold2.csv',
                'dataset_type': 'VideoDataset',
                'dataset_val': '/home/gridsan/nchutisilp/projects/ModelsGenesis/notebooks/tabular_data/cf_pres_val_fold2.csv',
                'frame_step': 2,
                'frames_per_clip': 186,
                'num_classes': 2,
                'num_segments': 1,
                'num_views_per_segment': 1},
    'eval_name': 'video_classification_frozen',
    'nodes': 8,
    'optimization': {   'attend_across_segments': True,
                        'batch_size': 24,
                        'final_lr': 0.0,
                        'freeze_encoder': True,
                        'lr': 0.001,
                        'num_epochs': 150,
                        'resolution': 224,
                        'start_lr': 0.001,
                        'use_bfloat16': True,
                        'warmup': 0.0,
                        'weight_decay': 0.01},
    'pretrain': {   'checkpoint': 'jepa-latest.pth.tar',
                    'checkpoint_key': 'target_encoder',
                    'clip_duration': None,
                    'folder': '/home/gridsan/nchutisilp/projects/jepa/pretrain_models',
                    'frames_per_clip': 16,
                    'model_name': 'vit_large',
                    'patch_size': 16,
                    'tight_silu': False,
                    'tubelet_size': 2,
                    'uniform_power': True,
                    'use_sdpa': True,
                    'use_silu': False,
                    'write_tag': 'jepa'},
    'resume_checkpoint': False,
    'tag': 'cf-pres-from-vjepa-16x2x3-fold2',
    'tasks_per_node': 8}
Random port is ... 18400
INFO:root:Running... (rank: 0/1)
INFO:root:Running evaluation: video_classification_frozen
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:Loading pretrained model from /home/gridsan/nchutisilp/projects/jepa/pretrain_models/jepa-latest.pth.tar
VisionTransformer(
  (patch_embed): PatchEmbed3D(
    (proj): Conv3d(3, 1024, kernel_size=(2, 16, 16), stride=(2, 16, 16))
  )
  (blocks): ModuleList(
    (0-23): 24 x Block(
      (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
      (attn): Attention(
        (qkv): Linear(in_features=1024, out_features=3072, bias=True)
        (attn_drop): Dropout(p=0.0, inplace=False)
        (proj): Linear(in_features=1024, out_features=1024, bias=True)
        (proj_drop): Dropout(p=0.0, inplace=False)
      )
      (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
      (mlp): MLP(
        (fc1): Linear(in_features=1024, out_features=4096, bias=True)
        (act): GELU(approximate='none')
        (fc2): Linear(in_features=4096, out_features=1024, bias=True)
        (drop): Dropout(p=0.0, inplace=False)
      )
    )
  )
  (norm): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
)
INFO:root:loaded pretrained model with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch: 300
 path: /home/gridsan/nchutisilp/projects/jepa/pretrain_models/jepa-latest.pth.tar
INFO:root:VideoDataset dataset created
INFO:root:VideoDataset unsupervised data loader created
INFO:root:VideoDataset dataset created
INFO:root:VideoDataset unsupervised data loader created
INFO:root:Dataloader created... iterations per epoch: 5
INFO:root:Using AdamW
INFO:root:Epoch 1
/home/gridsan/nchutisilp/.local/lib/python3.9/site-packages/torch/backends/cuda/__init__.py:342: FutureWarning: torch.backends.cuda.sdp_kernel() is deprecated. In the future, this context manager will be removed. Please see, torch.nn.attention.sdpa_kernel() for the new context manager, with updated signature.
  warnings.warn(
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4298, 0.5702], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4572, 0.5428], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4251, 0.5749], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4582, 0.5418], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4347, 0.5653], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4601, 0.5399], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4960, 0.5040], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3944, 0.6056], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4236, 0.5764], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4547, 0.5453], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4327, 0.5673], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4184, 0.5816], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4253, 0.5747], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4253, 0.5747], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5055, 0.4945], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4185, 0.5815], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4242, 0.5758], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4158, 0.5842], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4150, 0.5850], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4730, 0.5270], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4250, 0.5750], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4365, 0.5635], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3847, 0.6153], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3855, 0.6145], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 87.500% (loss: 0.604) [mem: 1.76e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.7136e-13, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([6.1498e-13, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3328e-12, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1579e-12, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([7.7741e-13, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([7.4181e-13, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([6.1980e-13, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([5.9606e-13, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([6.1980e-13, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([7.0233e-13, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([8.3404e-13, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([5.9142e-13, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([6.4449e-13, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([9.6750e-13, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([7.8965e-13, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([7.3603e-13, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([8.6051e-13, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([8.6051e-13, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([5.6434e-13, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.7895e-13, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([5.1383e-13, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([6.8606e-13, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([7.3603e-13, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([6.5978e-13, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.6495e-13, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([9.3773e-13, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([9.6750e-13, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([6.5978e-13, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([7.5940e-13, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([5.5995e-13, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([8.8092e-13, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([7.6535e-13, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3019e-12, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([6.4955e-13, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([5.3849e-13, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([6.6495e-13, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([7.0784e-13, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([6.1019e-13, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([6.8606e-13, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([6.6495e-13, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([5.2602e-13, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([6.4449e-13, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3328e-12, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([9.0181e-13, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([6.5978e-13, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([5.9606e-13, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3538e-12, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([9.0888e-13, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 4.4966e-17], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 6.3412e-17], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 6.1461e-17], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 5.2571e-17], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 5.7737e-17], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 5.6842e-17], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 6.5425e-17], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 7.0741e-17], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 5.1756e-17], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 5.0163e-17], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 4.4269e-17], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 5.5961e-17], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 7.0741e-17], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 3.6700e-17], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 4.7866e-17], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 6.7502e-17], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 6.4411e-17], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 6.2429e-17], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 5.8647e-17], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 5.5961e-17], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 6.8565e-17], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 6.0508e-17], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 5.5961e-17], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 5.7737e-17], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 7.4136e-17], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 7.1855e-17], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 6.7502e-17], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 6.2429e-17], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 6.1461e-17], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 6.4411e-17], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 4.9385e-17], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 3.7865e-17], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 5.1756e-17], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 34, Training ones: 69 / 71
outputs torch.Size([24]) tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.2460e-05, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.4398e-05, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.1843e-05, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.2856e-05, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.4739e-05, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.1257e-05, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0170e-05, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.1160e-06, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.8059e-05, 9.9998e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.4913e-05, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.7039e-06, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.1614e-05, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.4064e-05, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.4682e-05, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.4119e-05, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.1705e-05, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.7419e-06, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.6661e-06, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.4119e-05, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.2650e-05, 9.9998e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.2607e-05, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.2958e-06, 9.9999e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.7640e-05, 9.9998e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.1660e-05, 9.9999e-01], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 62.500% (loss: 4.203) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.5089e-05, 9.9998e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.7503e-05, 9.9998e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[    1] train: 53.333% test: 56.250%
INFO:root:Accuracy: 0.56190, Precision: 0.66197, Recall: 0.68116, F1: 0.67143
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:New best F1: 0.76190 improved from 0.0, saving to /home/gridsan/nchutisilp/projects/jepa/pretrain_models/video_classification_frozen/cf-pres-from-vjepa-16x2x3-fold2/jepa-best.pth.tar
INFO:root:Epoch 2
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.3955e-05, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.1783e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.7164e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0130e-05, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0953e-05, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.8999e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.3322e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.7848e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.4054e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.5751e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1479e-05, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.2421e-05, 9.9991e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.4174e-05, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.1570e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.4780e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.1080e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.4135e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.2315e-05, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.2982e-05, 9.9996e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.9679e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.6251e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.8851e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.0220e-05, 9.9996e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.2856e-05, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 83.333% (loss: 1.820) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9989, 0.0011], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9979, 0.0021], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9978, 0.0022], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9982, 0.0018], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9985, 0.0015], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9984, 0.0016], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9979, 0.0021], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9976, 0.0024], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9980, 0.0020], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9988, 0.0012], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9985, 0.0015], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9979, 0.0021], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9902e-01, 9.7545e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9990, 0.0010], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9977, 0.0023], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9977, 0.0023], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9986, 0.0014], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9970, 0.0030], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9980, 0.0020], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9976, 0.0024], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9980, 0.0020], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9984, 0.0016], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9930e-01, 7.0141e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9985, 0.0015], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0033, 0.9967], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0112, 0.9888], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0054, 0.9946], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0054, 0.9946], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0218, 0.9782], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0039, 0.9961], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0074, 0.9926], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0064, 0.9936], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0111, 0.9889], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0044, 0.9956], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0033, 0.9967], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0048, 0.9952], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0098, 0.9902], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0095, 0.9905], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0059, 0.9941], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0034, 0.9966], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0205, 0.9795], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0038, 0.9962], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0045, 0.9955], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4664, 0.5336], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0052, 0.9948], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0929, 0.9071], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0528, 0.9472], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0562, 0.9438], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0852, 0.9148], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0818, 0.9182], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0663, 0.9337], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1231, 0.8769], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0547, 0.9453], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0969, 0.9031], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2048, 0.7952], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1278, 0.8722], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1739, 0.8261], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0601, 0.9399], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0961, 0.9039], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1087, 0.8913], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0707, 0.9293], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0788, 0.9212], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0925, 0.9075], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0550, 0.9450], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0733, 0.9267], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0756, 0.9244], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2647, 0.7353], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0922, 0.9078], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0781, 0.9219], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9987, 0.0013], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9980, 0.0020], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9988, 0.0012], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9987, 0.0013], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9982, 0.0018], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9981, 0.0019], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9983, 0.0017], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9986, 0.0014], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9988, 0.0012], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 33, Training ones: 69 / 72
outputs torch.Size([24]) tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9985, 0.0015], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9987, 0.0013], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9985, 0.0015], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9985, 0.0015], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9987, 0.0013], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9986, 0.0014], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9984, 0.0016], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9983, 0.0017], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9987, 0.0013], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9986, 0.0014], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9984, 0.0016], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9986, 0.0014], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9986, 0.0014], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9986, 0.0014], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9987, 0.0013], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9985, 0.0015], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9984, 0.0016], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9986, 0.0014], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9985, 0.0015], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9988, 0.0012], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9985, 0.0015], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9985, 0.0015], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9987, 0.0013], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9986, 0.0014], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 37.500% (loss: 4.093) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9986, 0.0014], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9986, 0.0014], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[    2] train: 52.500% test: 43.750%
INFO:root:Accuracy: 0.55238, Precision: 0.65278, Recall: 0.68116, F1: 0.66667
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 3
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9985, 0.0015], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9914e-01, 8.5925e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9987, 0.0013], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9989, 0.0011], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9988, 0.0012], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9986, 0.0014], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9987, 0.0013], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9942e-01, 5.7816e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9986, 0.0014], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9913e-01, 8.7107e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9989, 0.0011], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9989, 0.0011], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9985, 0.0015], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9987, 0.0013], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9988, 0.0012], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9908e-01, 9.2178e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9984, 0.0016], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9927e-01, 7.3075e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9987, 0.0013], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9989, 0.0011], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9990, 0.0010], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9988, 0.0012], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9986, 0.0014], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9986, 0.0014], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 16.667% (loss: 5.609) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9986, 0.0014], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9987, 0.0013], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9986, 0.0014], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9988, 0.0012], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9914e-01, 8.6261e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9907e-01, 9.2900e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9900e-01, 9.9661e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9987, 0.0013], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9986, 0.0014], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9988, 0.0012], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9905e-01, 9.4546e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9988, 0.0012], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9988, 0.0012], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9986, 0.0014], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9986, 0.0014], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9984, 0.0016], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9990, 0.0010], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9988, 0.0012], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9987, 0.0013], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9988, 0.0012], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9989, 0.0011], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9904e-01, 9.5846e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9985, 0.0015], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9985, 0.0015], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8426, 0.1574], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8466, 0.1534], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9430, 0.0570], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7648, 0.2352], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9152, 0.0848], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8341, 0.1659], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7892, 0.2108], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8638, 0.1362], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9212, 0.0788], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8364, 0.1636], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8849, 0.1151], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8669, 0.1331], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8970, 0.1030], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8497, 0.1503], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7974, 0.2026], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8701, 0.1299], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8767, 0.1233], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7931, 0.2069], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7833, 0.2167], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7807, 0.2193], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8388, 0.1612], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7908, 0.2092], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8434, 0.1566], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8401, 0.1599], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0036, 0.9964], device='cuda:0')
Training Output torch.Size([2]) tensor([4.9457e-04, 9.9951e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.9628e-04, 9.9920e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Training Output torch.Size([2]) tensor([8.9694e-04, 9.9910e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0078, 0.9922], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0031, 0.9969], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([7.1106e-04, 9.9929e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.3811e-04, 9.9906e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0030, 0.9970], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Output torch.Size([2]) tensor([9.4916e-04, 9.9905e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([9.3446e-04, 9.9907e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0034, 0.9966], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.5576e-05, 9.9995e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.4700e-05, 9.9993e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.2699e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.1324e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.1360e-04, 9.9979e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.7198e-05, 9.9996e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.0645e-05, 9.9995e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.0038e-05, 9.9993e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.3987e-05, 9.9992e-01], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 72, Training ones: 69 / 33
outputs torch.Size([24]) tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([8.6315e-05, 9.9991e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.2881e-04, 9.9987e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([8.2202e-05, 9.9992e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([8.2524e-05, 9.9992e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.2957e-04, 9.9987e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([8.4316e-05, 9.9992e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([6.2659e-05, 9.9994e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([5.5189e-05, 9.9994e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.4539e-04, 9.9985e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.7425e-05, 9.9990e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([6.8549e-05, 9.9993e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.8381e-05, 9.9990e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0091e-04, 9.9990e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0052e-04, 9.9990e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.2101e-04, 9.9988e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([8.8362e-05, 9.9991e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([6.6052e-05, 9.9993e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([8.5476e-05, 9.9991e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.3328e-05, 9.9991e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.5296e-04, 9.9985e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([8.8017e-05, 9.9991e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([7.9362e-05, 9.9992e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.2291e-04, 9.9988e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.3510e-05, 9.9991e-01], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 62.500% (loss: 3.460) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([1.0868e-04, 9.9989e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0637e-04, 9.9989e-01], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[    3] train: 47.500% test: 56.250%
INFO:root:Accuracy: 0.44762, Precision: 0.66667, Recall: 0.31884, F1: 0.43137
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.761904776096344
INFO:root:Epoch 4
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.2831e-04, 9.9987e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3552e-04, 9.9986e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1937e-04, 9.9988e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.2042e-05, 9.9992e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3526e-04, 9.9986e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.7367e-04, 9.9983e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.1881e-05, 9.9992e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.7749e-04, 9.9952e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.5876e-05, 9.9992e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.3875e-04, 9.9976e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.4983e-05, 9.9990e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0784e-04, 9.9989e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9347e-05, 9.9990e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.3399e-05, 9.9993e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.2871e-04, 9.9977e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.4480e-05, 9.9992e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1040e-04, 9.9989e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.1086e-05, 9.9992e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.3643e-04, 9.9976e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.8307e-04, 9.9982e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.9449e-04, 9.9981e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.7806e-05, 9.9990e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3846e-04, 9.9986e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.5177e-04, 9.9985e-01], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 83.333% (loss: 1.469) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0069, 0.9931], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0063, 0.9937], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0098, 0.9902], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0081, 0.9919], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0084, 0.9916], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0056, 0.9944], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0079, 0.9921], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0133, 0.9867], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0123, 0.9877], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0068, 0.9932], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0074, 0.9926], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0070, 0.9930], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0139, 0.9861], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0064, 0.9936], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0067, 0.9933], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0065, 0.9935], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0061, 0.9939], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0055, 0.9945], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0053, 0.9947], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0056, 0.9944], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0111, 0.9889], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0196, 0.9804], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0061, 0.9939], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8004, 0.1996], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8331, 0.1669], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8101, 0.1899], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8040, 0.1960], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8568, 0.1432], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8087, 0.1913], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8159, 0.1841], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7972, 0.2028], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8383, 0.1617], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8374, 0.1626], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8136, 0.1864], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8061, 0.1939], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7955, 0.2045], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8272, 0.1728], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8706, 0.1294], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8233, 0.1767], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8490, 0.1510], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8258, 0.1742], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8281, 0.1719], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8369, 0.1631], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8386, 0.1614], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8474, 0.1526], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8042, 0.1958], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8125, 0.1875], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9766, 0.0234], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9724, 0.0276], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9805, 0.0195], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9765, 0.0235], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9792, 0.0208], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9772, 0.0228], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9799, 0.0201], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9794, 0.0206], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9775, 0.0225], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9781, 0.0219], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9769, 0.0231], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9779, 0.0221], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9829, 0.0171], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9782, 0.0218], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9827, 0.0173], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9775, 0.0225], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9817, 0.0183], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9788, 0.0212], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9776, 0.0224], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9803, 0.0197], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9777, 0.0223], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9787, 0.0213], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9761, 0.0239], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9802, 0.0198], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9559, 0.0441], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9646, 0.0354], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9601, 0.0399], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9538, 0.0462], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9562, 0.0438], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9526, 0.0474], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9521, 0.0479], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9527, 0.0473], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9495, 0.0505], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 57, Training ones: 69 / 48
outputs torch.Size([24]) tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5881, 0.4119], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6162, 0.3838], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5670, 0.4330], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6053, 0.3947], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6311, 0.3689], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5924, 0.4076], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5627, 0.4373], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5510, 0.4490], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6028, 0.3972], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5953, 0.4047], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5672, 0.4328], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5925, 0.4075], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6145, 0.3855], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5804, 0.4196], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6485, 0.3515], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6087, 0.3913], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5749, 0.4251], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5871, 0.4129], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5834, 0.4166], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5908, 0.4092], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5902, 0.4098], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6251, 0.3749], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5960, 0.4040], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5895, 0.4105], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 37.500% (loss: 0.756) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5943, 0.4057], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5827, 0.4173], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[    4] train: 54.167% test: 43.750%
INFO:root:Accuracy: 0.57143, Precision: 0.75000, Recall: 0.52174, F1: 0.61538
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 5
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5898, 0.4102], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6059, 0.3941], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5689, 0.4311], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6100, 0.3900], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5839, 0.4161], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6205, 0.3795], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6980, 0.3020], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6272, 0.3728], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6218, 0.3782], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6235, 0.3765], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6495, 0.3505], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5762, 0.4238], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6023, 0.3977], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7041, 0.2959], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6277, 0.3723], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5645, 0.4355], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6456, 0.3544], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6378, 0.3622], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5915, 0.4085], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6016, 0.3984], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6428, 0.3572], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6425, 0.3575], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5911, 0.4089], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6286, 0.3714], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 16.667% (loss: 0.881) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0226, 0.9774], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0217, 0.9783], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0397, 0.9603], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0190, 0.9810], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0309, 0.9691], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0421, 0.9579], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0228, 0.9772], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0241, 0.9759], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0307, 0.9693], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0177, 0.9823], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0308, 0.9692], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0365, 0.9635], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0353, 0.9647], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0214, 0.9786], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0297, 0.9703], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0224, 0.9776], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0263, 0.9737], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0243, 0.9757], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0319, 0.9681], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0207, 0.9793], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0238, 0.9762], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0289, 0.9711], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0311, 0.9689], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0243, 0.9757], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0067, 0.9933], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0080, 0.9920], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0082, 0.9918], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0064, 0.9936], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0106, 0.9894], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0100, 0.9900], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0094, 0.9906], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0043, 0.9957], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0087, 0.9913], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0074, 0.9926], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0103, 0.9897], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0068, 0.9932], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0086, 0.9914], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0093, 0.9907], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0066, 0.9934], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0096, 0.9904], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0105, 0.9895], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0054, 0.9946], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0098, 0.9902], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0055, 0.9945], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0093, 0.9907], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0087, 0.9913], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0104, 0.9896], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0171, 0.9829], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0126, 0.9874], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0143, 0.9857], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0126, 0.9874], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0354, 0.9646], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0126, 0.9874], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0169, 0.9831], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0155, 0.9845], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0178, 0.9822], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0172, 0.9828], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0211, 0.9789], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0270, 0.9730], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0258, 0.9742], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0140, 0.9860], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0186, 0.9814], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0193, 0.9807], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0190, 0.9810], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0159, 0.9841], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0114, 0.9886], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0106, 0.9894], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0137, 0.9863], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0313, 0.9687], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0149, 0.9851], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0188, 0.9812], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1579, 0.8421], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1859, 0.8141], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1591, 0.8409], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1749, 0.8251], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1556, 0.8444], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1633, 0.8367], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1227, 0.8773], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1507, 0.8493], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1305, 0.8695], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 24, Training ones: 69 / 81
outputs torch.Size([24]) tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.8492, 0.1508], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8536, 0.1464], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8353, 0.1647], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8613, 0.1387], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8703, 0.1297], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8558, 0.1442], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8440, 0.1560], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8386, 0.1614], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8377, 0.1623], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8514, 0.1486], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8406, 0.1594], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8468, 0.1532], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8612, 0.1388], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8401, 0.1599], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8796, 0.1204], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8605, 0.1395], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8504, 0.1496], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8499, 0.1501], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8458, 0.1542], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8328, 0.1672], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8502, 0.1498], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8724, 0.1276], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8443, 0.1557], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8462, 0.1538], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 37.500% (loss: 1.252) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.8424, 0.1576], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8403, 0.1597], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[    5] train: 52.500% test: 43.750%
INFO:root:Accuracy: 0.50476, Precision: 0.60494, Recall: 0.71014, F1: 0.65333
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 6
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8430, 0.1570], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8163, 0.1837], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8269, 0.1731], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8582, 0.1418], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8290, 0.1710], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8415, 0.1585], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8439, 0.1561], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8698, 0.1302], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8525, 0.1475], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8409, 0.1591], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8386, 0.1614], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8309, 0.1691], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8551, 0.1449], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8345, 0.1655], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8684, 0.1316], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8457, 0.1543], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8640, 0.1360], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8462, 0.1538], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8496, 0.1504], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8625, 0.1375], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8297, 0.1703], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8700, 0.1300], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7957, 0.2043], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8679, 0.1321], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 16.667% (loss: 1.593) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9612, 0.0388], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9365, 0.0635], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9493, 0.0507], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9433, 0.0567], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9574, 0.0426], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9562, 0.0438], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9516, 0.0484], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9519, 0.0481], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9589, 0.0411], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9456, 0.0544], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9382, 0.0618], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9628, 0.0372], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9634, 0.0366], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9448, 0.0552], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9579, 0.0421], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9596, 0.0404], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9534, 0.0466], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9450, 0.0550], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9630, 0.0370], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9546, 0.0454], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9536, 0.0464], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9514, 0.0486], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9384, 0.0616], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9612, 0.0388], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9170, 0.0830], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9373, 0.0627], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9314, 0.0686], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9468, 0.0532], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9371, 0.0629], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9391, 0.0609], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9375, 0.0625], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9202, 0.0798], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9426, 0.0574], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9377, 0.0623], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9263, 0.0737], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9275, 0.0725], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9381, 0.0619], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9365, 0.0635], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9496, 0.0504], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9387, 0.0613], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9319, 0.0681], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9538, 0.0462], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9441, 0.0559], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9523, 0.0477], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9470, 0.0530], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9483, 0.0517], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9132, 0.0868], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9390, 0.0610], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7499, 0.2501], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7503, 0.2497], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6992, 0.3008], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7629, 0.2371], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7665, 0.2335], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7559, 0.2441], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7809, 0.2191], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7594, 0.2406], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7506, 0.2494], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7564, 0.2436], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7417, 0.2583], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7880, 0.2120], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7803, 0.2197], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7506, 0.2494], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7605, 0.2395], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7851, 0.2149], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7943, 0.2057], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7935, 0.2065], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7259, 0.2741], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7667, 0.2333], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7527, 0.2473], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7907, 0.2093], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7298, 0.2702], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7605, 0.2395], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1825, 0.8175], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1879, 0.8121], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1894, 0.8106], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1667, 0.8333], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1805, 0.8195], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1705, 0.8295], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1910, 0.8090], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1864, 0.8136], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1676, 0.8324], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 96, Training ones: 69 / 9
outputs torch.Size([24]) tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0659, 0.9341], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0720, 0.9280], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0577, 0.9423], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0727, 0.9273], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0801, 0.9199], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0627, 0.9373], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0570, 0.9430], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0541, 0.9459], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0687, 0.9313], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0696, 0.9304], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0598, 0.9402], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0641, 0.9359], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0717, 0.9283], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0639, 0.9361], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0838, 0.9162], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0731, 0.9269], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0586, 0.9414], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0628, 0.9372], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0613, 0.9387], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0693, 0.9307], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0648, 0.9352], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0719, 0.9281], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0678, 0.9322], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0650, 0.9350], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 62.500% (loss: 1.052) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0669, 0.9331], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0668, 0.9332], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[    6] train: 40.833% test: 56.250%
INFO:root:Accuracy: 0.37143, Precision: 0.66667, Recall: 0.08696, F1: 0.15385
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.761904776096344
INFO:root:Epoch 7
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0742, 0.9258], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0999, 0.9001], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0655, 0.9345], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0903, 0.9097], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0552, 0.9448], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0531, 0.9469], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0733, 0.9267], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0939, 0.9061], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0636, 0.9364], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0609, 0.9391], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0810, 0.9190], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0821, 0.9179], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0604, 0.9396], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0730, 0.9270], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1215, 0.8785], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0786, 0.9214], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0897, 0.9103], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0737, 0.9263], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0873, 0.9127], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0688, 0.9312], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0662, 0.9338], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0904, 0.9096], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0675, 0.9325], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0867, 0.9133], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 83.333% (loss: 0.470) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1184, 0.8816], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1028, 0.8972], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1137, 0.8863], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0873, 0.9127], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1228, 0.8772], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1223, 0.8777], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1221, 0.8779], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0906, 0.9094], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1233, 0.8767], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0917, 0.9083], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1155, 0.8845], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1185, 0.8815], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1075, 0.8925], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1049, 0.8951], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1031, 0.8969], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1035, 0.8965], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1023, 0.8977], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1154, 0.8846], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0986, 0.9014], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1041, 0.8959], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1212, 0.8788], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1022, 0.8978], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0927, 0.9073], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0989, 0.9011], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3610, 0.6390], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4189, 0.5811], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3376, 0.6624], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3696, 0.6304], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2943, 0.7057], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3551, 0.6449], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2823, 0.7177], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3439, 0.6561], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2995, 0.7005], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3617, 0.6383], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3718, 0.6282], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4090, 0.5910], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3548, 0.6452], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3651, 0.6349], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3967, 0.6033], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3671, 0.6329], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3743, 0.6257], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4073, 0.5927], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2697, 0.7303], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4050, 0.5950], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3543, 0.6457], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3967, 0.6033], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3309, 0.6691], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3012, 0.6988], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8526, 0.1474], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8090, 0.1910], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8596, 0.1404], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8571, 0.1429], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8769, 0.1231], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8535, 0.1465], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8767, 0.1233], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8528, 0.1472], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8153, 0.1847], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8408, 0.1592], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8499, 0.1501], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8766, 0.1234], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8708, 0.1292], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8551, 0.1449], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8708, 0.1292], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8136, 0.1864], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8208, 0.1792], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8708, 0.1292], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8641, 0.1359], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8284, 0.1716], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7951, 0.2049], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8427, 0.1573], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8591, 0.1409], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8589, 0.1411], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9435, 0.0565], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9437, 0.0563], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9447, 0.0553], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9210, 0.0790], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9010, 0.0990], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9413, 0.0587], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9326, 0.0674], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9235, 0.0765], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9236, 0.0764], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 33, Training ones: 69 / 72
outputs torch.Size([24]) tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9178, 0.0822], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9133, 0.0867], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9073, 0.0927], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9258, 0.0742], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9261, 0.0739], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9172, 0.0828], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9162, 0.0838], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9152, 0.0848], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9035, 0.0965], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9171, 0.0829], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9135, 0.0865], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9116, 0.0884], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9200, 0.0800], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9086, 0.0914], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9317, 0.0683], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9213, 0.0787], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9175, 0.0825], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9140, 0.0860], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9117, 0.0883], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8993, 0.1007], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9149, 0.0851], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9280, 0.0720], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9067, 0.0933], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9112, 0.0888], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 37.500% (loss: 1.581) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9097, 0.0903], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9109, 0.0891], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[    7] train: 52.500% test: 43.750%
INFO:root:Accuracy: 0.55238, Precision: 0.65278, Recall: 0.68116, F1: 0.66667
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 8
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9127, 0.0873], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9111, 0.0889], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9157, 0.0843], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9103, 0.0897], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8881, 0.1119], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9005, 0.0995], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9281, 0.0719], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9150, 0.0850], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9140, 0.0860], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9112, 0.0888], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9280, 0.0720], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8936, 0.1064], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9177, 0.0823], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9175, 0.0825], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9166, 0.0834], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9144, 0.0856], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9209, 0.0791], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9133, 0.0867], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9128, 0.0872], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9166, 0.0834], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8851, 0.1149], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9229, 0.0771], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9068, 0.0932], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9236, 0.0764], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 16.667% (loss: 2.062) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7145, 0.2855], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7362, 0.2638], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7261, 0.2739], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7386, 0.2614], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7077, 0.2923], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7640, 0.2360], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7405, 0.2595], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7143, 0.2857], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7519, 0.2481], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7153, 0.2847], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6911, 0.3089], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7529, 0.2471], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6950, 0.3050], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7054, 0.2946], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6818, 0.3182], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6923, 0.3077], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7098, 0.2902], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7114, 0.2886], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7605, 0.2395], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7289, 0.2711], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7055, 0.2945], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7501, 0.2499], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7271, 0.2729], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7105, 0.2895], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2601, 0.7399], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3504, 0.6496], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2580, 0.7420], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3390, 0.6610], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2624, 0.7376], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3120, 0.6880], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2708, 0.7292], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2588, 0.7412], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2497, 0.7503], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2675, 0.7325], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2653, 0.7347], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2570, 0.7430], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2614, 0.7386], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2742, 0.7258], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2763, 0.7237], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2412, 0.7588], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2798, 0.7202], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3395, 0.6605], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2706, 0.7294], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3021, 0.6979], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2848, 0.7153], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2620, 0.7380], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2583, 0.7417], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2954, 0.7046], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1558, 0.8442], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1274, 0.8726], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1787, 0.8213], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1370, 0.8630], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1819, 0.8181], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1601, 0.8399], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2245, 0.7755], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2197, 0.7803], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1657, 0.8343], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2526, 0.7474], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1931, 0.8069], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1647, 0.8353], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2216, 0.7784], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1659, 0.8341], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1724, 0.8276], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1677, 0.8323], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1955, 0.8045], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1833, 0.8167], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1489, 0.8511], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1291, 0.8709], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1858, 0.8142], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1869, 0.8131], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1679, 0.8321], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2030, 0.7970], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2743, 0.7257], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2719, 0.7281], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2656, 0.7344], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2302, 0.7698], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2429, 0.7571], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2655, 0.7345], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2605, 0.7395], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3223, 0.6777], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3202, 0.6798], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 48, Training ones: 69 / 57
outputs torch.Size([24]) tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.6126, 0.3874], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6154, 0.3846], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5916, 0.4084], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6505, 0.3495], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6602, 0.3398], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5894, 0.4106], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5816, 0.4184], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5816, 0.4184], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6110, 0.3890], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6233, 0.3767], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6145, 0.3855], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5860, 0.4140], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6318, 0.3682], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5906, 0.4094], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6767, 0.3233], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6392, 0.3608], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5822, 0.4178], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6108, 0.3892], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5706, 0.4294], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5928, 0.4072], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6031, 0.3969], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6604, 0.3396], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5932, 0.4068], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5991, 0.4009], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 37.500% (loss: 0.765) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.6145, 0.3855], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6063, 0.3937], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 26, Training ones: 16 / 0
INFO:root:[    8] train: 45.833% test: 43.750%
INFO:root:Accuracy: 0.42857, Precision: 0.57895, Recall: 0.47826, F1: 0.52381
INFO:root:Val Accuracy: 0.38462, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.761904776096344
INFO:root:Epoch 9
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6166, 0.3834], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6501, 0.3499], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5765, 0.4235], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6033, 0.3967], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5906, 0.4094], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6637, 0.3363], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6377, 0.3623], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6825, 0.3175], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4877, 0.5123], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5893, 0.4107], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6701, 0.3299], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5648, 0.4352], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5084, 0.4916], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6427, 0.3573], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6404, 0.3596], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6101, 0.3899], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6289, 0.3711], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6081, 0.3919], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5897, 0.4103], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6064, 0.3936], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6314, 0.3686], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6281, 0.3719], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5916, 0.4084], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6107, 0.3893], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 20.833% (loss: 0.856) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6764, 0.3236], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6195, 0.3805], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6111, 0.3889], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6149, 0.3851], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6059, 0.3941], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6419, 0.3581], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5051, 0.4949], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6645, 0.3355], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6546, 0.3454], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6385, 0.3615], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6427, 0.3573], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5865, 0.4135], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6739, 0.3261], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6395, 0.3605], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5813, 0.4187], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6174, 0.3826], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6173, 0.3827], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6699, 0.3301], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6432, 0.3568], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7214, 0.2786], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6622, 0.3378], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6277, 0.3723], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6266, 0.3734], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5859, 0.4141], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3003, 0.6997], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4389, 0.5611], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3621, 0.6379], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4068, 0.5932], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3746, 0.6254], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3522, 0.6478], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3628, 0.6372], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3567, 0.6433], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3368, 0.6632], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4023, 0.5977], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3616, 0.6384], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3785, 0.6215], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3517, 0.6483], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3405, 0.6595], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4243, 0.5757], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3559, 0.6441], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3384, 0.6616], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4104, 0.5896], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3206, 0.6794], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4108, 0.5892], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3256, 0.6744], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5400, 0.4600], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3715, 0.6285], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3375, 0.6625], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3773, 0.6227], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3593, 0.6407], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3514, 0.6486], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4594, 0.5406], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4701, 0.5299], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3943, 0.6057], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4725, 0.5275], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4715, 0.5285], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3806, 0.6194], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4651, 0.5349], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3777, 0.6223], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5198, 0.4802], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5078, 0.4922], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4744, 0.5256], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4536, 0.5464], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6400, 0.3600], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4641, 0.5359], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5834, 0.4166], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3840, 0.6160], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3908, 0.6092], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3102, 0.6898], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4819, 0.5181], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5402, 0.4598], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4412, 0.5588], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2718, 0.7282], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3012, 0.6988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3666, 0.6334], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1403, 0.8597], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1685, 0.8315], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2015, 0.7985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1842, 0.8158], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2716, 0.7284], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2126, 0.7874], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 53, Training ones: 69 / 52
outputs torch.Size([24]) tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2325, 0.7675], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2360, 0.7640], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2150, 0.7850], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2968, 0.7032], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3076, 0.6924], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2173, 0.7827], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2061, 0.7939], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2075, 0.7925], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2305, 0.7695], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2518, 0.7482], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2300, 0.7700], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2197, 0.7803], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2649, 0.7351], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2130, 0.7870], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3370, 0.6630], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2919, 0.7081], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2058, 0.7942], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2354, 0.7646], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2108, 0.7892], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2396, 0.7604], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2238, 0.7762], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3091, 0.6909], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2231, 0.7769], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2182, 0.7818], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 62.500% (loss: 0.691) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2287, 0.7713], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2309, 0.7691], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[    9] train: 45.000% test: 56.250%
INFO:root:Accuracy: 0.41905, Precision: 0.57692, Recall: 0.43478, F1: 0.49587
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.761904776096344
INFO:root:Epoch 10
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1988, 0.8012], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2693, 0.7307], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2251, 0.7749], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2620, 0.7380], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2282, 0.7718], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2223, 0.7777], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3923, 0.6077], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3248, 0.6752], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2696, 0.7304], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1966, 0.8034], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2883, 0.7117], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2956, 0.7044], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3035, 0.6965], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2834, 0.7166], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2767, 0.7233], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2288, 0.7712], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1962, 0.8038], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2241, 0.7759], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2244, 0.7756], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2276, 0.7724], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2115, 0.7885], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3011, 0.6989], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2119, 0.7881], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2745, 0.7255], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 83.333% (loss: 0.486) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1902, 0.8098], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0960, 0.9040], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0994, 0.9006], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1118, 0.8882], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1906, 0.8094], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1499, 0.8501], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0789, 0.9211], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1158, 0.8842], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1577, 0.8423], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1702, 0.8298], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1297, 0.8703], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1199, 0.8801], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1961, 0.8039], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1051, 0.8949], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0984, 0.9016], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1465, 0.8535], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1165, 0.8835], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1550, 0.8450], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1644, 0.8356], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1476, 0.8524], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1513, 0.8487], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0959, 0.9041], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1339, 0.8661], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1001, 0.8999], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1702, 0.8298], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2458, 0.7542], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1545, 0.8455], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2258, 0.7742], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1233, 0.8767], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1348, 0.8652], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1605, 0.8395], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1586, 0.8414], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1517, 0.8483], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1659, 0.8341], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1507, 0.8493], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1676, 0.8324], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1536, 0.8464], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2469, 0.7531], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2053, 0.7947], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1454, 0.8546], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1709, 0.8291], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1937, 0.8063], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1716, 0.8284], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1806, 0.8194], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1671, 0.8329], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2132, 0.7868], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1635, 0.8365], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1847, 0.8153], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3195, 0.6805], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2617, 0.7383], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3148, 0.6852], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2484, 0.7516], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4493, 0.5507], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3419, 0.6581], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3706, 0.6294], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2646, 0.7354], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2734, 0.7266], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4163, 0.5837], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3498, 0.6502], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4231, 0.5769], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4309, 0.5691], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3344, 0.6656], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2978, 0.7022], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4020, 0.5980], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4336, 0.5664], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4267, 0.5733], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3516, 0.6484], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3617, 0.6383], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3587, 0.6413], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4579, 0.5421], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3539, 0.6461], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3343, 0.6657], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5034, 0.4966], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4926, 0.5074], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4504, 0.5496], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3742, 0.6258], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4196, 0.5804], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3746, 0.6254], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3297, 0.6703], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3468, 0.6532], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3602, 0.6398], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 1, Training ones: 69 / 104
outputs torch.Size([24]) tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3029, 0.6971], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2803, 0.7197], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2528, 0.7472], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3447, 0.6553], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3482, 0.6518], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2678, 0.7322], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2755, 0.7245], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2705, 0.7295], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2755, 0.7245], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3117, 0.6883], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2876, 0.7124], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2569, 0.7431], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3051, 0.6949], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2588, 0.7412], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3640, 0.6360], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3320, 0.6680], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2622, 0.7378], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2781, 0.7219], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2508, 0.7492], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2620, 0.7380], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2804, 0.7196], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3220, 0.6780], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2541, 0.7459], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2523, 0.7477], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 62.500% (loss: 0.669) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2655, 0.7345], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2976, 0.7024], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[   10] train: 68.056% test: 56.250%
INFO:root:Accuracy: 0.66667, Precision: 0.66346, Recall: 1.00000, F1: 0.79769
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.761904776096344
INFO:root:Epoch 11
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2377, 0.7623], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1802, 0.8198], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2625, 0.7375], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1797, 0.8203], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2607, 0.7393], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2160, 0.7840], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3224, 0.6776], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3536, 0.6464], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1790, 0.8210], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2819, 0.7181], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2249, 0.7751], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2588, 0.7412], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2835, 0.7165], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2921, 0.7079], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3067, 0.6933], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3058, 0.6942], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3248, 0.6752], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2474, 0.7526], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2778, 0.7222], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2487, 0.7513], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3072, 0.6928], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3353, 0.6647], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2069, 0.7931], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2508, 0.7492], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 83.333% (loss: 0.487) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1529, 0.8471], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0756, 0.9244], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0873, 0.9127], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0413, 0.9587], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1385, 0.8615], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1039, 0.8961], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1097, 0.8903], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0896, 0.9104], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1379, 0.8621], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0366, 0.9634], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0970, 0.9030], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1352, 0.8648], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0879, 0.9121], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0519, 0.9481], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0926, 0.9074], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0986, 0.9014], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0784, 0.9216], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0784, 0.9216], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1179, 0.8821], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0862, 0.9138], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1034, 0.8966], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0950, 0.9050], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0742, 0.9258], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0806, 0.9194], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0776, 0.9224], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1147, 0.8853], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0496, 0.9504], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1014, 0.8986], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0396, 0.9604], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0677, 0.9323], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0841, 0.9159], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0799, 0.9201], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0586, 0.9414], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0770, 0.9230], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0853, 0.9147], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0715, 0.9285], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0714, 0.9286], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1387, 0.8613], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0568, 0.9432], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0778, 0.9222], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0876, 0.9124], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0453, 0.9547], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0535, 0.9465], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0669, 0.9331], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0527, 0.9473], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0702, 0.9298], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0436, 0.9564], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0295, 0.9705], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1713, 0.8287], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1331, 0.8669], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1487, 0.8513], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1105, 0.8895], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1892, 0.8108], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1073, 0.8927], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1769, 0.8231], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1651, 0.8349], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0708, 0.9292], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1874, 0.8126], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0907, 0.9093], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2180, 0.7820], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1995, 0.8005], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1642, 0.8358], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1727, 0.8273], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0817, 0.9183], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2209, 0.7791], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1948, 0.8052], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1433, 0.8567], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0614, 0.9386], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1349, 0.8651], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1515, 0.8485], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1743, 0.8257], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1553, 0.8447], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3421, 0.6579], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4618, 0.5382], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3586, 0.6414], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3298, 0.6702], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2926, 0.7074], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3252, 0.6748], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3201, 0.6799], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2836, 0.7164], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4551, 0.5449], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 0, Training ones: 69 / 105
outputs torch.Size([24]) tensor([0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5153, 0.4847], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4587, 0.5413], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5390, 0.4610], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5748, 0.4252], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5456, 0.4544], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4044, 0.5956], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4915, 0.5085], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5182, 0.4818], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5568, 0.4432], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5251, 0.4749], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5670, 0.4330], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4089, 0.5911], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4904, 0.5096], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4613, 0.5387], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5611, 0.4389], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5686, 0.4314], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4555, 0.5445], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4790, 0.5210], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4453, 0.5547], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5328, 0.4672], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4766, 0.5234], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4983, 0.5017], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4285, 0.5715], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4063, 0.5937], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 58.333% (loss: 0.662) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4654, 0.5346], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5534, 0.4466], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 12, Training ones: 16 / 14
INFO:root:[   11] train: 65.833% test: 79.167%
INFO:root:Accuracy: 0.65714, Precision: 0.65714, Recall: 1.00000, F1: 0.79310
INFO:root:Val Accuracy: 0.61538, Precision: 0.71429, Recall: 0.62500, F1: 0.66667
INFO:root:F1: 0.66667 did not improve from 0.761904776096344
INFO:root:Epoch 12
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5678, 0.4322], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6106, 0.3894], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6606, 0.3394], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6291, 0.3709], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4949, 0.5051], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4990, 0.5010], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4602, 0.5398], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5411, 0.4589], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4702, 0.5298], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3925, 0.6075], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5153, 0.4847], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5429, 0.4571], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2624, 0.7376], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3078, 0.6922], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5685, 0.4315], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5480, 0.4520], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4775, 0.5225], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4713, 0.5287], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4181, 0.5819], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4398, 0.5602], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6229, 0.3771], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5649, 0.4351], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4289, 0.5711], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6071, 0.3929], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 58.333% (loss: 0.674) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3289, 0.6711], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3690, 0.6310], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1843, 0.8157], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4047, 0.5953], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4168, 0.5832], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4444, 0.5556], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1971, 0.8029], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2707, 0.7293], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4629, 0.5371], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1822, 0.8178], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1966, 0.8034], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2476, 0.7524], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3023, 0.6977], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1648, 0.8352], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2408, 0.7592], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4356, 0.5644], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2853, 0.7147], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2153, 0.7847], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2781, 0.7219], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4456, 0.5544], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3277, 0.6723], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3510, 0.6490], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3817, 0.6183], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2203, 0.7797], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1246, 0.8754], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3228, 0.6772], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3590, 0.6410], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5428, 0.4572], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3842, 0.6158], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1596, 0.8404], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4342, 0.5658], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3403, 0.6597], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2392, 0.7608], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3073, 0.6927], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2588, 0.7412], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4284, 0.5716], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3091, 0.6909], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5816, 0.4184], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2157, 0.7843], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6457, 0.3543], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1809, 0.8191], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4657, 0.5343], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1388, 0.8612], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3673, 0.6327], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3323, 0.6677], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6027, 0.3973], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4695, 0.5305], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2279, 0.7721], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7039, 0.2961], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5525, 0.4475], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1291, 0.8709], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8316, 0.1684], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8480, 0.1520], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5410, 0.4590], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8746, 0.1254], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5828, 0.4172], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7447, 0.2553], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8981, 0.1019], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2976, 0.7024], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7305, 0.2695], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9062, 0.0938], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8287, 0.1713], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3184, 0.6816], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8237, 0.1763], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7316, 0.2684], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8201, 0.1799], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3319, 0.6681], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8794, 0.1206], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5954, 0.4046], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8456, 0.1544], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8820, 0.1180], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8626, 0.1374], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8241, 0.1759], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7914, 0.2086], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6164, 0.3836], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5001, 0.4999], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2760, 0.7240], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5782, 0.4218], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6227, 0.3773], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5095, 0.4905], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8240, 0.1760], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 44, Training ones: 69 / 61
outputs torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4170, 0.5830], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3390, 0.6610], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4294, 0.5706], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5366, 0.4634], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5158, 0.4842], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2558, 0.7442], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3478, 0.6522], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3942, 0.6058], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4597, 0.5403], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4513, 0.5487], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4447, 0.5553], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2394, 0.7606], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3912, 0.6088], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2948, 0.7052], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4794, 0.5206], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5142, 0.4858], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3068, 0.6932], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3537, 0.6463], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2774, 0.7226], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3881, 0.6119], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3525, 0.6475], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4379, 0.5621], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2802, 0.7198], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2401, 0.7599], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 66.667% (loss: 0.618) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3196, 0.6804], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4549, 0.5451], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 3, Training ones: 16 / 23
INFO:root:[   12] train: 51.389% test: 58.333%
INFO:root:Accuracy: 0.52381, Precision: 0.65574, Recall: 0.57971, F1: 0.61538
INFO:root:Val Accuracy: 0.65385, Precision: 0.65217, Recall: 0.93750, F1: 0.76923
INFO:root:New best F1: 0.76923 improved from 0.761904776096344, saving to /home/gridsan/nchutisilp/projects/jepa/pretrain_models/video_classification_frozen/cf-pres-from-vjepa-16x2x3-fold2/jepa-best.pth.tar
INFO:root:Epoch 13
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3734, 0.6266], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7197, 0.2803], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7229, 0.2771], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2856, 0.7144], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4936, 0.5064], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5104, 0.4896], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3305, 0.6695], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6822, 0.3178], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0599, 0.9401], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1066, 0.8934], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8073, 0.1927], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3375, 0.6625], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2068, 0.7932], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1154, 0.8846], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8314, 0.1686], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2557, 0.7443], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7706, 0.2294], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6063, 0.3937], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3201, 0.6799], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2428, 0.7572], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4818, 0.5182], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7199, 0.2801], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3006, 0.6994], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4708, 0.5292], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 70.833% (loss: 0.586) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0722, 0.9278], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0502, 0.9498], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0856, 0.9144], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1147, 0.8853], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3231, 0.6769], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0875, 0.9125], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1118, 0.8882], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0904, 0.9096], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1920, 0.8080], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1470, 0.8530], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1735, 0.8265], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3367, 0.6633], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2625, 0.7375], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0459, 0.9541], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1099, 0.8901], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2037, 0.7963], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3474, 0.6526], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0161, 0.9839], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1074, 0.8926], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1403, 0.8597], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0935, 0.9065], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0537, 0.9463], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1418, 0.8582], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0679, 0.9321], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0718, 0.9282], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1839, 0.8161], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0452, 0.9548], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1236, 0.8764], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1095, 0.8905], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0314, 0.9686], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0472, 0.9528], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1438, 0.8562], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0346, 0.9654], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0856, 0.9144], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0687, 0.9313], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0319, 0.9681], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0163, 0.9837], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0218, 0.9782], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0489, 0.9511], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1097, 0.8903], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0499, 0.9501], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0862, 0.9138], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1031, 0.8969], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0339, 0.9661], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0837, 0.9163], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0543, 0.9457], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0341, 0.9659], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0096, 0.9904], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0198, 0.9802], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0904, 0.9096], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0561, 0.9439], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0141, 0.9859], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0879, 0.9121], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0873, 0.9127], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0636, 0.9364], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1575, 0.8425], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0787, 0.9213], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2301, 0.7699], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0715, 0.9285], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0483, 0.9517], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1370, 0.8630], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0678, 0.9322], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0823, 0.9177], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2008, 0.7992], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0615, 0.9385], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0501, 0.9499], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0129, 0.9871], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0128, 0.9872], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0319, 0.9681], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0532, 0.9468], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0993, 0.9007], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1292, 0.8708], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1487, 0.8513], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1107, 0.8893], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1955, 0.8045], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0597, 0.9403], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2190, 0.7810], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2761, 0.7239], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0468, 0.9532], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0596, 0.9404], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1010, 0.8990], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 9, Training ones: 69 / 96
outputs torch.Size([24]) tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3425, 0.6575], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2829, 0.7171], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3154, 0.6846], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4499, 0.5501], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4564, 0.5436], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2110, 0.7890], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2520, 0.7480], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2801, 0.7199], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3748, 0.6252], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3806, 0.6194], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3310, 0.6690], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1895, 0.8105], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3140, 0.6860], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2320, 0.7680], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4957, 0.5043], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4158, 0.5842], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2341, 0.7659], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2687, 0.7313], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1985, 0.8015], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3021, 0.6979], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2819, 0.7181], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3453, 0.6547], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2200, 0.7800], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1973, 0.8027], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 62.500% (loss: 0.640) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2613, 0.7387], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3498, 0.6502], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[   13] train: 63.333% test: 56.250%
INFO:root:Accuracy: 0.62857, Precision: 0.65625, Recall: 0.91304, F1: 0.76364
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.7692307829856873
INFO:root:Epoch 14
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2232, 0.7768], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4721, 0.5279], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2567, 0.7433], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3106, 0.6894], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0707, 0.9293], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0825, 0.9175], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4109, 0.5891], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3505, 0.6495], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3004, 0.6996], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2745, 0.7255], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2356, 0.7644], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0783, 0.9217], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5418, 0.4582], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4944, 0.5056], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4153, 0.5847], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4841, 0.5159], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3193, 0.6807], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0651, 0.9349], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2298, 0.7702], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2489, 0.7511], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4639, 0.5361], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5934, 0.4066], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0614, 0.9386], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6061, 0.3939], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 70.833% (loss: 0.548) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3292, 0.6708], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3936, 0.6064], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2952, 0.7048], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3841, 0.6159], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7996, 0.2004], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4655, 0.5345], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1106, 0.8894], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6207, 0.3793], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6017, 0.3983], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6415, 0.3585], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2016, 0.7984], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6574, 0.3426], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5001, 0.4999], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3567, 0.6433], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1953, 0.8047], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3041, 0.6959], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5914, 0.4086], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4050, 0.5950], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4902, 0.5098], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3575, 0.6425], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4050, 0.5950], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4448, 0.5552], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3135, 0.6865], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4237, 0.5763], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2433, 0.7567], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5429, 0.4571], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3647, 0.6353], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6879, 0.3121], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3862, 0.6138], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1245, 0.8755], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6001, 0.3999], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6856, 0.3144], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0875, 0.9125], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3545, 0.6455], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1259, 0.8741], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4166, 0.5834], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5032, 0.4968], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4960, 0.5040], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5060, 0.4940], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1878, 0.8122], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6252, 0.3748], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2382, 0.7618], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4040, 0.5960], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3806, 0.6194], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2623, 0.7377], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4018, 0.5982], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1639, 0.8361], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2620, 0.7380], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3834, 0.6166], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4838, 0.5162], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4328, 0.5672], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5054, 0.4946], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6837, 0.3163], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5710, 0.4290], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8434, 0.1566], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7822, 0.2178], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6697, 0.3303], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8526, 0.1474], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5496, 0.4504], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5436, 0.4564], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6336, 0.3664], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5389, 0.4611], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7540, 0.2460], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5340, 0.4660], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7052, 0.2948], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7439, 0.2561], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6099, 0.3901], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5307, 0.4693], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4039, 0.5961], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6042, 0.3958], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5539, 0.4461], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6744, 0.3256], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5126, 0.4874], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7011, 0.2989], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6132, 0.3868], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5694, 0.4306], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5733, 0.4267], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3547, 0.6453], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4683, 0.5317], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2189, 0.7811], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7252, 0.2748], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 43, Training ones: 69 / 62
outputs torch.Size([24]) tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3550, 0.6450], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3021, 0.6979], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2726, 0.7274], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4372, 0.5628], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4563, 0.5437], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2427, 0.7573], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2521, 0.7479], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2572, 0.7428], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3620, 0.6380], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3911, 0.6089], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3007, 0.6993], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2154, 0.7846], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3240, 0.6760], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2488, 0.7512], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4639, 0.5361], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4005, 0.5995], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2446, 0.7554], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2576, 0.7424], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2038, 0.7962], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2839, 0.7161], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2931, 0.7069], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3296, 0.6704], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2409, 0.7591], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2355, 0.7645], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 62.500% (loss: 0.648) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2901, 0.7099], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3275, 0.6725], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[   14] train: 60.000% test: 56.250%
INFO:root:Accuracy: 0.59048, Precision: 0.70968, Recall: 0.63768, F1: 0.67176
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.7692307829856873
INFO:root:Epoch 15
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1910, 0.8090], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5412, 0.4588], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2516, 0.7484], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2029, 0.7971], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1562, 0.8438], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3051, 0.6949], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4051, 0.5949], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4266, 0.5734], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2577, 0.7423], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1162, 0.8838], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4576, 0.5424], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3228, 0.6772], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2827, 0.7173], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3586, 0.6414], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3936, 0.6064], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4594, 0.5406], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2232, 0.7768], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4230, 0.5770], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2776, 0.7224], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2614, 0.7386], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5495, 0.4505], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5115, 0.4885], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1963, 0.8037], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5211, 0.4789], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 83.333% (loss: 0.446) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1115, 0.8885], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1138, 0.8862], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0743, 0.9257], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1039, 0.8961], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2059, 0.7941], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0848, 0.9152], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0489, 0.9511], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1073, 0.8927], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3453, 0.6547], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1627, 0.8373], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0550, 0.9450], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1824, 0.8176], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1676, 0.8324], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0574, 0.9426], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0435, 0.9565], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0960, 0.9040], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0979, 0.9021], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0852, 0.9148], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1134, 0.8866], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1134, 0.8866], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0963, 0.9037], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1728, 0.8272], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0597, 0.9403], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0802, 0.9198], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0869, 0.9131], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0928, 0.9072], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0377, 0.9623], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0930, 0.9070], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0933, 0.9067], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0489, 0.9511], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0528, 0.9472], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0441, 0.9559], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0229, 0.9771], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0388, 0.9612], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0923, 0.9077], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0570, 0.9430], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0413, 0.9587], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1284, 0.8716], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0648, 0.9352], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0910, 0.9090], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0490, 0.9510], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1881, 0.8119], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0470, 0.9530], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0475, 0.9525], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0470, 0.9530], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0874, 0.9126], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0632, 0.9368], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0458, 0.9542], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0383, 0.9617], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0424, 0.9576], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0500, 0.9500], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0510, 0.9490], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2471, 0.7529], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0667, 0.9333], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1409, 0.8591], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0596, 0.9404], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0615, 0.9385], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1963, 0.8037], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0832, 0.9168], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1312, 0.8688], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0716, 0.9284], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0448, 0.9552], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1610, 0.8390], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2138, 0.7862], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1633, 0.8367], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1858, 0.8142], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0848, 0.9152], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0582, 0.9418], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0364, 0.9636], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1484, 0.8516], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0454, 0.9546], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2138, 0.7862], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2038, 0.7962], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1856, 0.8144], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1517, 0.8483], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0460, 0.9540], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1729, 0.8271], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1210, 0.8790], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1492, 0.8508], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1245, 0.8755], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1754, 0.8246], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 4, Training ones: 69 / 101
outputs torch.Size([24]) tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3871, 0.6129], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3438, 0.6562], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3003, 0.6997], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4594, 0.5406], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4789, 0.5211], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2893, 0.7107], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2974, 0.7026], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3004, 0.6996], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3844, 0.6156], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4156, 0.5844], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3339, 0.6661], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2817, 0.7183], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3641, 0.6359], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2988, 0.7012], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4148, 0.5852], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4379, 0.5621], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2961, 0.7039], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2873, 0.7127], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2576, 0.7424], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3238, 0.6762], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3321, 0.6679], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3649, 0.6351], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2921, 0.7079], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2973, 0.7027], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 62.500% (loss: 0.639) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3404, 0.6596], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3503, 0.6497], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[   15] train: 65.833% test: 56.250%
INFO:root:Accuracy: 0.65714, Precision: 0.66337, Recall: 0.97101, F1: 0.78824
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.7692307829856873
INFO:root:Epoch 16
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2496, 0.7504], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5342, 0.4658], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4134, 0.5866], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2887, 0.7113], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2640, 0.7360], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3929, 0.6071], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3851, 0.6149], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5548, 0.4452], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3288, 0.6712], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3020, 0.6980], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4477, 0.5523], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4358, 0.5642], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3080, 0.6920], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4272, 0.5728], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3940, 0.6060], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1557, 0.8443], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3558, 0.6442], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3135, 0.6865], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2855, 0.7145], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0925, 0.9075], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3625, 0.6375], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4553, 0.5447], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2834, 0.7166], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4760, 0.5240], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 83.333% (loss: 0.520) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3216, 0.6784], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4704, 0.5296], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4768, 0.5232], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3928, 0.6072], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3376, 0.6624], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5250, 0.4750], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5479, 0.4521], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4272, 0.5728], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3888, 0.6112], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1922, 0.8078], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3455, 0.6545], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5312, 0.4688], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6241, 0.3759], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4106, 0.5894], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3036, 0.6964], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4762, 0.5238], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4929, 0.5071], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2789, 0.7211], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4841, 0.5159], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4615, 0.5385], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4795, 0.5205], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4593, 0.5407], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2922, 0.7078], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4063, 0.5937], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4441, 0.5559], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5769, 0.4231], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3585, 0.6415], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4670, 0.5330], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4188, 0.5812], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3690, 0.6310], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4238, 0.5762], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4908, 0.5092], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3511, 0.6489], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4300, 0.5700], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4367, 0.5633], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5083, 0.4917], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3747, 0.6253], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5345, 0.4655], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5085, 0.4915], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3646, 0.6354], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5794, 0.4206], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3855, 0.6145], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3414, 0.6586], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5652, 0.4348], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3274, 0.6726], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4119, 0.5881], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4333, 0.5667], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2025, 0.7975], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5425, 0.4575], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4625, 0.5375], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2293, 0.7707], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3280, 0.6720], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7513, 0.2487], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6791, 0.3209], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6049, 0.3951], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7180, 0.2820], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5390, 0.4610], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7736, 0.2264], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4167, 0.5833], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5710, 0.4290], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7850, 0.2150], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6054, 0.3946], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5968, 0.4032], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6977, 0.3023], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6272, 0.3728], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5781, 0.4219], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3703, 0.6297], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5515, 0.4485], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3004, 0.6996], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6110, 0.3890], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3083, 0.6917], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4862, 0.5138], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6147, 0.3853], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6246, 0.3754], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5111, 0.4889], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3847, 0.6153], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5114, 0.4886], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3490, 0.6510], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3857, 0.6143], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4257, 0.5743], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7257, 0.2743], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 33, Training ones: 69 / 72
outputs torch.Size([24]) tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3510, 0.6490], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3120, 0.6880], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2727, 0.7273], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4272, 0.5728], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4467, 0.5533], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2575, 0.7425], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2700, 0.7300], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2735, 0.7265], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3516, 0.6484], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3794, 0.6206], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3052, 0.6948], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2609, 0.7391], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3331, 0.6669], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2741, 0.7259], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4342, 0.5658], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4106, 0.5894], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2676, 0.7324], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2565, 0.7435], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2344, 0.7656], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3016, 0.6984], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2992, 0.7008], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3332, 0.6668], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2669, 0.7331], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2761, 0.7239], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 62.500% (loss: 0.649) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3130, 0.6870], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3154, 0.6846], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[   16] train: 69.722% test: 56.250%
INFO:root:Accuracy: 0.68571, Precision: 0.75000, Recall: 0.78261, F1: 0.76596
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.7692307829856873
INFO:root:Epoch 17
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2676, 0.7324], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3883, 0.6117], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3465, 0.6535], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2536, 0.7464], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1931, 0.8069], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3392, 0.6608], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3273, 0.6727], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3577, 0.6423], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2551, 0.7449], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2651, 0.7349], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4774, 0.5226], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2282, 0.7718], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3048, 0.6952], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3037, 0.6963], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4651, 0.5349], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2532, 0.7468], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3728, 0.6272], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3568, 0.6432], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2608, 0.7392], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3577, 0.6423], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3728, 0.6272], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3204, 0.6796], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2410, 0.7590], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4495, 0.5505], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 83.333% (loss: 0.468) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1403, 0.8597], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1565, 0.8435], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1682, 0.8318], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1088, 0.8912], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1649, 0.8351], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2488, 0.7512], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1427, 0.8573], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1028, 0.8972], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1661, 0.8339], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1051, 0.8949], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0973, 0.9027], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2474, 0.7526], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1176, 0.8824], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0856, 0.9144], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0974, 0.9026], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1610, 0.8390], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1239, 0.8761], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0501, 0.9499], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1240, 0.8760], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1116, 0.8884], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2059, 0.7941], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1616, 0.8384], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1445, 0.8555], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0961, 0.9039], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0491, 0.9509], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1123, 0.8877], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1001, 0.8999], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0690, 0.9310], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1169, 0.8831], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0724, 0.9276], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0696, 0.9304], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0800, 0.9200], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0426, 0.9574], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0749, 0.9251], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0719, 0.9281], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0380, 0.9620], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0753, 0.9247], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1055, 0.8945], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1098, 0.8902], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0813, 0.9187], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0710, 0.9290], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0880, 0.9120], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0450, 0.9550], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1098, 0.8902], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0827, 0.9173], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0734, 0.9266], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0729, 0.9271], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0854, 0.9146], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0797, 0.9203], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0489, 0.9511], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0304, 0.9696], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0760, 0.9240], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2235, 0.7765], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1456, 0.8544], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1955, 0.8045], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1078, 0.8922], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0415, 0.9585], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1833, 0.8167], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0742, 0.9258], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0874, 0.9126], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1767, 0.8233], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1275, 0.8725], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1789, 0.8211], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0585, 0.9415], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1484, 0.8516], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1133, 0.8867], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0789, 0.9211], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0521, 0.9479], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0580, 0.9420], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1486, 0.8514], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0953, 0.9047], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0603, 0.9397], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1693, 0.8307], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2699, 0.7301], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1556, 0.8444], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0877, 0.9123], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1806, 0.8194], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0653, 0.9347], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0590, 0.9410], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1519, 0.8481], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2019, 0.7981], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 0, Training ones: 69 / 105
outputs torch.Size([24]) tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3534, 0.6466], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3127, 0.6873], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2793, 0.7207], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4364, 0.5636], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4677, 0.5323], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2431, 0.7569], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2513, 0.7487], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2688, 0.7312], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3698, 0.6302], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3835, 0.6165], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3169, 0.6831], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2577, 0.7423], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3304, 0.6696], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2679, 0.7321], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3575, 0.6425], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4243, 0.5757], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2582, 0.7418], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2485, 0.7515], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2251, 0.7749], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3122, 0.6878], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2940, 0.7060], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3279, 0.6721], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2570, 0.7430], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2748, 0.7252], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 62.500% (loss: 0.640) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3260, 0.6740], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3095, 0.6905], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[   17] train: 65.833% test: 56.250%
INFO:root:Accuracy: 0.65714, Precision: 0.65714, Recall: 1.00000, F1: 0.79310
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.7692307829856873
INFO:root:Epoch 18
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3755, 0.6245], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5285, 0.4715], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3484, 0.6516], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2727, 0.7273], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3954, 0.6046], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3219, 0.6781], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4138, 0.5862], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3029, 0.6971], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2801, 0.7199], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2917, 0.7083], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2727, 0.7273], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3183, 0.6817], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1237, 0.8763], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3004, 0.6996], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3934, 0.6066], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4701, 0.5299], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4644, 0.5356], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2670, 0.7330], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2623, 0.7377], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2623, 0.7377], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3723, 0.6277], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4335, 0.5665], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0948, 0.9052], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6397, 0.3603], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 83.333% (loss: 0.513) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4605, 0.5395], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2677, 0.7323], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2955, 0.7045], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1975, 0.8025], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5489, 0.4511], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3742, 0.6258], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4667, 0.5333], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3138, 0.6862], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5548, 0.4452], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4455, 0.5545], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2536, 0.7464], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6971, 0.3029], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4363, 0.5637], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2251, 0.7749], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4266, 0.5734], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4454, 0.5546], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3299, 0.6701], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5024, 0.4976], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5071, 0.4929], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4534, 0.5466], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4857, 0.5143], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5423, 0.4577], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2565, 0.7435], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3706, 0.6294], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2492, 0.7508], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4700, 0.5300], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3240, 0.6760], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5052, 0.4948], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3509, 0.6491], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3516, 0.6484], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3059, 0.6941], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3060, 0.6940], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1880, 0.8120], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0856, 0.9144], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3532, 0.6468], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2475, 0.7525], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3736, 0.6264], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3493, 0.6507], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3770, 0.6230], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5826, 0.4174], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4345, 0.5655], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1124, 0.8876], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2541, 0.7459], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2588, 0.7412], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5072, 0.4928], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3022, 0.6978], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3693, 0.6307], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3480, 0.6520], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5033, 0.4967], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5237, 0.4763], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4924, 0.5076], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4830, 0.5170], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6234, 0.3766], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5533, 0.4467], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6401, 0.3599], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6257, 0.3743], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5221, 0.4779], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7886, 0.2114], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3823, 0.6177], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4860, 0.5140], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4675, 0.5325], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4604, 0.5396], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7372, 0.2628], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5992, 0.4008], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6797, 0.3203], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3372, 0.6628], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3578, 0.6422], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3754, 0.6246], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3050, 0.6950], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5594, 0.4406], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2831, 0.7169], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5279, 0.4721], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5824, 0.4176], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5826, 0.4174], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6571, 0.3429], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5043, 0.4957], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5554, 0.4446], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4268, 0.5732], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3869, 0.6131], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3540, 0.6460], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3715, 0.6285], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 29, Training ones: 69 / 76
outputs torch.Size([24]) tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3561, 0.6439], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3217, 0.6783], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2821, 0.7179], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4533, 0.5467], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4728, 0.5272], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2540, 0.7460], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2768, 0.7232], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2802, 0.7198], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3677, 0.6323], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3941, 0.6059], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3168, 0.6832], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2695, 0.7305], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3459, 0.6541], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2760, 0.7240], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4416, 0.5584], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4424, 0.5576], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2722, 0.7278], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2641, 0.7359], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2320, 0.7680], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3116, 0.6884], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3023, 0.6977], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3558, 0.6442], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2737, 0.7263], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2780, 0.7220], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 62.500% (loss: 0.641) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3081, 0.6919], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3242, 0.6758], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[   18] train: 58.611% test: 56.250%
INFO:root:Accuracy: 0.59048, Precision: 0.67105, Recall: 0.73913, F1: 0.70345
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.7692307829856873
INFO:root:Epoch 19
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2794, 0.7206], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4291, 0.5709], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3529, 0.6471], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2854, 0.7146], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1552, 0.8448], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2334, 0.7666], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3018, 0.6982], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4440, 0.5560], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3840, 0.6160], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2323, 0.7677], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5774, 0.4226], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2756, 0.7244], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3557, 0.6443], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4357, 0.5643], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4066, 0.5934], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3338, 0.6662], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4900, 0.5100], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2385, 0.7615], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2261, 0.7739], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4260, 0.5740], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3201, 0.6799], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4235, 0.5765], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1682, 0.8318], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4426, 0.5574], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 79.167% (loss: 0.540) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1832, 0.8168], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1501, 0.8499], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1035, 0.8965], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1853, 0.8147], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2618, 0.7382], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3280, 0.6720], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1413, 0.8587], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1071, 0.8929], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2015, 0.7985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2415, 0.7585], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1117, 0.8883], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2424, 0.7576], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1983, 0.8017], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0735, 0.9265], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0753, 0.9247], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1977, 0.8023], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1527, 0.8473], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0789, 0.9211], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3110, 0.6890], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2419, 0.7581], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1733, 0.8267], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1504, 0.8496], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1245, 0.8755], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0733, 0.9267], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1137, 0.8863], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1186, 0.8814], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1385, 0.8615], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0824, 0.9176], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1146, 0.8854], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0531, 0.9469], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0899, 0.9101], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1038, 0.8962], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0809, 0.9191], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0512, 0.9488], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0998, 0.9002], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0815, 0.9185], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1896, 0.8104], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2741, 0.7259], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1484, 0.8516], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1094, 0.8906], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1792, 0.8208], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2062, 0.7938], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0887, 0.9113], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0923, 0.9077], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1454, 0.8546], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2194, 0.7806], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1452, 0.8548], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1060, 0.8940], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0859, 0.9141], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1346, 0.8654], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1768, 0.8232], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0679, 0.9321], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2094, 0.7906], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1385, 0.8615], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2789, 0.7211], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1603, 0.8397], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1381, 0.8619], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2633, 0.7367], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1564, 0.8436], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2416, 0.7584], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1494, 0.8506], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2133, 0.7867], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2138, 0.7862], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1213, 0.8787], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1632, 0.8368], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1676, 0.8324], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1369, 0.8631], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1423, 0.8577], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1316, 0.8684], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1643, 0.8357], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1259, 0.8741], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3066, 0.6934], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3502, 0.6498], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2541, 0.7459], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2659, 0.7341], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1166, 0.8834], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1372, 0.8628], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1724, 0.8276], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1465, 0.8535], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1214, 0.8786], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1564, 0.8436], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 1, Training ones: 69 / 104
outputs torch.Size([24]) tensor([1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3873, 0.6127], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3581, 0.6419], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3173, 0.6827], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4876, 0.5124], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5109, 0.4891], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2949, 0.7051], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3330, 0.6670], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3249, 0.6751], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3995, 0.6005], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4276, 0.5724], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3445, 0.6555], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3144, 0.6856], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3880, 0.6120], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3167, 0.6833], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4969, 0.5031], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4845, 0.5155], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3195, 0.6805], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3038, 0.6962], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2738, 0.7262], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3465, 0.6535], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3395, 0.6605], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4013, 0.5987], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3209, 0.6791], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3136, 0.6864], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 66.667% (loss: 0.638) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3236, 0.6764], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3652, 0.6348], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 1, Training ones: 16 / 25
INFO:root:[   19] train: 65.000% test: 58.333%
INFO:root:Accuracy: 0.64762, Precision: 0.65385, Recall: 0.98551, F1: 0.78613
INFO:root:Val Accuracy: 0.65385, Precision: 0.64000, Recall: 1.00000, F1: 0.78049
INFO:root:New best F1: 0.78049 improved from 0.7692307829856873, saving to /home/gridsan/nchutisilp/projects/jepa/pretrain_models/video_classification_frozen/cf-pres-from-vjepa-16x2x3-fold2/jepa-best.pth.tar
INFO:root:Epoch 20
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3870, 0.6130], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5395, 0.4605], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3142, 0.6858], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2906, 0.7094], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2370, 0.7630], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3314, 0.6686], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4238, 0.5762], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4269, 0.5731], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3022, 0.6978], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2484, 0.7516], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3976, 0.6024], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4373, 0.5627], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2924, 0.7076], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5087, 0.4913], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4571, 0.5429], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4230, 0.5770], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5227, 0.4773], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3296, 0.6704], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3765, 0.6235], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2890, 0.7110], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3839, 0.6161], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5092, 0.4908], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1885, 0.8115], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5104, 0.4896], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 70.833% (loss: 0.541) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4729, 0.5271], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4812, 0.5188], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3719, 0.6281], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2567, 0.7433], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7186, 0.2814], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6052, 0.3948], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3680, 0.6320], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3581, 0.6419], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5679, 0.4321], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5196, 0.4804], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2716, 0.7284], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6708, 0.3292], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5144, 0.4856], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3443, 0.6557], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3672, 0.6328], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4871, 0.5129], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3999, 0.6001], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4402, 0.5598], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6166, 0.3834], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4330, 0.5670], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4018, 0.5982], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3331, 0.6669], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3435, 0.6565], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4174, 0.5826], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4371, 0.5629], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5244, 0.4756], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3432, 0.6568], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5888, 0.4112], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3713, 0.6287], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4301, 0.5699], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4714, 0.5286], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3779, 0.6221], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2988, 0.7012], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3404, 0.6596], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4837, 0.5163], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4340, 0.5660], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3652, 0.6348], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3890, 0.6110], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4098, 0.5902], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3626, 0.6374], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5503, 0.4497], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5790, 0.4210], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4393, 0.5607], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3122, 0.6878], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4777, 0.5223], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4398, 0.5602], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4232, 0.5768], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3149, 0.6851], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4472, 0.5528], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2851, 0.7149], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3877, 0.6123], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5536, 0.4464], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6229, 0.3771], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5693, 0.4307], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5934, 0.4066], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3834, 0.6166], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5060, 0.4940], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6950, 0.3050], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4295, 0.5705], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6346, 0.3654], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6438, 0.3562], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3454, 0.6546], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6589, 0.3411], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6858, 0.3142], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6198, 0.3802], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5740, 0.4260], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4267, 0.5733], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2990, 0.7010], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4922, 0.5078], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5412, 0.4588], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5203, 0.4797], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6341, 0.3659], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5502, 0.4498], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4559, 0.5441], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4124, 0.5876], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3242, 0.6758], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4302, 0.5698], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4633, 0.5367], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4363, 0.5637], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3204, 0.6796], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5598, 0.4402], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 33, Training ones: 69 / 72
outputs torch.Size([24]) tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3235, 0.6765], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3036, 0.6964], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2643, 0.7357], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4209, 0.5791], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4572, 0.5428], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2608, 0.7392], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3014, 0.6986], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2804, 0.7196], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3262, 0.6738], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3640, 0.6360], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2791, 0.7209], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2774, 0.7226], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3390, 0.6610], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2679, 0.7321], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4331, 0.5669], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4253, 0.5747], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2812, 0.7188], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2668, 0.7332], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2416, 0.7584], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2911, 0.7089], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2894, 0.7106], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3551, 0.6449], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2832, 0.7168], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2633, 0.7367], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 62.500% (loss: 0.648) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2494, 0.7506], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3106, 0.6894], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[   20] train: 66.111% test: 56.250%
INFO:root:Accuracy: 0.62857, Precision: 0.70833, Recall: 0.73913, F1: 0.72340
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.7804877758026123
INFO:root:Epoch 21
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3082, 0.6918], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6034, 0.3966], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3165, 0.6835], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2967, 0.7033], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3135, 0.6865], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1998, 0.8002], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4677, 0.5323], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3625, 0.6375], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3101, 0.6899], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3664, 0.6336], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4542, 0.5458], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2574, 0.7426], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2657, 0.7343], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3220, 0.6780], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4744, 0.5256], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2937, 0.7063], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2714, 0.7286], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1787, 0.8213], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2583, 0.7417], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2150, 0.7850], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3504, 0.6496], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4179, 0.5821], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2585, 0.7415], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5791, 0.4209], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 83.333% (loss: 0.506) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3989, 0.6011], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1821, 0.8179], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1296, 0.8704], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1107, 0.8893], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2061, 0.7939], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1939, 0.8061], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1009, 0.8991], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1259, 0.8741], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2667, 0.7333], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1836, 0.8164], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1132, 0.8868], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3192, 0.6808], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1650, 0.8350], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1627, 0.8373], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1147, 0.8853], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2276, 0.7724], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1262, 0.8738], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1145, 0.8855], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2578, 0.7422], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2296, 0.7704], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2158, 0.7842], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1043, 0.8957], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1903, 0.8097], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1767, 0.8233], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1985, 0.8015], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1378, 0.8622], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0895, 0.9105], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0833, 0.9167], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1515, 0.8485], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0792, 0.9208], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0674, 0.9326], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1762, 0.8238], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0603, 0.9397], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1098, 0.8902], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1251, 0.8749], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1416, 0.8584], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1325, 0.8675], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1637, 0.8363], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1660, 0.8340], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0958, 0.9042], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1389, 0.8611], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1773, 0.8227], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0931, 0.9069], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1385, 0.8615], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1352, 0.8648], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3812, 0.6188], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0998, 0.9002], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2628, 0.7372], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1269, 0.8731], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1093, 0.8907], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1086, 0.8914], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1217, 0.8783], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2107, 0.7893], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1461, 0.8539], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1842, 0.8158], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2689, 0.7311], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1039, 0.8961], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2534, 0.7466], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1133, 0.8867], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1651, 0.8349], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1852, 0.8148], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1121, 0.8879], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2276, 0.7724], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2328, 0.7672], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3201, 0.6799], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1415, 0.8585], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1928, 0.8072], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1313, 0.8687], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1773, 0.8227], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2158, 0.7842], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2744, 0.7256], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2123, 0.7877], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3252, 0.6748], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3293, 0.6707], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3018, 0.6982], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1264, 0.8736], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1878, 0.8122], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2365, 0.7635], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1665, 0.8335], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2185, 0.7815], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2204, 0.7796], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 2, Training ones: 69 / 103
outputs torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4102, 0.5898], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3899, 0.6101], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3614, 0.6386], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5190, 0.4810], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5563, 0.4437], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3572, 0.6428], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3923, 0.6077], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3708, 0.6292], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4193, 0.5807], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4607, 0.5393], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3683, 0.6317], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3614, 0.6386], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4365, 0.5635], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3455, 0.6545], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5584, 0.4416], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5235, 0.4765], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3749, 0.6251], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3684, 0.6316], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3262, 0.6738], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3806, 0.6194], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3771, 0.6229], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4654, 0.5346], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3703, 0.6297], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3406, 0.6594], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 62.500% (loss: 0.645) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3144, 0.6856], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3969, 0.6031], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 4, Training ones: 16 / 22
INFO:root:[   21] train: 65.833% test: 56.250%
INFO:root:Accuracy: 0.65714, Precision: 0.66019, Recall: 0.98551, F1: 0.79070
INFO:root:Val Accuracy: 0.61538, Precision: 0.63636, Recall: 0.87500, F1: 0.73684
INFO:root:F1: 0.73684 did not improve from 0.7804877758026123
INFO:root:Epoch 22
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3509, 0.6491], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1994, 0.8006], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4173, 0.5827], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4164, 0.5836], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3566, 0.6434], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3809, 0.6191], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5009, 0.4991], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5393, 0.4607], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2502, 0.7498], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2837, 0.7163], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5458, 0.4542], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3982, 0.6018], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3844, 0.6156], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3663, 0.6337], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5858, 0.4142], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2360, 0.7640], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4179, 0.5821], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3991, 0.6009], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3719, 0.6281], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3935, 0.6065], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3240, 0.6760], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6458, 0.3542], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4985, 0.5015], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4319, 0.5681], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 70.833% (loss: 0.626) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4829, 0.5171], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4247, 0.5753], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3383, 0.6617], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4989, 0.5011], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4783, 0.5217], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4539, 0.5461], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2406, 0.7594], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3744, 0.6256], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5433, 0.4567], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3679, 0.6321], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3771, 0.6229], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5658, 0.4342], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4963, 0.5037], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2253, 0.7747], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3617, 0.6383], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4485, 0.5515], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4233, 0.5767], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2373, 0.7627], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4402, 0.5598], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5811, 0.4189], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4979, 0.5021], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4566, 0.5434], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3332, 0.6668], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3445, 0.6555], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2693, 0.7307], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4946, 0.5054], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2544, 0.7456], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4297, 0.5703], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3022, 0.6978], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3500, 0.6500], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2427, 0.7573], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3770, 0.6230], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3370, 0.6630], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3457, 0.6543], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3200, 0.6800], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2001, 0.7999], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4386, 0.5614], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3618, 0.6382], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4332, 0.5668], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3116, 0.6884], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3362, 0.6638], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3857, 0.6143], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2830, 0.7170], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2675, 0.7325], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3547, 0.6453], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5634, 0.4366], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3452, 0.6548], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2160, 0.7840], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3426, 0.6574], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3503, 0.6497], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3169, 0.6831], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2810, 0.7190], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5092, 0.4908], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4385, 0.5615], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5375, 0.4625], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4767, 0.5233], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3482, 0.6518], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7713, 0.2287], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3162, 0.6838], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4543, 0.5457], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6665, 0.3335], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4031, 0.5969], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6359, 0.3641], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4104, 0.5896], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5701, 0.4299], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5056, 0.4944], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2453, 0.7547], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3243, 0.6757], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3956, 0.6044], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4145, 0.5855], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2977, 0.7023], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4946, 0.5054], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4304, 0.5696], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6262, 0.3738], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4356, 0.5644], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2404, 0.7596], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3134, 0.6866], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3525, 0.6475], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1820, 0.8180], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2557, 0.7443], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4803, 0.5197], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 17, Training ones: 69 / 88
outputs torch.Size([24]) tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3016, 0.6984], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2548, 0.7452], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2419, 0.7581], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4332, 0.5668], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4453, 0.5547], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2417, 0.7583], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2453, 0.7547], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2319, 0.7681], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3195, 0.6805], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3731, 0.6269], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2289, 0.7711], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1980, 0.8020], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3325, 0.6675], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2085, 0.7915], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4826, 0.5174], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4284, 0.5716], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2349, 0.7651], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2382, 0.7618], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1875, 0.8125], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2576, 0.7424], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2534, 0.7466], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3455, 0.6545], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2372, 0.7628], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1947, 0.8053], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 62.500% (loss: 0.661) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1770, 0.8230], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2781, 0.7219], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[   22] train: 68.056% test: 56.250%
INFO:root:Accuracy: 0.66667, Precision: 0.69318, Recall: 0.88406, F1: 0.77707
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.7804877758026123
INFO:root:Epoch 23
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2581, 0.7419], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0857, 0.9143], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1196, 0.8804], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3326, 0.6674], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2048, 0.7952], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2223, 0.7777], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3602, 0.6398], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4165, 0.5835], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4196, 0.5804], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2047, 0.7953], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4783, 0.5217], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2020, 0.7980], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2166, 0.7834], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1469, 0.8531], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5244, 0.4756], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2517, 0.7483], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3566, 0.6434], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0556, 0.9444], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2687, 0.7313], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2397, 0.7603], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0646, 0.9354], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4297, 0.5703], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1740, 0.8260], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5763, 0.4237], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 83.333% (loss: 0.667) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3902, 0.6098], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0959, 0.9041], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0493, 0.9507], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0504, 0.9496], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1571, 0.8429], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1448, 0.8552], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0398, 0.9602], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0902, 0.9098], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1039, 0.8961], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1062, 0.8938], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0754, 0.9246], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1628, 0.8372], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1620, 0.8380], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0709, 0.9291], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0619, 0.9381], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1454, 0.8546], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0991, 0.9009], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0274, 0.9726], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1685, 0.8315], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1004, 0.8996], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0901, 0.9099], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0676, 0.9324], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0318, 0.9682], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0576, 0.9424], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0431, 0.9569], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1706, 0.8294], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0393, 0.9607], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0474, 0.9526], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0771, 0.9229], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0305, 0.9695], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0334, 0.9666], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0702, 0.9298], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0526, 0.9474], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0302, 0.9698], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0599, 0.9401], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0635, 0.9365], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0345, 0.9655], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1037, 0.8963], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0777, 0.9223], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0449, 0.9551], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1003, 0.8997], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1384, 0.8616], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0533, 0.9467], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0869, 0.9131], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0499, 0.9501], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1163, 0.8837], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0251, 0.9749], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0304, 0.9696], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0724, 0.9276], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0857, 0.9143], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0882, 0.9118], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0724, 0.9276], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1131, 0.8869], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0922, 0.9078], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1381, 0.8619], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1424, 0.8576], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0730, 0.9270], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1334, 0.8666], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0433, 0.9567], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1192, 0.8808], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1998, 0.8002], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1145, 0.8855], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3008, 0.6992], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1088, 0.8912], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1327, 0.8673], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2214, 0.7786], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0763, 0.9237], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0718, 0.9282], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1080, 0.8920], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0924, 0.9076], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0843, 0.9157], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0885, 0.9115], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2610, 0.7390], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2485, 0.7515], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1709, 0.8291], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1336, 0.8664], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1387, 0.8613], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1189, 0.8811], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1208, 0.8792], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1330, 0.8670], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1748, 0.8252], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 2, Training ones: 69 / 103
outputs torch.Size([24]) tensor([1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3951, 0.6049], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3680, 0.6320], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3435, 0.6565], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4548, 0.5452], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5107, 0.4893], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3490, 0.6510], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3510, 0.6490], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3374, 0.6626], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4306, 0.5694], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4368, 0.5632], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3240, 0.6760], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3244, 0.6756], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4011, 0.5989], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3223, 0.6777], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4643, 0.5357], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4670, 0.5330], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3471, 0.6529], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3292, 0.6708], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3092, 0.6908], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3580, 0.6420], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3569, 0.6431], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3672, 0.6328], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3569, 0.6431], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3169, 0.6831], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 66.667% (loss: 0.645) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3022, 0.6978], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3661, 0.6339], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 1, Training ones: 16 / 25
INFO:root:[   23] train: 65.833% test: 58.333%
INFO:root:Accuracy: 0.65714, Precision: 0.66019, Recall: 0.98551, F1: 0.79070
INFO:root:Val Accuracy: 0.65385, Precision: 0.64000, Recall: 1.00000, F1: 0.78049
INFO:root:F1: 0.78049 did not improve from 0.7804877758026123
INFO:root:Epoch 24
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2721, 0.7279], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2953, 0.7047], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2858, 0.7142], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3530, 0.6470], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2476, 0.7524], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2638, 0.7362], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3469, 0.6531], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3398, 0.6602], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2937, 0.7063], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2570, 0.7430], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3457, 0.6543], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2184, 0.7816], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3336, 0.6664], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3792, 0.6208], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4773, 0.5227], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3381, 0.6619], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3461, 0.6539], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2582, 0.7418], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2850, 0.7150], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3675, 0.6325], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3384, 0.6616], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4263, 0.5737], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2982, 0.7018], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3234, 0.6766], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 83.333% (loss: 0.502) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4636, 0.5364], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3989, 0.6011], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3736, 0.6264], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3510, 0.6490], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6133, 0.3867], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4482, 0.5518], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3887, 0.6113], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4262, 0.5738], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4944, 0.5056], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4223, 0.5777], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3113, 0.6887], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5325, 0.4675], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5015, 0.4985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3505, 0.6495], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4157, 0.5843], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3633, 0.6367], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5936, 0.4064], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3033, 0.6967], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4537, 0.5463], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4228, 0.5772], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4469, 0.5531], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3845, 0.6155], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4031, 0.5969], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3951, 0.6049], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3628, 0.6372], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4879, 0.5121], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3647, 0.6353], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4863, 0.5137], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3653, 0.6347], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4145, 0.5855], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3616, 0.6384], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4834, 0.5166], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3727, 0.6273], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3970, 0.6030], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3887, 0.6113], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4580, 0.5420], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4193, 0.5807], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4177, 0.5823], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4489, 0.5511], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4650, 0.5350], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3993, 0.6007], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4271, 0.5729], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3687, 0.6313], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4457, 0.5543], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4258, 0.5742], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4638, 0.5362], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3296, 0.6704], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3325, 0.6675], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4877, 0.5123], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4113, 0.5887], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4437, 0.5563], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4968, 0.5032], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6201, 0.3799], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4384, 0.5616], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5620, 0.4380], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5308, 0.4692], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4757, 0.5243], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6007, 0.3993], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4417, 0.5583], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5281, 0.4719], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7147, 0.2853], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5614, 0.4386], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6650, 0.3350], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5065, 0.4935], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6193, 0.3807], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5043, 0.4957], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4289, 0.5711], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4979, 0.5021], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5203, 0.4797], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4636, 0.5364], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4250, 0.5750], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5448, 0.4552], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5322, 0.4678], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5878, 0.4122], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4776, 0.5224], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4685, 0.5315], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3394, 0.6606], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3898, 0.6102], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3600, 0.6400], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3352, 0.6648], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3296, 0.6704], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 19, Training ones: 69 / 86
outputs torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4388, 0.5612], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3988, 0.6012], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3777, 0.6223], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5087, 0.4913], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5587, 0.4413], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3672, 0.6328], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3773, 0.6227], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3620, 0.6380], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4880, 0.5120], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4839, 0.5161], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3552, 0.6448], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3463, 0.6537], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4466, 0.5534], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3495, 0.6505], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5100, 0.4900], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5239, 0.4761], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3713, 0.6287], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3570, 0.6430], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3336, 0.6664], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4050, 0.5950], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3856, 0.6144], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3999, 0.6001], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3933, 0.6067], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3394, 0.6606], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 62.500% (loss: 0.644) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3188, 0.6812], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4104, 0.5896], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 4, Training ones: 16 / 22
INFO:root:[   24] train: 69.444% test: 56.250%
INFO:root:Accuracy: 0.66667, Precision: 0.69767, Recall: 0.86957, F1: 0.77419
INFO:root:Val Accuracy: 0.61538, Precision: 0.63636, Recall: 0.87500, F1: 0.73684
INFO:root:F1: 0.73684 did not improve from 0.7804877758026123
INFO:root:Epoch 25
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3121, 0.6879], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4272, 0.5728], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3648, 0.6352], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3374, 0.6626], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3334, 0.6666], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4028, 0.5972], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4261, 0.5739], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3534, 0.6466], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3457, 0.6543], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3713, 0.6287], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5019, 0.4981], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4043, 0.5957], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3435, 0.6565], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3062, 0.6938], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5137, 0.4863], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2466, 0.7534], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3724, 0.6276], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4115, 0.5885], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2933, 0.7067], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2752, 0.7248], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4102, 0.5898], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5999, 0.4001], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2922, 0.7078], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3935, 0.6065], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 79.167% (loss: 0.522) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2517, 0.7483], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1803, 0.8197], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2445, 0.7555], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1945, 0.8055], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3113, 0.6887], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2548, 0.7452], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2405, 0.7595], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2135, 0.7865], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3281, 0.6719], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1848, 0.8152], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1861, 0.8139], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3333, 0.6667], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1764, 0.8236], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1964, 0.8036], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1778, 0.8222], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3002, 0.6998], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1841, 0.8159], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1674, 0.8326], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3216, 0.6784], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1782, 0.8218], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1770, 0.8230], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2644, 0.7356], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2489, 0.7511], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1874, 0.8126], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1099, 0.8901], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2338, 0.7662], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1584, 0.8416], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2532, 0.7468], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1186, 0.8814], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1620, 0.8380], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2092, 0.7908], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2536, 0.7464], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1853, 0.8147], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2494, 0.7506], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1400, 0.8600], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2264, 0.7736], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1406, 0.8594], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2464, 0.7536], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2065, 0.7935], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1507, 0.8493], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1542, 0.8458], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2029, 0.7971], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1559, 0.8441], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1704, 0.8296], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2183, 0.7817], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2081, 0.7919], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2225, 0.7775], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1480, 0.8520], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2268, 0.7732], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1361, 0.8639], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1512, 0.8488], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3585, 0.6415], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3408, 0.6592], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1604, 0.8396], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2960, 0.7040], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2460, 0.7540], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2055, 0.7945], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3633, 0.6367], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1791, 0.8209], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2777, 0.7223], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3812, 0.6188], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2431, 0.7569], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3873, 0.6127], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2201, 0.7799], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3409, 0.6591], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2723, 0.7277], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2341, 0.7659], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1408, 0.8592], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1748, 0.8252], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2904, 0.7096], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1753, 0.8247], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3258, 0.6742], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3705, 0.6295], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4454, 0.5546], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2933, 0.7067], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2226, 0.7774], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2132, 0.7868], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2420, 0.7580], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1755, 0.8245], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2183, 0.7817], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4501, 0.5499], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 3, Training ones: 69 / 102
outputs torch.Size([24]) tensor([0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5848, 0.4152], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5389, 0.4611], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5371, 0.4629], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6827, 0.3173], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6938, 0.3062], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4659, 0.5341], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4874, 0.5126], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4941, 0.5059], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6800, 0.3200], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6349, 0.3651], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4805, 0.5195], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4603, 0.5397], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6016, 0.3984], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4502, 0.5498], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6916, 0.3084], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7068, 0.2932], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5025, 0.4975], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4791, 0.5209], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4364, 0.5636], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5627, 0.4373], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5164, 0.4836], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5125, 0.4875], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5351, 0.4649], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4422, 0.5578], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 58.333% (loss: 0.704) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4043, 0.5957], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5580, 0.4420], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 16, Training ones: 16 / 10
INFO:root:[   25] train: 65.000% test: 79.167%
INFO:root:Accuracy: 0.64762, Precision: 0.65686, Recall: 0.97101, F1: 0.78363
INFO:root:Val Accuracy: 0.61538, Precision: 0.80000, Recall: 0.50000, F1: 0.61538
INFO:root:F1: 0.61538 did not improve from 0.7804877758026123
INFO:root:Epoch 26
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6468, 0.3532], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5781, 0.4219], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4555, 0.5445], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4500, 0.5500], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3829, 0.6171], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3468, 0.6532], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3974, 0.6026], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6582, 0.3418], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2595, 0.7405], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2786, 0.7214], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6702, 0.3298], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5699, 0.4301], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4827, 0.5173], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3227, 0.6773], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7329, 0.2671], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5177, 0.4823], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5590, 0.4410], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4659, 0.5341], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4042, 0.5958], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3313, 0.6687], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4785, 0.5215], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5512, 0.4488], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3111, 0.6889], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4966, 0.5034], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 62.500% (loss: 0.627) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6796, 0.3204], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3524, 0.6476], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2956, 0.7044], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3945, 0.6055], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7797, 0.2203], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6003, 0.3997], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4907, 0.5093], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5469, 0.4531], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5572, 0.4428], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3327, 0.6673], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4585, 0.5415], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5532, 0.4468], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5159, 0.4841], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3038, 0.6962], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4079, 0.5921], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4953, 0.5047], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5342, 0.4658], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3664, 0.6336], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6834, 0.3166], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6185, 0.3815], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6112, 0.3888], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6257, 0.3743], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5598, 0.4402], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3040, 0.6960], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3767, 0.6233], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7667, 0.2333], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5346, 0.4654], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8048, 0.1952], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4836, 0.5164], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2354, 0.7646], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5707, 0.4293], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5194, 0.4806], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2637, 0.7363], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5481, 0.4519], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4268, 0.5732], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5072, 0.4928], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5798, 0.4202], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6077, 0.3923], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5174, 0.4826], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3355, 0.6645], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5315, 0.4685], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4132, 0.5868], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4797, 0.5203], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3966, 0.6034], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5621, 0.4379], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6746, 0.3254], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4448, 0.5552], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3613, 0.6387], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5704, 0.4296], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4339, 0.5661], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4922, 0.5078], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4109, 0.5891], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7139, 0.2861], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7712, 0.2288], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6688, 0.3312], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4593, 0.5407], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4639, 0.5361], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8457, 0.1543], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9851, 0.0149], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6013, 0.3987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6914, 0.3086], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6179, 0.3821], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8549, 0.1451], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4543, 0.5457], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7740, 0.2260], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6505, 0.3495], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5877, 0.4123], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5034, 0.4966], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4881, 0.5119], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5516, 0.4484], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4329, 0.5671], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8487, 0.1513], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7306, 0.2694], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5759, 0.4241], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5467, 0.4533], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3853, 0.6147], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3911, 0.6089], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3791, 0.6209], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5315, 0.4685], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3585, 0.6415], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6499, 0.3501], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 56, Training ones: 69 / 49
outputs torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4060, 0.5940], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4377, 0.5623], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3817, 0.6183], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5178, 0.4822], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5970, 0.4030], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3351, 0.6649], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3471, 0.6529], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3520, 0.6480], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5150, 0.4850], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4428, 0.5572], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3010, 0.6990], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3952, 0.6048], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4343, 0.5657], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3044, 0.6956], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5684, 0.4316], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5486, 0.4514], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3990, 0.6010], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3380, 0.6620], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3293, 0.6707], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4192, 0.5808], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4043, 0.5957], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3373, 0.6627], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4600, 0.5400], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3457, 0.6543], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 66.667% (loss: 0.648) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2841, 0.7159], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3676, 0.6324], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 5, Training ones: 16 / 21
INFO:root:[   26] train: 65.556% test: 58.333%
INFO:root:Accuracy: 0.63810, Precision: 0.81633, Recall: 0.57971, F1: 0.67797
INFO:root:Val Accuracy: 0.65385, Precision: 0.66667, Recall: 0.87500, F1: 0.75676
INFO:root:F1: 0.75676 did not improve from 0.7804877758026123
INFO:root:Epoch 27
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4171, 0.5829], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3491, 0.6509], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2677, 0.7323], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2765, 0.7235], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3291, 0.6709], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2709, 0.7291], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4586, 0.5414], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4517, 0.5483], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2690, 0.7310], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3117, 0.6883], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2943, 0.7057], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3087, 0.6913], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3130, 0.6870], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4307, 0.5693], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5103, 0.4897], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3239, 0.6761], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3180, 0.6820], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2540, 0.7460], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3248, 0.6752], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2676, 0.7324], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4976, 0.5024], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6104, 0.3896], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1951, 0.8049], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4376, 0.5624], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 83.333% (loss: 0.519) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2129, 0.7871], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1517, 0.8483], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1913, 0.8087], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1465, 0.8535], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2512, 0.7488], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2033, 0.7967], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2319, 0.7681], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1539, 0.8461], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1349, 0.8651], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3212, 0.6788], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0986, 0.9014], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1757, 0.8243], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1482, 0.8518], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1093, 0.8907], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1093, 0.8907], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1859, 0.8141], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2059, 0.7941], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0928, 0.9072], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2224, 0.7776], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1224, 0.8776], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1653, 0.8347], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1336, 0.8664], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1383, 0.8617], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1531, 0.8469], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0728, 0.9272], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1900, 0.8100], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1150, 0.8850], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0906, 0.9094], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0900, 0.9100], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1241, 0.8759], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1176, 0.8824], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0712, 0.9288], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1217, 0.8783], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1681, 0.8319], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1233, 0.8767], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1192, 0.8808], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1122, 0.8878], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1763, 0.8237], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1625, 0.8375], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1169, 0.8831], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1013, 0.8987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2581, 0.7419], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0854, 0.9146], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1046, 0.8954], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1230, 0.8770], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2061, 0.7939], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0874, 0.9126], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1417, 0.8583], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1859, 0.8141], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0983, 0.9017], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0572, 0.9428], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1026, 0.8974], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1455, 0.8545], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1669, 0.8331], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1463, 0.8537], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1007, 0.8993], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2222, 0.7778], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2836, 0.7164], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1162, 0.8838], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0709, 0.9291], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1945, 0.8055], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1637, 0.8363], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2230, 0.7770], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0842, 0.9158], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2140, 0.7860], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1035, 0.8965], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1375, 0.8625], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1077, 0.8923], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1173, 0.8827], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2130, 0.7870], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1181, 0.8819], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2084, 0.7916], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3372, 0.6628], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2105, 0.7895], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1570, 0.8430], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1550, 0.8450], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1211, 0.8789], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1055, 0.8945], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1671, 0.8329], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1247, 0.8753], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2769, 0.7231], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 2, Training ones: 69 / 103
outputs torch.Size([24]) tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3066, 0.6934], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3816, 0.6184], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3094, 0.6906], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3866, 0.6134], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4986, 0.5014], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2844, 0.7156], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3016, 0.6984], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2971, 0.7029], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3758, 0.6242], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3192, 0.6808], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2408, 0.7592], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4129, 0.5871], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3355, 0.6645], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2759, 0.7241], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3506, 0.6494], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4329, 0.5671], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3533, 0.6467], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2711, 0.7289], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3262, 0.6738], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3689, 0.6311], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3517, 0.6483], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2724, 0.7276], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4231, 0.5769], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3456, 0.6544], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 62.500% (loss: 0.649) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2757, 0.7243], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2671, 0.7329], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[   27] train: 65.833% test: 56.250%
INFO:root:Accuracy: 0.65714, Precision: 0.66019, Recall: 0.98551, F1: 0.79070
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.7804877758026123
INFO:root:Epoch 28
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3303, 0.6697], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4012, 0.5988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2094, 0.7906], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3308, 0.6692], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2350, 0.7650], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2288, 0.7712], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3790, 0.6210], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3114, 0.6886], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2687, 0.7313], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3110, 0.6890], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4024, 0.5976], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4047, 0.5953], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2076, 0.7924], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4177, 0.5823], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4805, 0.5195], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3163, 0.6837], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3303, 0.6697], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4016, 0.5984], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2245, 0.7755], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2464, 0.7536], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4042, 0.5958], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5054, 0.4946], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3301, 0.6699], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2549, 0.7451], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 79.167% (loss: 0.462) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4058, 0.5942], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3267, 0.6733], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2156, 0.7844], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3768, 0.6232], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4784, 0.5216], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5369, 0.4631], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3694, 0.6306], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2676, 0.7324], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4521, 0.5479], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5000, 0.5000], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2952, 0.7048], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5219, 0.4781], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2626, 0.7374], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2344, 0.7656], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4020, 0.5980], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6105, 0.3895], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3881, 0.6119], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4037, 0.5963], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3989, 0.6011], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4252, 0.5748], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3798, 0.6202], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3578, 0.6422], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4466, 0.5534], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3258, 0.6742], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3785, 0.6215], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5964, 0.4036], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4466, 0.5534], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4963, 0.5037], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3019, 0.6981], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3680, 0.6320], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2423, 0.7577], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3305, 0.6695], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3069, 0.6931], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2704, 0.7296], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4879, 0.5121], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4346, 0.5654], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2825, 0.7175], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3032, 0.6968], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4028, 0.5972], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4036, 0.5964], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3130, 0.6870], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5234, 0.4766], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1902, 0.8098], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2802, 0.7198], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3103, 0.6897], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3228, 0.6772], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1876, 0.8124], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3698, 0.6302], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5165, 0.4835], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2307, 0.7693], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3505, 0.6495], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3720, 0.6280], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4184, 0.5816], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4935, 0.5065], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3667, 0.6333], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3516, 0.6484], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3656, 0.6344], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6813, 0.3187], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3546, 0.6454], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5003, 0.4997], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5620, 0.4380], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5752, 0.4248], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5686, 0.4314], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4774, 0.5226], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6834, 0.3166], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4298, 0.5702], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4779, 0.5221], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2425, 0.7575], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4171, 0.5829], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4957, 0.5043], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4309, 0.5691], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6364, 0.3636], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6335, 0.3665], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5472, 0.4528], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3189, 0.6811], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2163, 0.7837], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3906, 0.6094], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1822, 0.8178], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3708, 0.6292], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4093, 0.5907], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6080, 0.3920], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 18, Training ones: 69 / 87
outputs torch.Size([24]) tensor([1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3165, 0.6835], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4584, 0.5416], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3325, 0.6675], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4625, 0.5375], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7026, 0.2974], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3298, 0.6702], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2877, 0.7123], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2910, 0.7090], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4086, 0.5914], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3259, 0.6741], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2040, 0.7960], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4565, 0.5435], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3811, 0.6189], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2628, 0.7372], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4108, 0.5892], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4602, 0.5398], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4167, 0.5833], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2990, 0.7010], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3657, 0.6343], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4073, 0.5927], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4225, 0.5775], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2577, 0.7423], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5432, 0.4568], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4270, 0.5730], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 70.833% (loss: 0.649) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2728, 0.7272], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2296, 0.7704], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 2, Training ones: 16 / 24
INFO:root:[   28] train: 71.667% test: 60.417%
INFO:root:Accuracy: 0.67619, Precision: 0.70115, Recall: 0.88406, F1: 0.78205
INFO:root:Val Accuracy: 0.69231, Precision: 0.66667, Recall: 1.00000, F1: 0.80000
INFO:root:New best F1: 0.80000 improved from 0.7804877758026123, saving to /home/gridsan/nchutisilp/projects/jepa/pretrain_models/video_classification_frozen/cf-pres-from-vjepa-16x2x3-fold2/jepa-best.pth.tar
INFO:root:Epoch 29
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2453, 0.7547], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3907, 0.6093], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1400, 0.8600], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3378, 0.6622], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3295, 0.6705], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4905, 0.5095], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4807, 0.5193], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6333, 0.3667], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4865, 0.5135], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3294, 0.6706], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2690, 0.7310], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4227, 0.5773], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2081, 0.7919], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3947, 0.6053], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6993, 0.3007], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2346, 0.7654], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2591, 0.7409], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2793, 0.7207], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2113, 0.7887], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2104, 0.7896], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2212, 0.7788], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4919, 0.5081], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3045, 0.6955], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3460, 0.6540], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 83.333% (loss: 0.535) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1955, 0.8045], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1129, 0.8871], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0952, 0.9048], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0625, 0.9375], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4962, 0.5038], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2857, 0.7143], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1622, 0.8378], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1826, 0.8174], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1172, 0.8828], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0597, 0.9403], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0804, 0.9196], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2292, 0.7708], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4602, 0.5398], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1003, 0.8997], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0786, 0.9214], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1334, 0.8666], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0733, 0.9267], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0875, 0.9125], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1647, 0.8353], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1190, 0.8810], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3570, 0.6430], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1407, 0.8593], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1791, 0.8209], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1503, 0.8497], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1788, 0.8212], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3849, 0.6151], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1673, 0.8327], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1292, 0.8708], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1394, 0.8606], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3213, 0.6787], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0946, 0.9054], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0796, 0.9204], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2009, 0.7991], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0714, 0.9286], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0786, 0.9214], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1570, 0.8430], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0894, 0.9106], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2885, 0.7115], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1370, 0.8630], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1557, 0.8443], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1875, 0.8125], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2455, 0.7545], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0502, 0.9498], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2076, 0.7924], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0749, 0.9251], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1104, 0.8896], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0493, 0.9507], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1285, 0.8715], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2087, 0.7913], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0805, 0.9195], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2515, 0.7485], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1179, 0.8821], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2810, 0.7190], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5260, 0.4740], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2607, 0.7393], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4280, 0.5720], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3361, 0.6639], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5421, 0.4579], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2697, 0.7303], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3050, 0.6950], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4317, 0.5683], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1987, 0.8013], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3798, 0.6202], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1486, 0.8514], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4822, 0.5178], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3750, 0.6250], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1433, 0.8567], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1210, 0.8790], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1877, 0.8123], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3338, 0.6662], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1221, 0.8779], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4848, 0.5152], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3842, 0.6158], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4596, 0.5404], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4947, 0.5053], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3393, 0.6607], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1194, 0.8806], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2216, 0.7784], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3645, 0.6355], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2409, 0.7591], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5671, 0.4329], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 5, Training ones: 69 / 100
outputs torch.Size([24]) tensor([0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5530, 0.4470], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6567, 0.3433], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5649, 0.4351], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6773, 0.3227], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8318, 0.1682], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5633, 0.4367], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4762, 0.5238], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4788, 0.5212], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6216, 0.3784], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5829, 0.4171], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4247, 0.5753], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6013, 0.3987], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6170, 0.3830], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4355, 0.5645], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7085, 0.2915], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6652, 0.3348], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6308, 0.3692], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5239, 0.4761], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5227, 0.4773], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5512, 0.4488], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6076, 0.3924], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4859, 0.5141], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6738, 0.3262], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6009, 0.3991], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 33.333% (loss: 0.754) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4538, 0.5462], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4143, 0.5857], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 19, Training ones: 16 / 7
INFO:root:[   29] train: 68.056% test: 41.667%
INFO:root:Accuracy: 0.66667, Precision: 0.67000, Recall: 0.97101, F1: 0.79290
INFO:root:Val Accuracy: 0.34615, Precision: 0.42857, Recall: 0.18750, F1: 0.26087
INFO:root:F1: 0.26087 did not improve from 0.800000011920929
INFO:root:Epoch 30
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3100, 0.6900], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4203, 0.5797], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4510, 0.5490], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3170, 0.6830], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4088, 0.5912], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4424, 0.5576], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5229, 0.4771], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6421, 0.3579], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4410, 0.5590], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4450, 0.5550], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4791, 0.5209], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3381, 0.6619], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3628, 0.6372], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7375, 0.2625], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8081, 0.1919], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5602, 0.4398], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5551, 0.4449], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5522, 0.4478], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4893, 0.5107], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5502, 0.4498], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4786, 0.5214], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8070, 0.1930], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5251, 0.4749], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5541, 0.4459], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 54.167% (loss: 0.707) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6079, 0.3921], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3646, 0.6354], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3757, 0.6243], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2633, 0.7367], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7956, 0.2044], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5947, 0.4053], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5473, 0.4527], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5951, 0.4049], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3408, 0.6592], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2205, 0.7795], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3221, 0.6779], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6231, 0.3769], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4910, 0.5090], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3103, 0.6897], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4607, 0.5393], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6478, 0.3522], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5466, 0.4534], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3074, 0.6926], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6063, 0.3937], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3392, 0.6608], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4745, 0.5255], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5887, 0.4113], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3133, 0.6867], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1922, 0.8078], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1745, 0.8255], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4930, 0.5070], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0210, 0.9790], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4714, 0.5286], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2406, 0.7594], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3856, 0.6144], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1746, 0.8254], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2135, 0.7865], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3549, 0.6451], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2749, 0.7251], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3296, 0.6704], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4394, 0.5606], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3895, 0.6105], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4567, 0.5433], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2632, 0.7368], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2407, 0.7593], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3922, 0.6078], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5084, 0.4916], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1742, 0.8258], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3094, 0.6906], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2485, 0.7515], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3253, 0.6747], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2502, 0.7498], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1604, 0.8396], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3488, 0.6512], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2247, 0.7753], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2662, 0.7338], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1054, 0.8946], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5973, 0.4027], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4482, 0.5518], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4269, 0.5731], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3989, 0.6011], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3607, 0.6393], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4963, 0.5037], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2612, 0.7388], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4545, 0.5455], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4448, 0.5552], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4296, 0.5704], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6275, 0.3725], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2198, 0.7802], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3599, 0.6401], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4209, 0.5791], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2891, 0.7109], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3457, 0.6543], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3545, 0.6455], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2776, 0.7224], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3387, 0.6613], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3151, 0.6849], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1157, 0.8843], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4305, 0.5695], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0055, 0.9945], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2654, 0.7346], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0831, 0.9169], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0530, 0.9470], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0672, 0.9328], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0515, 0.9485], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4090, 0.5910], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 24, Training ones: 69 / 81
outputs torch.Size([24]) tensor([1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3334, 0.6666], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4225, 0.5775], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2933, 0.7067], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4262, 0.5738], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5671, 0.4329], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2947, 0.7053], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2225, 0.7775], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2332, 0.7668], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3664, 0.6336], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3869, 0.6131], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2353, 0.7647], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3006, 0.6994], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3786, 0.6214], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2035, 0.7965], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5262, 0.4738], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4244, 0.5756], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3522, 0.6478], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2921, 0.7079], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2295, 0.7705], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2624, 0.7376], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3337, 0.6663], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2427, 0.7573], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3474, 0.6526], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2978, 0.7022], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 62.500% (loss: 0.685) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2287, 0.7713], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2398, 0.7602], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 2, Training ones: 16 / 24
INFO:root:[   30] train: 62.500% test: 56.250%
INFO:root:Accuracy: 0.61905, Precision: 0.67901, Recall: 0.79710, F1: 0.73333
INFO:root:Val Accuracy: 0.61538, Precision: 0.62500, Recall: 0.93750, F1: 0.75000
INFO:root:F1: 0.75000 did not improve from 0.800000011920929
INFO:root:Epoch 31
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2803, 0.7197], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1462, 0.8538], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0603, 0.9397], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1265, 0.8735], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0415, 0.9585], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1809, 0.8191], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3554, 0.6446], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4353, 0.5647], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0560, 0.9440], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2888, 0.7112], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2408, 0.7592], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2070, 0.7930], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1425, 0.8575], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3130, 0.6870], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6022, 0.3978], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3302, 0.6698], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2180, 0.7820], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0465, 0.9535], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0568, 0.9432], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2839, 0.7161], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0847, 0.9153], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4357, 0.5643], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0797, 0.9203], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4669, 0.5331], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 87.500% (loss: 0.563) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3051, 0.6949], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0477, 0.9523], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1344, 0.8656], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0625, 0.9375], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2406, 0.7594], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3665, 0.6335], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2182, 0.7818], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2087, 0.7913], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3060, 0.6940], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1796, 0.8204], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1345, 0.8655], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2437, 0.7563], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2440, 0.7560], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0960, 0.9040], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0652, 0.9348], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1592, 0.8408], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2941, 0.7059], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1388, 0.8612], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2031, 0.7969], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1917, 0.8083], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1607, 0.8393], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3723, 0.6277], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0671, 0.9329], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1787, 0.8213], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0949, 0.9051], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6752, 0.3248], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1179, 0.8821], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5620, 0.4380], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3769, 0.6231], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2608, 0.7392], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3430, 0.6570], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3493, 0.6507], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2307, 0.7693], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1245, 0.8755], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4424, 0.5576], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5297, 0.4703], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2488, 0.7512], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2867, 0.7133], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3216, 0.6784], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2345, 0.7655], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3147, 0.6853], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3275, 0.6725], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1374, 0.8626], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1815, 0.8185], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1665, 0.8335], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2032, 0.7968], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2305, 0.7695], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2005, 0.7995], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5135, 0.4865], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1640, 0.8360], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3249, 0.6751], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2624, 0.7376], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6407, 0.3593], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5742, 0.4258], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5587, 0.4413], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3057, 0.6943], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7013, 0.2987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6367, 0.3633], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2065, 0.7935], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4044, 0.5956], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5080, 0.4920], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4389, 0.5611], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7878, 0.2122], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6136, 0.3864], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5251, 0.4749], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4040, 0.5960], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2387, 0.7613], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3727, 0.6273], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3771, 0.6229], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4014, 0.5986], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4089, 0.5911], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4060, 0.5940], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5190, 0.4810], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8141, 0.1859], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3889, 0.6111], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3021, 0.6979], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3474, 0.6526], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2275, 0.7725], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3329, 0.6671], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2551, 0.7449], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6338, 0.3662], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 17, Training ones: 69 / 88
outputs torch.Size([24]) tensor([0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5420, 0.4580], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6696, 0.3304], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5938, 0.4062], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6594, 0.3406], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7879, 0.2121], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4723, 0.5277], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3467, 0.6533], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4422, 0.5578], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6633, 0.3367], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6122, 0.3878], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4451, 0.5549], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5063, 0.4937], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5847, 0.4153], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3331, 0.6669], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6031, 0.3969], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6501, 0.3499], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5733, 0.4267], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5102, 0.4898], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3623, 0.6377], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4837, 0.5163], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5545, 0.4455], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3991, 0.6009], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5823, 0.4177], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5077, 0.4923], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 37.500% (loss: 0.723) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4202, 0.5798], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4104, 0.5896], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 16, Training ones: 16 / 10
INFO:root:[   31] train: 75.833% test: 43.750%
INFO:root:Accuracy: 0.72381, Precision: 0.72727, Recall: 0.92754, F1: 0.81529
INFO:root:Val Accuracy: 0.38462, Precision: 0.50000, Recall: 0.31250, F1: 0.38462
INFO:root:F1: 0.38462 did not improve from 0.800000011920929
INFO:root:Epoch 32
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6830, 0.3170], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5050, 0.4950], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5061, 0.4939], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4458, 0.5542], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4807, 0.5193], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4155, 0.5845], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7845, 0.2155], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6470, 0.3530], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4131, 0.5869], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2154, 0.7846], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4755, 0.5245], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3142, 0.6858], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3104, 0.6896], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4386, 0.5614], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5174, 0.4826], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3701, 0.6299], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6227, 0.3773], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3881, 0.6119], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6216, 0.3784], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2883, 0.7117], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1669, 0.8331], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6475, 0.3525], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6625, 0.3375], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7652, 0.2348], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 54.167% (loss: 0.807) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3284, 0.6716], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3216, 0.6784], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2464, 0.7536], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2726, 0.7274], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6311, 0.3689], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4010, 0.5990], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2362, 0.7638], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4327, 0.5673], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3104, 0.6896], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3322, 0.6678], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0702, 0.9298], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3565, 0.6435], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2542, 0.7458], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1388, 0.8612], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2211, 0.7789], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2809, 0.7191], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3788, 0.6212], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2884, 0.7116], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3735, 0.6265], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2098, 0.7902], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2896, 0.7104], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4260, 0.5740], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2168, 0.7832], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3661, 0.6339], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1308, 0.8692], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4019, 0.5981], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2329, 0.7671], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3357, 0.6643], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2108, 0.7892], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1974, 0.8026], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1749, 0.8251], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2534, 0.7466], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2149, 0.7851], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1281, 0.8719], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2342, 0.7658], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2638, 0.7362], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1783, 0.8217], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3109, 0.6891], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2683, 0.7317], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4960, 0.5040], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2712, 0.7288], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6258, 0.3742], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3191, 0.6809], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1139, 0.8861], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2156, 0.7844], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2337, 0.7663], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2064, 0.7936], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1713, 0.8287], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5983, 0.4017], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1325, 0.8675], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1306, 0.8694], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3889, 0.6111], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4188, 0.5812], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5116, 0.4884], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6310, 0.3690], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5473, 0.4527], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2339, 0.7661], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2299, 0.7701], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1667, 0.8333], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1855, 0.8145], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3771, 0.6229], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3716, 0.6284], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3275, 0.6725], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1914, 0.8086], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3128, 0.6872], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2120, 0.7880], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1598, 0.8402], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3574, 0.6426], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1858, 0.8142], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2861, 0.7139], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1377, 0.8623], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4606, 0.5394], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3855, 0.6145], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6933, 0.3067], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2157, 0.7843], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1713, 0.8287], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4706, 0.5294], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4746, 0.5254], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2363, 0.7637], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5256, 0.4744], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8022, 0.1978], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 20, Training ones: 69 / 85
outputs torch.Size([24]) tensor([1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4202, 0.5798], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5451, 0.4549], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5317, 0.4683], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5721, 0.4279], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7235, 0.2765], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3458, 0.6542], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2087, 0.7913], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3256, 0.6744], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5584, 0.4416], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4981, 0.5019], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3359, 0.6641], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3801, 0.6199], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4397, 0.5603], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2053, 0.7947], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3993, 0.6007], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5489, 0.4511], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4471, 0.5529], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4107, 0.5893], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2403, 0.7597], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4031, 0.5969], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4338, 0.5662], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2211, 0.7789], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4698, 0.5302], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4010, 0.5990], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 62.500% (loss: 0.676) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2906, 0.7094], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2523, 0.7477], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 6, Training ones: 16 / 20
INFO:root:[   32] train: 63.889% test: 56.250%
INFO:root:Accuracy: 0.61905, Precision: 0.67059, Recall: 0.82609, F1: 0.74026
INFO:root:Val Accuracy: 0.61538, Precision: 0.65000, Recall: 0.81250, F1: 0.72222
INFO:root:F1: 0.72222 did not improve from 0.800000011920929
INFO:root:Epoch 33
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3035, 0.6965], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3118, 0.6882], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1595, 0.8405], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2887, 0.7113], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3480, 0.6520], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4880, 0.5120], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5291, 0.4709], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5665, 0.4335], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1588, 0.8412], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1760, 0.8240], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3219, 0.6781], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2425, 0.7575], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2110, 0.7890], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2520, 0.7480], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8280, 0.1720], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3038, 0.6962], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3794, 0.6206], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5027, 0.4973], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3286, 0.6714], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3806, 0.6194], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5028, 0.4972], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8458, 0.1542], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4368, 0.5632], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4269, 0.5731], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 83.333% (loss: 0.524) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3825, 0.6175], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2242, 0.7758], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2100, 0.7900], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2378, 0.7622], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5435, 0.4565], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3027, 0.6973], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2104, 0.7896], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2825, 0.7175], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4640, 0.5360], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2837, 0.7163], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1792, 0.8208], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3856, 0.6144], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3146, 0.6854], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0990, 0.9010], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1168, 0.8832], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4172, 0.5828], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4777, 0.5223], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2032, 0.7968], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1935, 0.8065], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2701, 0.7299], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2879, 0.7121], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5512, 0.4488], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0912, 0.9088], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4061, 0.5939], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1472, 0.8528], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2379, 0.7621], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2024, 0.7976], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4919, 0.5081], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2198, 0.7802], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4458, 0.5542], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2922, 0.7078], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3535, 0.6465], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3402, 0.6598], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1735, 0.8265], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3347, 0.6653], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5153, 0.4847], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2775, 0.7225], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6606, 0.3394], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3368, 0.6632], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3385, 0.6615], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2015, 0.7985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1906, 0.8094], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3158, 0.6842], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1368, 0.8632], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2828, 0.7172], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4890, 0.5110], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1150, 0.8850], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1879, 0.8121], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4386, 0.5614], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0859, 0.9141], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0862, 0.9138], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1227, 0.8773], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6058, 0.3942], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6650, 0.3350], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5379, 0.4621], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4918, 0.5082], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1543, 0.8457], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5634, 0.4366], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2051, 0.7949], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3546, 0.6454], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5808, 0.4192], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5785, 0.4215], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7751, 0.2249], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2116, 0.7884], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6007, 0.3993], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2310, 0.7690], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3494, 0.6506], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1682, 0.8318], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4182, 0.5818], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2265, 0.7735], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5572, 0.4428], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5754, 0.4246], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5979, 0.4021], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9439, 0.0561], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2857, 0.7143], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0960, 0.9040], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1653, 0.8347], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1309, 0.8691], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4149, 0.5851], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1426, 0.8574], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9389, 0.0611], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 23, Training ones: 69 / 82
outputs torch.Size([24]) tensor([1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4300, 0.5700], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6184, 0.3816], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6569, 0.3431], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6183, 0.3817], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8624, 0.1376], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4010, 0.5990], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1015, 0.8985], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2287, 0.7713], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5576, 0.4424], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5281, 0.4719], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2678, 0.7322], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3670, 0.6330], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4051, 0.5949], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0990, 0.9010], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3197, 0.6803], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5418, 0.4582], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4981, 0.5019], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4681, 0.5319], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1755, 0.8245], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4131, 0.5869], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4877, 0.5123], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0700, 0.9300], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5321, 0.4679], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4584, 0.5416], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 62.500% (loss: 0.758) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2000, 0.8000], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1317, 0.8683], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 8, Training ones: 16 / 18
INFO:root:[   33] train: 75.833% test: 56.250%
INFO:root:Accuracy: 0.72381, Precision: 0.74390, Recall: 0.88406, F1: 0.80795
INFO:root:Val Accuracy: 0.61538, Precision: 0.66667, Recall: 0.75000, F1: 0.70588
INFO:root:F1: 0.70588 did not improve from 0.800000011920929
INFO:root:Epoch 34
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2393, 0.7607], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3158, 0.6842], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0497, 0.9503], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1844, 0.8156], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2200, 0.7800], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5706, 0.4294], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2870, 0.7130], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1386, 0.8614], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0919, 0.9081], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1163, 0.8837], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2405, 0.7595], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3068, 0.6932], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2402, 0.7598], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3663, 0.6337], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9327, 0.0673], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1090, 0.8910], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1158, 0.8842], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6047, 0.3953], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4511, 0.5489], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1445, 0.8555], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4372, 0.5628], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6245, 0.3755], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1800, 0.8200], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3079, 0.6921], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 83.333% (loss: 0.366) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1036, 0.8964], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0992, 0.9008], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0119, 0.9881], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0298, 0.9702], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8196, 0.1804], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3076, 0.6924], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0786, 0.9214], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5267, 0.4733], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0481, 0.9519], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0392, 0.9608], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0154, 0.9846], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3073, 0.6927], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0342, 0.9658], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0266, 0.9734], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0927, 0.9073], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0604, 0.9396], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0696, 0.9304], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0666, 0.9334], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1186, 0.8814], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0290, 0.9710], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1515, 0.8485], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1113, 0.8887], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0131, 0.9869], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0278, 0.9722], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0102, 0.9898], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2268, 0.7732], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0704, 0.9296], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2983, 0.7017], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0174, 0.9826], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3270, 0.6730], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1346, 0.8654], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0975, 0.9025], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0516, 0.9484], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0273, 0.9727], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0713, 0.9287], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2513, 0.7487], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0432, 0.9568], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3273, 0.6727], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1632, 0.8368], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3383, 0.6617], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0411, 0.9589], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0190, 0.9810], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0074, 0.9926], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0293, 0.9707], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1099, 0.8901], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0517, 0.9483], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0408, 0.9592], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0415, 0.9585], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1392, 0.8608], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0878, 0.9122], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2370, 0.7630], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1191, 0.8809], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5717, 0.4283], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7032, 0.2968], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4013, 0.5987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1655, 0.8345], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1383, 0.8617], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5536, 0.4464], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0266, 0.9734], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0738, 0.9262], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5277, 0.4723], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2309, 0.7691], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2211, 0.7789], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1612, 0.8388], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2513, 0.7487], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0829, 0.9171], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0784, 0.9216], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1051, 0.8949], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2303, 0.7697], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1530, 0.8470], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3871, 0.6129], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2659, 0.7341], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5824, 0.4176], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9560, 0.0440], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1709, 0.8291], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3342, 0.6658], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2223, 0.7777], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6679, 0.3321], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2958, 0.7042], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0624, 0.9376], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6161, 0.3839], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 14, Training ones: 69 / 91
outputs torch.Size([24]) tensor([0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.8541, 0.1459], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9279, 0.0721], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9583, 0.0417], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9500, 0.0500], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9358, 0.0642], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8845, 0.1155], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4126, 0.5874], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7092, 0.2908], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9035, 0.0965], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9353, 0.0647], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8009, 0.1991], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7364, 0.2636], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8607, 0.1393], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4314, 0.5686], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9337, 0.0663], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9091, 0.0909], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9128, 0.0872], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9220, 0.0780], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4894, 0.5106], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7849, 0.2151], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8992, 0.1008], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4136, 0.5864], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8971, 0.1029], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8731, 0.1269], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 37.500% (loss: 1.385) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.6566, 0.3434], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5725, 0.4275], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 22, Training ones: 16 / 4
INFO:root:[   34] train: 71.944% test: 43.750%
INFO:root:Accuracy: 0.69524, Precision: 0.70330, Recall: 0.92754, F1: 0.80000
INFO:root:Val Accuracy: 0.38462, Precision: 0.50000, Recall: 0.12500, F1: 0.20000
INFO:root:F1: 0.20000 did not improve from 0.800000011920929
INFO:root:Epoch 35
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5887, 0.4113], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7863, 0.2137], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1379, 0.8621], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3319, 0.6681], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9034, 0.0966], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9066, 0.0934], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8722, 0.1278], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8746, 0.1254], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6417, 0.3583], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3634, 0.6366], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6905, 0.3095], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7741, 0.2259], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6901, 0.3099], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8549, 0.1451], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9798, 0.0202], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3807, 0.6193], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7042, 0.2958], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9444, 0.0556], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4664, 0.5336], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7052, 0.2948], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8366, 0.1634], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7767, 0.2233], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4401, 0.5599], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2318, 0.7682], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 45.833% (loss: 0.996) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8136, 0.1864], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5657, 0.4343], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1189, 0.8811], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3541, 0.6459], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9901, 0.0099], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5554, 0.4446], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8174, 0.1826], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4995, 0.5005], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6775, 0.3225], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3081, 0.6919], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0900, 0.9100], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6456, 0.3544], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2083, 0.7917], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1765, 0.8235], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6692, 0.3308], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3907, 0.6093], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6751, 0.3249], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1323, 0.8677], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6243, 0.3757], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6954, 0.3046], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7180, 0.2820], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7644, 0.2356], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1166, 0.8834], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4984, 0.5016], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0946, 0.9054], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7120, 0.2880], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2287, 0.7713], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2958, 0.7042], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2117, 0.7883], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3175, 0.6825], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1576, 0.8424], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2955, 0.7045], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1883, 0.8117], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0675, 0.9325], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2218, 0.7782], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3478, 0.6522], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1328, 0.8672], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3897, 0.6103], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2218, 0.7782], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1855, 0.8145], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2464, 0.7536], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1607, 0.8393], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0511, 0.9489], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2096, 0.7904], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1631, 0.8369], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1646, 0.8354], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1193, 0.8807], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1293, 0.8707], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3235, 0.6765], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0179, 0.9821], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0378, 0.9622], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1589, 0.8411], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6118, 0.3882], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5583, 0.4417], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5347, 0.4653], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2956, 0.7044], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4054, 0.5946], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5027, 0.4973], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2140, 0.7860], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1659, 0.8341], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7877, 0.2123], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3144, 0.6856], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3072, 0.6928], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1628, 0.8372], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7093, 0.2907], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1628, 0.8372], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0218, 0.9782], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2069, 0.7931], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1710, 0.8290], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1605, 0.8395], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2266, 0.7734], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4749, 0.5251], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3917, 0.6083], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8922, 0.1078], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1105, 0.8895], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1012, 0.8988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0986, 0.9014], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0772, 0.9228], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0549, 0.9451], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0568, 0.9432], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4976, 0.5024], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 38, Training ones: 69 / 67
outputs torch.Size([24]) tensor([1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4896, 0.5104], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5530, 0.4470], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6429, 0.3571], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6516, 0.3484], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7419, 0.2581], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3954, 0.6046], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2180, 0.7820], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3787, 0.6213], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6228, 0.3772], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6492, 0.3508], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4161, 0.5839], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3005, 0.6995], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4753, 0.5247], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1601, 0.8399], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5137, 0.4863], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6943, 0.3057], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5178, 0.4822], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5651, 0.4349], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1797, 0.8203], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4394, 0.5606], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4406, 0.5594], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1873, 0.8127], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4451, 0.5549], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3767, 0.6233], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 45.833% (loss: 0.732) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2108, 0.7892], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2937, 0.7063], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 10, Training ones: 16 / 16
INFO:root:[   35] train: 63.889% test: 47.917%
INFO:root:Accuracy: 0.61905, Precision: 0.71642, Recall: 0.69565, F1: 0.70588
INFO:root:Val Accuracy: 0.46154, Precision: 0.56250, Recall: 0.56250, F1: 0.56250
INFO:root:F1: 0.56250 did not improve from 0.800000011920929
INFO:root:Epoch 36
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3126, 0.6874], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2583, 0.7417], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1013, 0.8987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1865, 0.8135], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3340, 0.6660], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5266, 0.4734], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3199, 0.6801], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3902, 0.6098], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1918, 0.8082], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1841, 0.8159], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4751, 0.5249], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1437, 0.8563], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1546, 0.8454], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2371, 0.7629], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7588, 0.2412], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3293, 0.6707], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2911, 0.7089], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4547, 0.5453], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3329, 0.6671], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1738, 0.8262], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6242, 0.3758], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4231, 0.5769], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2310, 0.7690], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5072, 0.4928], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 83.333% (loss: 0.422) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6218, 0.3782], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1329, 0.8671], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0794, 0.9206], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6037, 0.3963], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8394, 0.1606], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5189, 0.4811], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2337, 0.7663], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5351, 0.4649], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5742, 0.4258], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4709, 0.5291], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0370, 0.9630], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4960, 0.5040], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1648, 0.8352], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0761, 0.9239], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0951, 0.9049], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3758, 0.6242], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5320, 0.4680], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0451, 0.9549], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2541, 0.7459], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2736, 0.7264], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2163, 0.7837], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5175, 0.4825], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0662, 0.9338], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2975, 0.7025], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2111, 0.7889], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1376, 0.8624], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1151, 0.8849], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5438, 0.4562], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0978, 0.9022], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1791, 0.8209], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0737, 0.9263], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4992, 0.5008], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0915, 0.9085], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1004, 0.8996], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0986, 0.9014], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4237, 0.5763], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2669, 0.7331], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5546, 0.4454], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3353, 0.6647], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6819, 0.3181], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1140, 0.8860], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2546, 0.7454], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1384, 0.8616], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0977, 0.9023], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1720, 0.8280], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5723, 0.4277], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3258, 0.6742], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0936, 0.9064], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2651, 0.7349], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1783, 0.8217], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1053, 0.8947], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3141, 0.6859], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5429, 0.4571], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8171, 0.1829], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6037, 0.3963], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3946, 0.6054], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3590, 0.6410], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7666, 0.2334], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0390, 0.9610], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1042, 0.8958], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6881, 0.3119], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3426, 0.6574], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4879, 0.5121], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0467, 0.9533], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5602, 0.4398], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1554, 0.8446], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1335, 0.8665], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2380, 0.7620], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8029, 0.1971], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2625, 0.7375], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2705, 0.7295], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6952, 0.3048], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4216, 0.5784], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4451, 0.5549], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0936, 0.9064], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0372, 0.9628], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0993, 0.9007], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3232, 0.6768], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1173, 0.8827], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0756, 0.9244], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8900, 0.1100], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 25, Training ones: 69 / 80
outputs torch.Size([24]) tensor([1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4998, 0.5002], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6415, 0.3585], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7127, 0.2873], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7030, 0.2970], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8060, 0.1940], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3924, 0.6076], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2252, 0.7748], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3192, 0.6808], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6673, 0.3327], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6055, 0.3945], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2974, 0.7026], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4204, 0.5796], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4008, 0.5992], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1187, 0.8813], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3472, 0.6528], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7809, 0.2191], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5784, 0.4216], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5581, 0.4419], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1755, 0.8245], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5440, 0.4560], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4934, 0.5066], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0822, 0.9178], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6530, 0.3470], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5795, 0.4205], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 54.167% (loss: 0.773) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1838, 0.8162], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1819, 0.8181], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 12, Training ones: 16 / 14
INFO:root:[   36] train: 73.056% test: 52.083%
INFO:root:Accuracy: 0.72381, Precision: 0.75000, Recall: 0.86957, F1: 0.80537
INFO:root:Val Accuracy: 0.53846, Precision: 0.64286, Recall: 0.56250, F1: 0.60000
INFO:root:F1: 0.60000 did not improve from 0.800000011920929
INFO:root:Epoch 37
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2707, 0.7293], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3593, 0.6407], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0365, 0.9635], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1681, 0.8319], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2457, 0.7543], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2896, 0.7104], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5123, 0.4877], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3269, 0.6731], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0958, 0.9042], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4230, 0.5770], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4530, 0.5470], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2486, 0.7514], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2871, 0.7129], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1949, 0.8051], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8235, 0.1765], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1420, 0.8580], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5048, 0.4952], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8689, 0.1311], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3321, 0.6679], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1266, 0.8734], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5387, 0.4613], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4005, 0.5995], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1800, 0.8200], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3798, 0.6202], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 87.500% (loss: 0.372) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0965, 0.9035], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5117, 0.4883], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0498, 0.9502], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2676, 0.7324], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9865, 0.0135], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8975, 0.1025], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3186, 0.6814], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6350, 0.3650], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3745, 0.6255], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1054, 0.8946], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0221, 0.9779], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3258, 0.6742], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5438, 0.4562], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0249, 0.9751], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0824, 0.9176], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5221, 0.4779], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4146, 0.5854], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0315, 0.9685], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2631, 0.7369], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1523, 0.8477], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4743, 0.5257], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5344, 0.4656], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0245, 0.9755], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3455, 0.6545], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0247, 0.9753], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7992, 0.2008], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3112, 0.6888], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1932, 0.8068], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1472, 0.8528], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1571, 0.8429], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3422, 0.6578], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8012, 0.1988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3147, 0.6853], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0164, 0.9836], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1764, 0.8236], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5630, 0.4370], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2315, 0.7685], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5082, 0.4918], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3031, 0.6969], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8660, 0.1340], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0618, 0.9382], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0471, 0.9529], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0072, 0.9928], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5665, 0.4335], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0596, 0.9404], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2019, 0.7981], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0721, 0.9279], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1497, 0.8503], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8535, 0.1465], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0265, 0.9735], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0082, 0.9918], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0707, 0.9293], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1101, 0.8899], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9324, 0.0676], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3904, 0.6096], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0886, 0.9114], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6061, 0.3939], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7265, 0.2735], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0347, 0.9653], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0654, 0.9346], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7269, 0.2731], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1889, 0.8111], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9719, 0.0281], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0216, 0.9784], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5915, 0.4085], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1933, 0.8067], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1393, 0.8608], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0645, 0.9355], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3773, 0.6227], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1078, 0.8922], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0803, 0.9197], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7804, 0.2196], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6553, 0.3447], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9656, 0.0344], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0626, 0.9374], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0624, 0.9376], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1642, 0.8358], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0237, 0.9763], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3627, 0.6373], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0489, 0.9511], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9785, 0.0215], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 29, Training ones: 69 / 76
outputs torch.Size([24]) tensor([1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4417, 0.5583], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7250, 0.2750], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7824, 0.2176], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8164, 0.1836], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9504, 0.0496], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5246, 0.4754], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2083, 0.7917], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1384, 0.8616], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3513, 0.6487], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3801, 0.6199], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1102, 0.8898], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5341, 0.4659], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1949, 0.8051], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0813, 0.9187], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3249, 0.6751], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5624, 0.4376], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6420, 0.3580], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4113, 0.5887], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1276, 0.8724], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4966, 0.5034], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6203, 0.3797], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0252, 0.9748], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9335, 0.0665], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9209, 0.0791], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 50.000% (loss: 0.887) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1519, 0.8481], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0800, 0.9200], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 11, Training ones: 16 / 15
INFO:root:[   37] train: 74.167% test: 50.000%
INFO:root:Accuracy: 0.70476, Precision: 0.75000, Recall: 0.82609, F1: 0.78621
INFO:root:Val Accuracy: 0.50000, Precision: 0.60000, Recall: 0.56250, F1: 0.58065
INFO:root:F1: 0.58065 did not improve from 0.800000011920929
INFO:root:Epoch 38
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2653, 0.7347], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0389, 0.9611], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0398, 0.9602], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5032, 0.4968], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1837, 0.8163], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9053, 0.0947], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2710, 0.7290], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4072, 0.5928], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0105, 0.9895], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2338, 0.7662], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0837, 0.9163], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0887, 0.9113], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1782, 0.8218], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6450, 0.3550], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6365, 0.3635], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1824, 0.8176], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0403, 0.9597], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1584, 0.8416], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2586, 0.7414], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0156, 0.9844], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8109, 0.1891], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6047, 0.3953], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2095, 0.7905], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2395, 0.7605], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 75.000% (loss: 0.578) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0438, 0.9562], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0515, 0.9485], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0074, 0.9926], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0248, 0.9752], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8362, 0.1638], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8978, 0.1022], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8859, 0.1141], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9292, 0.0708], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0164, 0.9836], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0136, 0.9864], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0047, 0.9953], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0352, 0.9648], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0236, 0.9764], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0131, 0.9869], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1506, 0.8494], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1015, 0.8985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3066, 0.6934], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0041, 0.9959], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1317, 0.8683], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1525, 0.8475], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0187, 0.9813], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1182, 0.8818], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0107, 0.9893], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0338, 0.9662], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0048, 0.9952], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7604, 0.2396], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0561, 0.9439], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2440, 0.7560], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0073, 0.9927], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1178, 0.8822], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0610, 0.9390], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0755, 0.9245], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0252, 0.9748], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0084, 0.9916], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0579, 0.9421], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0231, 0.9769], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2876, 0.7124], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0203, 0.9797], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0126, 0.9874], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6142, 0.3858], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0097, 0.9903], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0230, 0.9770], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0456, 0.9544], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0447, 0.9553], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0587, 0.9413], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0417, 0.9583], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3685, 0.6315], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0946, 0.9054], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1755, 0.8245], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0106, 0.9894], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0143, 0.9857], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0978, 0.9022], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1657, 0.8343], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1820, 0.8180], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7773, 0.2227], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0595, 0.9405], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0637, 0.9363], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7976, 0.2024], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0169, 0.9831], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0517, 0.9483], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6695, 0.3305], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6062, 0.3938], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0583, 0.9417], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0109, 0.9891], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7814, 0.2186], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0364, 0.9636], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0484, 0.9516], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0540, 0.9460], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4233, 0.5767], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1470, 0.8530], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0363, 0.9637], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8376, 0.1624], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2344, 0.7656], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6392, 0.3608], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0907, 0.9093], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0683, 0.9317], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0731, 0.9269], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2168, 0.7832], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3480, 0.6520], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0256, 0.9744], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9470, 0.0530], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 20, Training ones: 69 / 85
outputs torch.Size([24]) tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7391, 0.2609], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7387, 0.2613], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7966, 0.2034], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8907, 0.1093], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9830, 0.0170], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6377, 0.3623], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6613, 0.3387], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5395, 0.4605], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6230, 0.3770], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6619, 0.3381], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4387, 0.5613], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6701, 0.3299], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5380, 0.4620], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3864, 0.6136], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6147, 0.3853], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8116, 0.1884], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7169, 0.2831], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5943, 0.4057], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3449, 0.6551], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6264, 0.3736], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6957, 0.3043], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1943, 0.8057], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9432, 0.0568], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9144, 0.0856], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 37.500% (loss: 0.898) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4739, 0.5261], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4363, 0.5637], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 20, Training ones: 16 / 6
INFO:root:[   38] train: 73.611% test: 43.750%
INFO:root:Accuracy: 0.71429, Precision: 0.72941, Recall: 0.89855, F1: 0.80519
INFO:root:Val Accuracy: 0.38462, Precision: 0.50000, Recall: 0.18750, F1: 0.27273
INFO:root:F1: 0.27273 did not improve from 0.800000011920929
INFO:root:Epoch 39
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5349, 0.4651], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4872, 0.5128], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5089, 0.4911], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6485, 0.3515], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4056, 0.5944], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4256, 0.5744], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6635, 0.3365], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4443, 0.5557], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1984, 0.8016], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1715, 0.8285], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6151, 0.3849], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5588, 0.4412], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4051, 0.5949], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2529, 0.7471], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9438, 0.0562], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2782, 0.7218], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8372, 0.1628], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8377, 0.1623], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2691, 0.7309], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5173, 0.4827], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8750, 0.1250], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7187, 0.2813], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5373, 0.4627], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6893, 0.3107], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 50.000% (loss: 0.656) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6231, 0.3769], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9018, 0.0982], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3348, 0.6652], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5157, 0.4843], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9278, 0.0722], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9798, 0.0202], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9699, 0.0301], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9615, 0.0385], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5391, 0.4609], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5598, 0.4402], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4269, 0.5731], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7737, 0.2263], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5348, 0.4652], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3532, 0.6468], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6789, 0.3211], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7530, 0.2470], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8626, 0.1374], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2684, 0.7316], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7482, 0.2518], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6126, 0.3874], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6467, 0.3533], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8718, 0.1282], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3086, 0.6914], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8647, 0.1353], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5558, 0.4442], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9474, 0.0526], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3805, 0.6195], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8680, 0.1320], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4237, 0.5763], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8789, 0.1211], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7366, 0.2634], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6679, 0.3321], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5901, 0.4099], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4038, 0.5962], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6954, 0.3046], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9698, 0.0302], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7060, 0.2940], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3779, 0.6221], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5773, 0.4227], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8710, 0.1290], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4611, 0.5389], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6077, 0.3923], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3924, 0.6076], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3644, 0.6356], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7257, 0.2743], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9141, 0.0859], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5313, 0.4687], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3241, 0.6759], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2500, 0.7500], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3143, 0.6857], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1700, 0.8300], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2961, 0.7039], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4701, 0.5299], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6826, 0.3174], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7793, 0.2207], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4534, 0.5466], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5244, 0.4756], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8264, 0.1736], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4268, 0.5732], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2337, 0.7663], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8469, 0.1531], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6933, 0.3067], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8305, 0.1695], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5635, 0.4365], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5369, 0.4631], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3264, 0.6736], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2363, 0.7637], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5059, 0.4941], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5670, 0.4330], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3620, 0.6380], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3638, 0.6362], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6589, 0.3411], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5850, 0.4150], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8736, 0.1264], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1396, 0.8604], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1303, 0.8697], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1178, 0.8822], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3663, 0.6337], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0854, 0.9146], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0739, 0.9261], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8102, 0.1898], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 64, Training ones: 69 / 41
outputs torch.Size([24]) tensor([1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2540, 0.7460], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2261, 0.7739], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3435, 0.6565], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5119, 0.4881], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2175, 0.7825], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1522, 0.8478], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1952, 0.8048], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1510, 0.8490], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1840, 0.8160], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2241, 0.7759], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1280, 0.8720], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1425, 0.8575], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1482, 0.8518], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0753, 0.9247], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1578, 0.8422], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4031, 0.5969], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2101, 0.7899], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1785, 0.8215], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0612, 0.9388], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1519, 0.8481], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1753, 0.8247], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0404, 0.9596], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6460, 0.3540], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4726, 0.5274], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 70.833% (loss: 0.776) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0953, 0.9047], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1105, 0.8895], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 2, Training ones: 16 / 24
INFO:root:[   39] train: 68.333% test: 60.417%
INFO:root:Accuracy: 0.63810, Precision: 0.87805, Recall: 0.52174, F1: 0.65455
INFO:root:Val Accuracy: 0.69231, Precision: 0.66667, Recall: 1.00000, F1: 0.80000
INFO:root:F1: 0.80000 did not improve from 0.800000011920929
INFO:root:Epoch 40
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0939, 0.9061], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1566, 0.8434], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0295, 0.9705], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0565, 0.9435], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0622, 0.9378], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1430, 0.8570], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1519, 0.8481], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0924, 0.9076], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0955, 0.9045], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0570, 0.9430], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1521, 0.8479], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2383, 0.7617], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1076, 0.8924], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1637, 0.8363], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8639, 0.1361], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1095, 0.8905], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1091, 0.8909], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2170, 0.7830], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1642, 0.8358], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0989, 0.9011], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1634, 0.8366], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2611, 0.7389], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0936, 0.9064], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1229, 0.8771], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 87.500% (loss: 0.331) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0575, 0.9425], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0658, 0.9342], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0264, 0.9736], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1147, 0.8853], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7365, 0.2635], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2134, 0.7866], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3127, 0.6873], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2654, 0.7346], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0778, 0.9222], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0670, 0.9330], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0174, 0.9826], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0641, 0.9359], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0401, 0.9599], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0089, 0.9911], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0309, 0.9691], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0546, 0.9454], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1068, 0.8932], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1098, 0.8902], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2123, 0.7877], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1214, 0.8786], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3490, 0.6510], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0230, 0.9770], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0673, 0.9327], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0173, 0.9827], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3101, 0.6899], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0374, 0.9626], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2075, 0.7925], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0969, 0.9031], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0462, 0.9538], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1043, 0.8957], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3004, 0.6996], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0380, 0.9620], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0246, 0.9754], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0610, 0.9390], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3877, 0.6123], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0909, 0.9091], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5809, 0.4191], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2282, 0.7718], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0773, 0.9227], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0624, 0.9376], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0502, 0.9498], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0198, 0.9802], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0275, 0.9725], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0690, 0.9310], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0822, 0.9178], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0650, 0.9350], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0515, 0.9485], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1454, 0.8546], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0536, 0.9464], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0727, 0.9273], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1101, 0.8899], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4213, 0.5787], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8269, 0.1731], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4456, 0.5544], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0441, 0.9559], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1433, 0.8567], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2339, 0.7661], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0180, 0.9820], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1680, 0.8320], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5465, 0.4535], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5814, 0.4186], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7839, 0.2161], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0565, 0.9435], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5576, 0.4424], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1146, 0.8854], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2377, 0.7623], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2740, 0.7260], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4972, 0.5028], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0844, 0.9156], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1714, 0.8286], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2827, 0.7173], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8223, 0.1777], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5946, 0.4054], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2315, 0.7685], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1553, 0.8447], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2505, 0.7495], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1118, 0.8882], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1283, 0.8717], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0225, 0.9775], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9960, 0.0040], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 11, Training ones: 69 / 94
outputs torch.Size([24]) tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9358, 0.0642], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9160, 0.0840], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9919, 0.0081], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9925, 0.0075], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9893, 0.0107], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8711, 0.1289], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8085, 0.1915], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8978, 0.1022], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8403, 0.1597], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9465, 0.0535], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7898, 0.2102], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6844, 0.3156], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8856, 0.1144], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5666, 0.4334], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8736, 0.1264], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9602, 0.0398], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9563, 0.0437], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9169, 0.0831], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5920, 0.4080], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7984, 0.2016], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9166, 0.0834], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1829, 0.8171], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9691, 0.0309], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9343, 0.0657], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 33.333% (loss: 1.611) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.6328, 0.3672], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6769, 0.3231], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 25, Training ones: 16 / 1
INFO:root:[   40] train: 77.500% test: 41.667%
INFO:root:Accuracy: 0.74286, Precision: 0.72340, Recall: 0.98551, F1: 0.83436
INFO:root:Val Accuracy: 0.34615, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.800000011920929
INFO:root:Epoch 41
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6484, 0.3516], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4999, 0.5001], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2728, 0.7272], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1004, 0.8996], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8531, 0.1469], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2647, 0.7353], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9224, 0.0776], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5752, 0.4248], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4530, 0.5470], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5398, 0.4602], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7987, 0.2013], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4003, 0.5997], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8632, 0.1368], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6160, 0.3840], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9975, 0.0025], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6212, 0.3788], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8902, 0.1098], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9949, 0.0051], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9033, 0.0967], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8912, 0.1088], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9580, 0.0420], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6986, 0.3014], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1246, 0.8754], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2115, 0.7885], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 41.667% (loss: 0.983) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6217, 0.3783], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1151, 0.8849], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2930, 0.7070], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3696, 0.6304], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9964, 0.0036], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9841, 0.0159], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9036, 0.0964], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9704, 0.0296], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9898, 0.0102], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9737, 0.0263], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0463, 0.9537], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9107, 0.0893], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0101, 0.9899], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1158, 0.8842], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5234, 0.4766], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8054, 0.1946], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6180, 0.3820], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2409, 0.7591], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7721, 0.2279], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7816, 0.2184], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4966, 0.5034], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8968, 0.1032], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1219, 0.8781], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5180, 0.4820], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0525, 0.9475], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4932, 0.5068], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0621, 0.9379], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5212, 0.4788], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0669, 0.9331], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4917, 0.5083], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6373, 0.3627], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9243, 0.0757], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2914, 0.7086], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0095, 0.9905], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0434, 0.9566], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8608, 0.1392], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7647, 0.2353], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8581, 0.1419], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0248, 0.9752], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9848, 0.0152], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1130, 0.8870], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2075, 0.7925], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0126, 0.9874], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0273, 0.9727], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5038, 0.4962], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3024, 0.6976], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1794, 0.8206], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4767, 0.5233], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0417, 0.9583], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0175, 0.9825], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0097, 0.9903], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0298, 0.9702], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1086, 0.8914], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1635, 0.8365], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4521, 0.5479], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0220, 0.9780], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3264, 0.6736], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5593, 0.4407], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0335, 0.9665], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0927, 0.9073], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8193, 0.1807], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0939, 0.9061], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2734, 0.7266], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0088, 0.9912], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2077, 0.7923], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0544, 0.9456], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0204, 0.9796], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0331, 0.9669], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0732, 0.9268], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2521, 0.7479], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1174, 0.8826], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3848, 0.6152], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0972, 0.9028], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6604, 0.3396], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0299, 0.9701], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0428, 0.9572], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0261, 0.9739], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0331, 0.9669], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0390, 0.9610], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0113, 0.9887], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8052, 0.1948], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 43, Training ones: 69 / 62
outputs torch.Size([24]) tensor([1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4938, 0.5062], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3376, 0.6624], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7792, 0.2208], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8192, 0.1808], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8747, 0.1253], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2589, 0.7411], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2161, 0.7839], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3720, 0.6280], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4332, 0.5668], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4760, 0.5240], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4330, 0.5670], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1635, 0.8365], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4220, 0.5780], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1053, 0.8947], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8664, 0.1336], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7158, 0.2842], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4174, 0.5826], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4691, 0.5309], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1462, 0.8538], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3982, 0.6018], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2918, 0.7082], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0253, 0.9747], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5351, 0.4649], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3610, 0.6390], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 62.500% (loss: 0.829) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1077, 0.8923], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2054, 0.7946], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 6, Training ones: 16 / 20
INFO:root:[   41] train: 59.444% test: 56.250%
INFO:root:Accuracy: 0.55238, Precision: 0.67742, Recall: 0.60870, F1: 0.64122
INFO:root:Val Accuracy: 0.61538, Precision: 0.65000, Recall: 0.81250, F1: 0.72222
INFO:root:F1: 0.72222 did not improve from 0.800000011920929
INFO:root:Epoch 42
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2000, 0.8000], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4930, 0.5070], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0445, 0.9555], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0732, 0.9268], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4670, 0.5330], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6783, 0.3217], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1135, 0.8865], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4520, 0.5480], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0417, 0.9583], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0824, 0.9176], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4553, 0.5447], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0463, 0.9537], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2186, 0.7814], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1717, 0.8283], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7826, 0.2174], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1074, 0.8926], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0592, 0.9408], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6866, 0.3134], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3144, 0.6856], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1501, 0.8499], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7491, 0.2509], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5984, 0.4016], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2165, 0.7835], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3569, 0.6431], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 87.500% (loss: 0.332) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3736, 0.6264], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0216, 0.9784], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0143, 0.9857], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1054, 0.8946], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9945, 0.0055], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3095, 0.6905], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1112, 0.8888], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1887, 0.8113], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1851, 0.8149], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1509, 0.8491], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0115, 0.9885], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4132, 0.5868], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0332, 0.9668], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0075, 0.9925], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0387, 0.9613], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4282, 0.5718], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2562, 0.7438], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0045, 0.9955], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1307, 0.8693], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1501, 0.8499], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3564, 0.6436], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3495, 0.6505], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0128, 0.9872], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0199, 0.9801], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0224, 0.9776], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1889, 0.8111], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0336, 0.9664], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5335, 0.4665], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0632, 0.9368], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2926, 0.7074], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3723, 0.6277], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4838, 0.5162], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0708, 0.9292], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0541, 0.9459], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2765, 0.7235], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4815, 0.5185], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1675, 0.8325], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5537, 0.4463], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0587, 0.9413], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3061, 0.6939], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3067, 0.6933], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0364, 0.9636], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0253, 0.9747], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0120, 0.9880], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0600, 0.9400], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0465, 0.9535], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0647, 0.9353], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0182, 0.9818], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2509, 0.7491], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0168, 0.9832], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0140, 0.9860], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0764, 0.9236], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6846, 0.3154], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9611, 0.0389], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6736, 0.3264], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1301, 0.8699], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7357, 0.2643], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1787, 0.8213], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0096, 0.9904], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2665, 0.7335], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9429, 0.0571], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5680, 0.4320], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9964, 0.0036], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0342, 0.9658], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1427, 0.8573], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0485, 0.9515], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1224, 0.8776], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3007, 0.6993], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7908, 0.2092], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1985, 0.8015], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3661, 0.6339], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7751, 0.2249], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7499, 0.2501], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7546, 0.2454], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6680, 0.3320], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1412, 0.8588], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0796, 0.9204], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0545, 0.9455], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0654, 0.9346], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0189, 0.9811], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7092, 0.2908], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 21, Training ones: 69 / 84
outputs torch.Size([24]) tensor([1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4281, 0.5719], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2158, 0.7842], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3091, 0.6909], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6000, 0.4000], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4431, 0.5569], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1172, 0.8828], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2728, 0.7272], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3349, 0.6651], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4312, 0.5688], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3563, 0.6437], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4246, 0.5754], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1553, 0.8447], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3101, 0.6899], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1102, 0.8898], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3267, 0.6733], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6259, 0.3741], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2062, 0.7938], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3573, 0.6427], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1156, 0.8844], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3923, 0.6077], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1466, 0.8534], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0349, 0.9651], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2313, 0.7687], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1383, 0.8617], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 62.500% (loss: 0.713) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1095, 0.8905], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2035, 0.7965], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 2, Training ones: 16 / 24
INFO:root:[   42] train: 74.444% test: 56.250%
INFO:root:Accuracy: 0.72381, Precision: 0.73810, Recall: 0.89855, F1: 0.81046
INFO:root:Val Accuracy: 0.61538, Precision: 0.62500, Recall: 0.93750, F1: 0.75000
INFO:root:F1: 0.75000 did not improve from 0.800000011920929
INFO:root:Epoch 43
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2357, 0.7643], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3618, 0.6382], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1327, 0.8673], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0748, 0.9252], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1888, 0.8112], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0565, 0.9435], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1160, 0.8840], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4368, 0.5632], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2429, 0.7571], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1776, 0.8224], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2733, 0.7267], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1569, 0.8431], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1041, 0.8959], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2096, 0.7904], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7960, 0.2040], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1104, 0.8896], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2582, 0.7418], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4251, 0.5749], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1762, 0.8238], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2759, 0.7241], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6253, 0.3747], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5089, 0.4911], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1406, 0.8594], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4263, 0.5737], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 87.500% (loss: 0.320) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1035, 0.8965], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0749, 0.9251], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0146, 0.9854], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1493, 0.8507], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8161, 0.1839], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1556, 0.8444], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1289, 0.8711], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2310, 0.7690], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2240, 0.7760], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1808, 0.8192], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0120, 0.9880], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1412, 0.8588], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0239, 0.9761], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0172, 0.9828], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0694, 0.9306], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1518, 0.8482], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1751, 0.8249], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0437, 0.9563], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1020, 0.8980], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2350, 0.7650], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0586, 0.9414], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2221, 0.7779], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0238, 0.9762], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0463, 0.9537], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0241, 0.9759], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2062, 0.7938], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0419, 0.9581], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3699, 0.6301], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0711, 0.9289], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1637, 0.8363], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1080, 0.8920], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5380, 0.4620], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0682, 0.9318], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0308, 0.9692], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1856, 0.8144], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7645, 0.2355], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0494, 0.9506], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1851, 0.8149], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1274, 0.8726], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8377, 0.1623], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1015, 0.8985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2191, 0.7809], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0054, 0.9946], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0425, 0.9575], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1682, 0.8318], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1413, 0.8587], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0980, 0.9020], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0543, 0.9457], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3499, 0.6501], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0213, 0.9787], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0282, 0.9718], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1848, 0.8152], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2596, 0.7404], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7304, 0.2696], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9446, 0.0554], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2465, 0.7535], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1761, 0.8239], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5445, 0.4555], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0367, 0.9633], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0859, 0.9141], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7778, 0.2222], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5582, 0.4418], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8024, 0.1976], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0853, 0.9147], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8059, 0.1941], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4431, 0.5569], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0996, 0.9004], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1316, 0.8684], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1498, 0.8502], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0537, 0.9463], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3249, 0.6751], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4921, 0.5079], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9384, 0.0616], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9814, 0.0186], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1082, 0.8918], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2373, 0.7627], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0459, 0.9541], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0763, 0.9237], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0392, 0.9608], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0095, 0.9905], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9979, 0.0021], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 17, Training ones: 69 / 88
outputs torch.Size([24]) tensor([0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.6211, 0.3789], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2778, 0.7222], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4763, 0.5237], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9970, 0.0030], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8870, 0.1130], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0770, 0.9230], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3583, 0.6417], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3676, 0.6324], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3619, 0.6381], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3425, 0.6575], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3690, 0.6310], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1040, 0.8960], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1421, 0.8579], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0657, 0.9343], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2042, 0.7958], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9553, 0.0447], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3767, 0.6233], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2841, 0.7159], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0569, 0.9431], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3202, 0.6798], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2516, 0.7484], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0251, 0.9749], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9567, 0.0433], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6535, 0.3465], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 62.500% (loss: 0.746) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0704, 0.9296], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1556, 0.8444], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 6, Training ones: 16 / 20
INFO:root:[   43] train: 77.500% test: 56.250%
INFO:root:Accuracy: 0.74286, Precision: 0.73864, Recall: 0.94203, F1: 0.82803
INFO:root:Val Accuracy: 0.61538, Precision: 0.65000, Recall: 0.81250, F1: 0.72222
INFO:root:F1: 0.72222 did not improve from 0.800000011920929
INFO:root:Epoch 44
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0687, 0.9313], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5327, 0.4673], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0785, 0.9215], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0124, 0.9876], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4177, 0.5823], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9021, 0.0979], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0950, 0.9050], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3948, 0.6052], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0849, 0.9151], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0203, 0.9797], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2851, 0.7149], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1654, 0.8346], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1019, 0.8981], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2266, 0.7734], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8676, 0.1324], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0649, 0.9351], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1093, 0.8907], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2956, 0.7044], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3183, 0.6817], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0594, 0.9406], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4039, 0.5961], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8329, 0.1671], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0432, 0.9568], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3947, 0.6053], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 83.333% (loss: 0.437) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0637, 0.9363], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0936, 0.9064], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0083, 0.9917], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1519, 0.8481], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9813, 0.0187], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9847, 0.0153], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2422, 0.7578], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0270, 0.9730], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4490, 0.5510], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7007, 0.2993], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0333, 0.9667], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3782, 0.6218], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0495, 0.9505], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0493, 0.9507], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0294, 0.9706], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1074, 0.8926], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0505, 0.9495], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3382, 0.6618], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3674, 0.6326], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1427, 0.8573], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1241, 0.8759], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0286, 0.9714], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0404, 0.9596], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0087, 0.9913], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1336, 0.8664], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0169, 0.9831], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4804, 0.5196], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0282, 0.9718], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0515, 0.9485], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0923, 0.9077], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0942, 0.9058], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0319, 0.9681], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0245, 0.9755], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2712, 0.7288], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0767, 0.9233], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1122, 0.8878], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2804, 0.7196], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1194, 0.8806], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3892, 0.6108], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0455, 0.9545], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0455, 0.9545], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0071, 0.9929], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0318, 0.9682], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0287, 0.9713], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0487, 0.9513], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0224, 0.9776], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0081, 0.9919], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0765, 0.9235], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0043, 0.9957], device='cuda:0')
Training Output torch.Size([2]) tensor([9.6975e-04, 9.9903e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0819, 0.9181], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1854, 0.8146], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4150, 0.5850], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4865, 0.5135], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4457, 0.5543], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1716, 0.8284], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5622, 0.4378], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0058, 0.9942], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1726, 0.8274], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1683, 0.8317], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5982, 0.4018], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6524, 0.3476], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0720, 0.9280], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4131, 0.5869], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1194, 0.8806], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0089, 0.9911], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1159, 0.8841], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2113, 0.7887], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1747, 0.8253], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0307, 0.9693], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5153, 0.4847], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9324, 0.0676], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8641, 0.1359], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0627, 0.9373], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0185, 0.9815], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0207, 0.9793], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0119, 0.9881], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0393, 0.9607], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0126, 0.9874], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6996, 0.3004], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 14, Training ones: 69 / 91
outputs torch.Size([24]) tensor([0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.6822, 0.3178], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3942, 0.6058], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4183, 0.5817], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9306, 0.0694], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4794, 0.5206], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0766, 0.9234], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5534, 0.4466], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5888, 0.4112], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5940, 0.4060], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4854, 0.5146], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6397, 0.3603], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1419, 0.8581], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2291, 0.7709], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1185, 0.8815], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2797, 0.7203], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9109, 0.0891], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3874, 0.6126], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4244, 0.5756], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1073, 0.8927], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4879, 0.5121], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2961, 0.7039], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0426, 0.9574], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6066, 0.3934], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3207, 0.6793], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 70.833% (loss: 0.692) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1213, 0.8787], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2911, 0.7089], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 8, Training ones: 16 / 18
INFO:root:[   44] train: 73.333% test: 60.417%
INFO:root:Accuracy: 0.69524, Precision: 0.70330, Recall: 0.92754, F1: 0.80000
INFO:root:Val Accuracy: 0.69231, Precision: 0.72222, Recall: 0.81250, F1: 0.76471
INFO:root:F1: 0.76471 did not improve from 0.800000011920929
INFO:root:Epoch 45
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2314, 0.7686], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7718, 0.2282], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1452, 0.8548], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0284, 0.9716], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1066, 0.8934], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0598, 0.9402], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2106, 0.7894], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3107, 0.6893], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0478, 0.9522], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1279, 0.8721], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4741, 0.5259], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2648, 0.7352], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1426, 0.8574], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2257, 0.7743], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8216, 0.1784], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1201, 0.8799], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1405, 0.8595], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6322, 0.3678], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3283, 0.6717], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1381, 0.8619], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3062, 0.6938], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7410, 0.2590], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0393, 0.9607], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4307, 0.5693], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 91.667% (loss: 0.319) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3615, 0.6385], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4014, 0.5986], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2010, 0.7990], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5973, 0.4027], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9981, 0.0019], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9756, 0.0244], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8625, 0.1375], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4422, 0.5578], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9750, 0.0250], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5137, 0.4863], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0421, 0.9579], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4750, 0.5250], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1581, 0.8419], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0193, 0.9807], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1261, 0.8739], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7463, 0.2537], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5088, 0.4912], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1160, 0.8840], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3497, 0.6503], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9276, 0.0724], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2320, 0.7680], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7552, 0.2448], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1144, 0.8856], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1974, 0.8026], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1528, 0.8472], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6836, 0.3164], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3331, 0.6669], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6203, 0.3797], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3584, 0.6416], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5005, 0.4995], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6927, 0.3073], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4248, 0.5752], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0127, 0.9873], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1426, 0.8574], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5963, 0.4037], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2713, 0.7287], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5808, 0.4192], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7223, 0.2777], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6226, 0.3774], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5023, 0.4977], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1614, 0.8386], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1437, 0.8563], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0501, 0.9499], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0469, 0.9531], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3091, 0.6909], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7065, 0.2935], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7935, 0.2065], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1822, 0.8178], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5374, 0.4626], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0573, 0.9427], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0297, 0.9703], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2516, 0.7484], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6114, 0.3886], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9815, 0.0185], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7055, 0.2945], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8156, 0.1844], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1755, 0.8245], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9502, 0.0498], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1270, 0.8730], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6753, 0.3247], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7979, 0.2021], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7759, 0.2241], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9828, 0.0172], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0192, 0.9808], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3841, 0.6159], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6614, 0.3386], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0837, 0.9163], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4651, 0.5349], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7786, 0.2214], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1488, 0.8512], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3473, 0.6527], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8837, 0.1163], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9456, 0.0544], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9681, 0.0319], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1956, 0.8044], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0375, 0.9625], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0628, 0.9372], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2295, 0.7705], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2092, 0.7908], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0201, 0.9799], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9972, 0.0028], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 41, Training ones: 69 / 64
outputs torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4755, 0.5245], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3028, 0.6972], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1859, 0.8141], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8471, 0.1529], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7596, 0.2404], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0426, 0.9574], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3009, 0.6991], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2262, 0.7738], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3865, 0.6135], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2233, 0.7767], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4567, 0.5433], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0839, 0.9161], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0861, 0.9139], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0613, 0.9387], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1126, 0.8874], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8213, 0.1787], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2365, 0.7635], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2867, 0.7133], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0650, 0.9350], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3543, 0.6457], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1607, 0.8393], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0095, 0.9905], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5352, 0.4648], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2595, 0.7405], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 70.833% (loss: 0.681) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0761, 0.9239], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1311, 0.8689], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 4, Training ones: 16 / 22
INFO:root:[   45] train: 75.833% test: 60.417%
INFO:root:Accuracy: 0.72381, Precision: 0.81250, Recall: 0.75362, F1: 0.78195
INFO:root:Val Accuracy: 0.69231, Precision: 0.68182, Recall: 0.93750, F1: 0.78947
INFO:root:F1: 0.78947 did not improve from 0.800000011920929
INFO:root:Epoch 46
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0740, 0.9260], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5956, 0.4044], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0328, 0.9672], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0860, 0.9140], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1372, 0.8628], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0316, 0.9684], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3707, 0.6293], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1676, 0.8324], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0158, 0.9842], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1972, 0.8028], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1868, 0.8132], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0363, 0.9637], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0466, 0.9534], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0252, 0.9748], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9558, 0.0442], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1112, 0.8888], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1742, 0.8258], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4010, 0.5990], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4754, 0.5246], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0757, 0.9243], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7869, 0.2131], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3188, 0.6812], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0555, 0.9445], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0811, 0.9189], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 95.833% (loss: 0.202) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0249, 0.9751], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0951, 0.9049], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0138, 0.9862], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1038, 0.8962], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8313, 0.1687], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5360, 0.4640], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0711, 0.9289], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1103, 0.8897], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8547, 0.1453], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0893, 0.9107], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0135, 0.9865], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0138, 0.9862], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0219, 0.9781], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0039, 0.9961], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0699, 0.9301], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0771, 0.9229], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1829, 0.8171], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0106, 0.9894], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0317, 0.9683], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3200, 0.6800], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0467, 0.9533], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0746, 0.9254], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0265, 0.9735], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0342, 0.9658], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0206, 0.9794], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0878, 0.9122], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1708, 0.8292], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2981, 0.7019], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0249, 0.9751], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1522, 0.8478], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4565, 0.5435], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0249, 0.9751], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0305, 0.9695], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0565, 0.9435], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0303, 0.9697], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2564, 0.7436], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0740, 0.9260], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0809, 0.9191], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0416, 0.9584], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1457, 0.8543], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0275, 0.9725], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0075, 0.9925], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0109, 0.9891], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0195, 0.9805], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0308, 0.9692], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0627, 0.9373], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0056, 0.9944], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0065, 0.9935], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0730, 0.9270], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0065, 0.9935], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0629, 0.9371], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1505, 0.8495], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2886, 0.7114], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1027, 0.8973], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0205, 0.9795], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0384, 0.9616], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4213, 0.5787], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0120, 0.9880], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1303, 0.8697], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0707, 0.9293], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4004, 0.5996], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5987, 0.4013], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0038, 0.9962], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1321, 0.8679], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0158, 0.9842], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0074, 0.9926], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0955, 0.9045], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0511, 0.9489], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0558, 0.9442], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0088, 0.9912], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0842, 0.9158], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2391, 0.7609], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5508, 0.4492], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0058, 0.9942], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0288, 0.9712], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0232, 0.9768], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0550, 0.9450], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0465, 0.9535], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0282, 0.9718], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8989, 0.1011], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 9, Training ones: 69 / 96
outputs torch.Size([24]) tensor([0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5320, 0.4680], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5565, 0.4435], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2679, 0.7321], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9265, 0.0735], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2875, 0.7125], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0723, 0.9277], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2993, 0.7007], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1677, 0.8323], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3705, 0.6295], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2291, 0.7709], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5508, 0.4492], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1124, 0.8876], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0704, 0.9296], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0922, 0.9078], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0732, 0.9268], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8684, 0.1316], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4794, 0.5206], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4053, 0.5947], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0823, 0.9177], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4245, 0.5755], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2885, 0.7115], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0060, 0.9940], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7700, 0.2300], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5267, 0.4733], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 58.333% (loss: 0.767) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1059, 0.8941], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1291, 0.8709], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 7, Training ones: 16 / 19
INFO:root:[   46] train: 76.111% test: 54.167%
INFO:root:Accuracy: 0.74286, Precision: 0.71875, Recall: 1.00000, F1: 0.83636
INFO:root:Val Accuracy: 0.57692, Precision: 0.63158, Recall: 0.75000, F1: 0.68571
INFO:root:F1: 0.68571 did not improve from 0.800000011920929
INFO:root:Epoch 47
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3891, 0.6109], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8571, 0.1429], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0451, 0.9549], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1162, 0.8838], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2563, 0.7437], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2249, 0.7751], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2135, 0.7865], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0909, 0.9091], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0200, 0.9800], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0202, 0.9798], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0628, 0.9372], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1957, 0.8043], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5420, 0.4580], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2595, 0.7405], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9738, 0.0262], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0682, 0.9318], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0439, 0.9561], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5599, 0.4401], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1983, 0.8017], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0458, 0.9542], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9727, 0.0273], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5073, 0.4927], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2113, 0.7887], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2857, 0.7143], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 91.667% (loss: 0.225) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2127, 0.7873], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0890, 0.9110], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0456, 0.9544], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2892, 0.7108], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9903, 0.0097], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9929, 0.0071], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5116, 0.4884], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5079, 0.4921], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0805, 0.9195], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2553, 0.7447], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2028, 0.7972], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0462, 0.9538], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3741, 0.6259], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1891, 0.8109], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6154, 0.3846], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7392, 0.2608], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0900, 0.9100], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0108, 0.9892], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2720, 0.7280], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9126, 0.0874], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5564, 0.4436], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5064, 0.4936], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0694, 0.9306], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2124, 0.7876], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3429, 0.6571], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7400, 0.2600], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2449, 0.7551], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8845, 0.1155], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1236, 0.8764], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7639, 0.2361], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2480, 0.7520], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7301, 0.2699], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3465, 0.6535], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0730, 0.9270], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6550, 0.3450], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9226, 0.0774], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2215, 0.7785], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2221, 0.7779], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8534, 0.1466], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9585, 0.0415], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6397, 0.3603], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5468, 0.4532], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0587, 0.9413], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1984, 0.8016], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3723, 0.6277], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2707, 0.7293], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1395, 0.8605], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0864, 0.9136], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3314, 0.6686], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0428, 0.9572], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0620, 0.9380], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7143, 0.2857], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9742, 0.0258], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9826, 0.0174], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9400, 0.0600], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4611, 0.5389], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1954, 0.8046], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9396, 0.0604], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0823, 0.9177], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0562, 0.9438], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7989, 0.2011], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9185, 0.0815], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8698, 0.1302], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0205, 0.9795], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9418, 0.0582], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1531, 0.8469], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1951, 0.8049], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8024, 0.1976], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8633, 0.1367], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8059, 0.1941], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2168, 0.7832], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9190, 0.0810], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8622, 0.1378], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9563, 0.0437], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1257, 0.8743], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0984, 0.9016], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1904, 0.8096], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0582, 0.9418], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2911, 0.7089], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0506, 0.9494], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9987, 0.0013], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 41, Training ones: 69 / 64
outputs torch.Size([24]) tensor([0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.6846, 0.3154], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7730, 0.2270], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5857, 0.4143], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9184, 0.0816], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4588, 0.5412], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1687, 0.8313], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3924, 0.6076], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2950, 0.7050], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6061, 0.3939], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4997, 0.5003], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7574, 0.2426], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1807, 0.8193], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2056, 0.7944], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2149, 0.7851], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1356, 0.8644], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8605, 0.1395], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6964, 0.3036], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6039, 0.3961], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1425, 0.8575], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5624, 0.4376], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5110, 0.4890], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0228, 0.9772], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7664, 0.2336], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5993, 0.4007], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 58.333% (loss: 0.775) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2231, 0.7769], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3048, 0.6952], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 13, Training ones: 16 / 13
INFO:root:[   47] train: 82.500% test: 54.167%
INFO:root:Accuracy: 0.80000, Precision: 0.87500, Recall: 0.81159, F1: 0.84211
INFO:root:Val Accuracy: 0.57692, Precision: 0.69231, Recall: 0.56250, F1: 0.62069
INFO:root:F1: 0.62069 did not improve from 0.800000011920929
INFO:root:Epoch 48
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1013, 0.8987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9182, 0.0818], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1188, 0.8812], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5184, 0.4816], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4117, 0.5883], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0973, 0.9027], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6145, 0.3855], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6847, 0.3153], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2089, 0.7911], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2837, 0.7163], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4245, 0.5755], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3770, 0.6230], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2980, 0.7020], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2441, 0.7559], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9838, 0.0162], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0929, 0.9071], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3173, 0.6827], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7868, 0.2132], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4736, 0.5264], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4630, 0.5370], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9574, 0.0426], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4258, 0.5742], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2676, 0.7324], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5114, 0.4886], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 83.333% (loss: 0.402) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2386, 0.7614], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1033, 0.8967], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0750, 0.9250], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0873, 0.9127], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8799, 0.1201], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9483, 0.0517], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3080, 0.6920], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9544, 0.0456], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4007, 0.5993], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2375, 0.7625], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0183, 0.9817], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2877, 0.7123], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1181, 0.8819], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0344, 0.9656], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2496, 0.7504], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1370, 0.8630], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5365, 0.4635], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0560, 0.9440], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3242, 0.6758], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3618, 0.6382], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4195, 0.5805], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5121, 0.4879], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2670, 0.7330], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2291, 0.7709], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0149, 0.9851], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6367, 0.3633], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0778, 0.9222], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6232, 0.3768], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1468, 0.8532], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3495, 0.6505], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1733, 0.8267], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6852, 0.3148], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1357, 0.8643], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0262, 0.9738], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2747, 0.7253], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2803, 0.7197], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1218, 0.8782], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1368, 0.8632], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2913, 0.7087], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6713, 0.3287], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1196, 0.8804], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0581, 0.9419], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0643, 0.9357], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0418, 0.9582], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1071, 0.8929], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0888, 0.9112], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0600, 0.9400], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0589, 0.9411], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2279, 0.7721], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0073, 0.9927], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0224, 0.9776], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0643, 0.9357], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2528, 0.7472], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1036, 0.8964], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5949, 0.4051], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0713, 0.9287], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0243, 0.9757], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6017, 0.3983], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0391, 0.9609], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0877, 0.9123], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7658, 0.2342], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7759, 0.2241], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8429, 0.1571], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0448, 0.9552], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1322, 0.8678], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1045, 0.8955], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1974, 0.8026], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2588, 0.7412], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2467, 0.7533], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1477, 0.8523], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0689, 0.9311], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1201, 0.8799], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2646, 0.7354], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1552, 0.8448], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0235, 0.9765], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0209, 0.9791], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0472, 0.9528], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0290, 0.9710], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0204, 0.9796], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0045, 0.9955], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9538, 0.0462], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 23, Training ones: 69 / 82
outputs torch.Size([24]) tensor([0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.6163, 0.3837], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7490, 0.2510], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6092, 0.3908], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8911, 0.1089], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8941, 0.1059], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1449, 0.8551], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2566, 0.7434], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1952, 0.8048], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5111, 0.4889], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4846, 0.5154], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6133, 0.3867], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1301, 0.8699], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1727, 0.8273], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1250, 0.8750], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4341, 0.5659], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8197, 0.1803], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6504, 0.3496], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5612, 0.4388], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0876, 0.9124], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4557, 0.5443], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4542, 0.5458], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0150, 0.9850], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7056, 0.2944], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5464, 0.4536], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 54.167% (loss: 0.779) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1433, 0.8567], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2026, 0.7974], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 12, Training ones: 16 / 14
INFO:root:[   48] train: 74.722% test: 52.083%
INFO:root:Accuracy: 0.74286, Precision: 0.75610, Recall: 0.89855, F1: 0.82119
INFO:root:Val Accuracy: 0.53846, Precision: 0.64286, Recall: 0.56250, F1: 0.60000
INFO:root:F1: 0.60000 did not improve from 0.800000011920929
INFO:root:Epoch 49
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1047, 0.8953], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5370, 0.4630], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1006, 0.8994], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1041, 0.8959], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3540, 0.6460], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0111, 0.9889], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3244, 0.6756], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2713, 0.7287], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0582, 0.9418], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1275, 0.8725], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2561, 0.7439], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0283, 0.9717], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2891, 0.7109], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1790, 0.8210], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9826, 0.0174], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0403, 0.9597], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0488, 0.9512], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9672, 0.0328], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8012, 0.1988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7577, 0.2423], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6893, 0.3107], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3106, 0.6894], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1491, 0.8509], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4962, 0.5038], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 91.667% (loss: 0.330) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1747, 0.8253], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0675, 0.9325], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0666, 0.9334], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1011, 0.8989], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8391, 0.1609], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8790, 0.1210], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5881, 0.4119], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8572, 0.1428], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6395, 0.3605], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1306, 0.8694], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0529, 0.9471], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1578, 0.8422], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1202, 0.8798], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0348, 0.9652], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7844, 0.2156], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1418, 0.8582], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8465, 0.1535], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0099, 0.9901], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0947, 0.9053], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3127, 0.6873], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5180, 0.4820], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6028, 0.3972], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1434, 0.8566], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1537, 0.8463], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0460, 0.9540], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2541, 0.7459], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1545, 0.8455], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9522, 0.0478], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1243, 0.8757], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5709, 0.4291], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2190, 0.7810], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6674, 0.3326], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0085, 0.9915], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0317, 0.9683], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2368, 0.7632], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6649, 0.3351], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5628, 0.4372], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1905, 0.8095], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7402, 0.2598], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8362, 0.1638], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0638, 0.9362], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1555, 0.8445], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0123, 0.9877], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0934, 0.9066], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1566, 0.8434], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4203, 0.5797], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0837, 0.9163], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0604, 0.9396], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3983, 0.6017], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0319, 0.9681], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0238, 0.9762], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1215, 0.8785], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3642, 0.6358], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9503, 0.0497], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7448, 0.2552], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3308, 0.6692], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0417, 0.9583], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9247, 0.0753], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0885, 0.9115], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0728, 0.9272], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9229, 0.0771], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9082, 0.0918], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8297, 0.1703], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2680, 0.7320], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7038, 0.2962], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0519, 0.9481], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0569, 0.9431], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5638, 0.4362], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4673, 0.5327], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2456, 0.7544], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0213, 0.9787], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7589, 0.2411], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8568, 0.1432], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9627, 0.0373], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1540, 0.8460], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0169, 0.9831], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0877, 0.9123], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0203, 0.9797], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0452, 0.9548], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0197, 0.9803], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9269, 0.0731], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 34, Training ones: 69 / 71
outputs torch.Size([24]) tensor([1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4069, 0.5931], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5347, 0.4653], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4435, 0.5565], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7301, 0.2699], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2512, 0.7488], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0612, 0.9388], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1229, 0.8771], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0702, 0.9298], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2725, 0.7275], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2356, 0.7644], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2983, 0.7017], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0728, 0.9272], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0654, 0.9346], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0360, 0.9640], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2800, 0.7200], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7860, 0.2140], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4371, 0.5629], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3223, 0.6777], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0370, 0.9630], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2988, 0.7012], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1729, 0.8271], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0048, 0.9952], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4694, 0.5306], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3247, 0.6753], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 58.333% (loss: 0.878) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0386, 0.9614], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0716, 0.9284], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 3, Training ones: 16 / 23
INFO:root:[   49] train: 83.333% test: 54.167%
INFO:root:Accuracy: 0.80952, Precision: 0.84507, Recall: 0.86957, F1: 0.85714
INFO:root:Val Accuracy: 0.57692, Precision: 0.60870, Recall: 0.87500, F1: 0.71795
INFO:root:F1: 0.71795 did not improve from 0.800000011920929
INFO:root:Epoch 50
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0370, 0.9630], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3789, 0.6211], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2324, 0.7676], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0870, 0.9130], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0685, 0.9315], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0139, 0.9861], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1283, 0.8717], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1525, 0.8475], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0105, 0.9895], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0565, 0.9435], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0618, 0.9382], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1328, 0.8672], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0544, 0.9456], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2506, 0.7494], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9673, 0.0327], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1653, 0.8347], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0696, 0.9304], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6340, 0.3660], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1577, 0.8423], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0840, 0.9160], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3494, 0.6506], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2448, 0.7552], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0736, 0.9264], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1268, 0.8732], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 91.667% (loss: 0.205) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1144, 0.8856], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0395, 0.9605], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0732, 0.9268], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0144, 0.9856], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7022, 0.2978], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8026, 0.1974], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2682, 0.7318], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3414, 0.6586], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2733, 0.7267], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5223, 0.4777], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0029, 0.9971], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0347, 0.9653], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0156, 0.9844], device='cuda:0')
Training Output torch.Size([2]) tensor([7.6430e-04, 9.9924e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0480, 0.9520], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0256, 0.9744], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5880, 0.4120], device='cuda:0')
Training Output torch.Size([2]) tensor([5.6588e-04, 9.9943e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1535, 0.8465], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3953, 0.6047], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0724, 0.9276], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7054, 0.2946], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0209, 0.9791], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1582, 0.8418], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0040, 0.9960], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0649, 0.9351], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1816, 0.8184], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5567, 0.4433], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0234, 0.9766], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1421, 0.8579], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1771, 0.8229], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3607, 0.6393], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0252, 0.9748], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0049, 0.9951], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0546, 0.9454], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3149, 0.6851], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0810, 0.9190], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0432, 0.9568], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1066, 0.8934], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7775, 0.2225], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0663, 0.9337], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1019, 0.8981], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0094, 0.9906], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0130, 0.9870], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1401, 0.8599], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1089, 0.8911], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0670, 0.9330], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0101, 0.9899], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1319, 0.8681], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0028, 0.9972], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0196, 0.9804], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7652, 0.2348], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9919, 0.0081], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9141, 0.0859], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6007, 0.3993], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0560, 0.9440], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4016, 0.5984], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0146, 0.9854], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0197, 0.9803], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5096, 0.4904], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2809, 0.7191], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9604, 0.0396], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9970, 0.0030], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1877, 0.8123], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0304, 0.9696], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0626, 0.9374], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5512, 0.4488], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0701, 0.9299], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0956, 0.9044], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7152, 0.2848], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9702, 0.0298], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9891, 0.0109], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0151, 0.9849], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0154, 0.9846], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0111, 0.9889], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1857, 0.8143], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0028, 0.9972], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0135, 0.9865], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9993e-01, 6.9493e-05], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 21, Training ones: 69 / 84
outputs torch.Size([24]) tensor([0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5401, 0.4599], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6238, 0.3762], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7321, 0.2679], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8089, 0.1911], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9629, 0.0371], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0385, 0.9615], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1598, 0.8402], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0756, 0.9244], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4523, 0.5477], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2379, 0.7621], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4165, 0.5835], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0703, 0.9297], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0504, 0.9496], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0230, 0.9770], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2575, 0.7425], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9704, 0.0296], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5431, 0.4569], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3690, 0.6310], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0389, 0.9611], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5280, 0.4720], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1283, 0.8717], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4239, 0.5761], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3695, 0.6305], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 54.167% (loss: 0.934) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0217, 0.9783], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0871, 0.9129], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 8, Training ones: 16 / 18
INFO:root:[   50] train: 79.167% test: 52.083%
INFO:root:Accuracy: 0.76190, Precision: 0.76190, Recall: 0.92754, F1: 0.83660
INFO:root:Val Accuracy: 0.53846, Precision: 0.61111, Recall: 0.68750, F1: 0.64706
INFO:root:F1: 0.64706 did not improve from 0.800000011920929
INFO:root:Epoch 51
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0404, 0.9596], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4820, 0.5180], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4000, 0.6000], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1037, 0.8963], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0913, 0.9087], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0444, 0.9556], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1206, 0.8794], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0365, 0.9635], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0304, 0.9696], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0367, 0.9633], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0079, 0.9921], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0306, 0.9694], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0256, 0.9744], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9951, 0.0049], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0066, 0.9934], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0190, 0.9810], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1270, 0.8730], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3238, 0.6762], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2177, 0.7823], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7450, 0.2550], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2938, 0.7062], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0528, 0.9472], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4679, 0.5321], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 91.667% (loss: 0.246) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0498, 0.9502], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0254, 0.9746], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6599, 0.3401], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9973e-01, 2.7001e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8231, 0.1769], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6900, 0.3100], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9162, 0.0838], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5173, 0.4827], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1209, 0.8791], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0035, 0.9965], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2608, 0.7392], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0072, 0.9928], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0349, 0.9651], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0405, 0.9595], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4652, 0.5348], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0045, 0.9955], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8298, 0.1702], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3253, 0.6747], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6217, 0.3783], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2787, 0.7213], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0514, 0.9486], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0075, 0.9925], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0389, 0.9611], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0430, 0.9570], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5176, 0.4824], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0082, 0.9918], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0303, 0.9697], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1868, 0.8132], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9249, 0.0751], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0113, 0.9887], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1944, 0.8056], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0457, 0.9543], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2872, 0.7128], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2244, 0.7756], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0328, 0.9672], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3371, 0.6629], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9331, 0.0669], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0629, 0.9371], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1565, 0.8435], device='cuda:0')
Training Output torch.Size([2]) tensor([9.2178e-04, 9.9908e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0035, 0.9965], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0111, 0.9889], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0126, 0.9874], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0544, 0.9456], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0296, 0.9704], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8268, 0.1732], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0028, 0.9972], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0392, 0.9608], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4605, 0.5395], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9986, 0.0014], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9905e-01, 9.4731e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1241, 0.8759], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0781, 0.9219], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2595, 0.7405], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0109, 0.9891], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0063, 0.9937], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8565, 0.1435], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9923, 0.0077], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9946, 0.0054], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9549, 0.0451], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0087, 0.9913], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1006, 0.8994], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0762, 0.9238], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0369, 0.9631], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0034, 0.9966], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2046, 0.7954], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2165, 0.7835], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3711, 0.6289], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9729, 0.0271], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0294, 0.9706], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0786, 0.9214], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0027, 0.9973], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0143, 0.9857], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0020, 0.9980], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9997e-01, 3.2192e-05], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 22, Training ones: 69 / 83
outputs torch.Size([24]) tensor([0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9120, 0.0880], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9862, 0.0138], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9925, 0.0075], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9859, 0.0141], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9974, 0.0026], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1195, 0.8805], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4164, 0.5836], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2383, 0.7617], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9351, 0.0649], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5303, 0.4697], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9188, 0.0812], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1765, 0.8235], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2011, 0.7989], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0920, 0.9080], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0337, 0.9663], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9994e-01, 6.1568e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8440, 0.1560], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5444, 0.4556], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2337, 0.7663], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9696, 0.0304], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3478, 0.6522], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0128, 0.9872], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3751, 0.6249], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4859, 0.5141], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 54.167% (loss: 1.419) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0756, 0.9244], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4977, 0.5023], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 12, Training ones: 16 / 14
INFO:root:[   51] train: 80.278% test: 52.083%
INFO:root:Accuracy: 0.79048, Precision: 0.78313, Recall: 0.94203, F1: 0.85526
INFO:root:Val Accuracy: 0.53846, Precision: 0.64286, Recall: 0.56250, F1: 0.60000
INFO:root:F1: 0.60000 did not improve from 0.800000011920929
INFO:root:Epoch 52
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0296, 0.9704], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9401, 0.0599], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1960, 0.8040], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0302, 0.9698], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3906, 0.6094], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0081, 0.9919], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2820, 0.7180], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5433, 0.4567], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6073, 0.3927], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0265, 0.9735], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1878, 0.8122], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0141, 0.9859], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2166, 0.7834], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2825, 0.7175], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9990, 0.0010], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2606, 0.7394], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5891, 0.4109], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8366, 0.1634], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5057, 0.4943], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4237, 0.5763], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9970, 0.0030], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3365, 0.6635], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3028, 0.6972], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2730, 0.7270], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 83.333% (loss: 0.310) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1771, 0.8229], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1019, 0.8981], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6389, 0.3611], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0353, 0.9647], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9853, 0.0147], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7295, 0.2705], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9688, 0.0312], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9974e-01, 2.6478e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9794, 0.0206], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3234, 0.6766], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0367, 0.9633], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2895, 0.7105], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2313, 0.7687], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9211, 0.0789], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3979, 0.6021], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9739, 0.0261], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0100, 0.9900], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1268, 0.8732], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9794, 0.0206], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0635, 0.9365], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1691, 0.8309], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0853, 0.9147], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9011, 0.0989], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.0881e-04, 9.9919e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0100, 0.9900], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2793, 0.7207], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0981, 0.9019], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2219, 0.7781], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0405, 0.9595], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2675, 0.7325], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9081, 0.0919], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1517, 0.8483], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0674, 0.9326], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0224, 0.9776], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1451, 0.8549], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0203, 0.9797], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0439, 0.9561], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0362, 0.9638], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9852, 0.0148], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2736, 0.7264], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0093, 0.9907], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0054, 0.9946], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0075, 0.9925], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0228, 0.9772], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3773, 0.6227], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0115, 0.9885], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0654, 0.9346], device='cuda:0')
Training Output torch.Size([2]) tensor([6.7984e-04, 9.9932e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0076, 0.9924], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1039, 0.8961], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0821, 0.9179], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6788, 0.3212], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2895, 0.7105], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0062, 0.9938], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0028, 0.9972], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3874, 0.6126], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0029, 0.9971], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6083, 0.3917], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4630, 0.5370], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6925, 0.3075], device='cuda:0')
Training Output torch.Size([2]) tensor([5.7838e-05, 9.9994e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0216, 0.9784], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0128, 0.9872], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0094, 0.9906], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1183, 0.8817], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1609, 0.8391], device='cuda:0')
Training Output torch.Size([2]) tensor([8.6598e-04, 9.9913e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0045, 0.9955], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0252, 0.9748], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8260, 0.1740], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6366, 0.3634], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0069, 0.9931], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3165, 0.6835], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0364, 0.9636], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9900, 0.0100], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 26, Training ones: 69 / 79
outputs torch.Size([24]) tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2490, 0.7510], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3002, 0.6998], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4021, 0.5979], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1752, 0.8248], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1402, 0.8598], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0963, 0.9037], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1386, 0.8614], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0649, 0.9351], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4360, 0.5640], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0462, 0.9538], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3675, 0.6325], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1175, 0.8825], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0953, 0.9047], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0402, 0.9598], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0147, 0.9853], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9982, 0.0018], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1933, 0.8067], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0958, 0.9042], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1073, 0.8927], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5069, 0.4931], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0820, 0.9180], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0298, 0.9702], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0606, 0.9394], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0975, 0.9025], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 62.500% (loss: 1.064) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0257, 0.9743], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1003, 0.8997], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 2, Training ones: 16 / 24
INFO:root:[   52] train: 76.667% test: 56.250%
INFO:root:Accuracy: 0.73333, Precision: 0.75949, Recall: 0.86957, F1: 0.81081
INFO:root:Val Accuracy: 0.61538, Precision: 0.62500, Recall: 0.93750, F1: 0.75000
INFO:root:F1: 0.75000 did not improve from 0.800000011920929
INFO:root:Epoch 53
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0221, 0.9779], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5304, 0.4696], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0860, 0.9140], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0560, 0.9440], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0221, 0.9779], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0031, 0.9969], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0623, 0.9377], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0763, 0.9237], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0420, 0.9580], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0417, 0.9583], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0387, 0.9613], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0186, 0.9814], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0458, 0.9542], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1729, 0.8271], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0036, 0.9964], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0209, 0.9791], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2689, 0.7311], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0102, 0.9898], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1815, 0.8185], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9983, 0.0017], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0943, 0.9057], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4645, 0.5355], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2015, 0.7985], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 91.667% (loss: 0.226) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0234, 0.9766], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2388, 0.7612], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0172, 0.9828], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0627, 0.9373], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9978e-01, 2.2473e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9996e-01, 3.8379e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4037, 0.5963], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7940, 0.2060], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5586, 0.4414], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0596, 0.9404], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0142, 0.9858], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4368, 0.5632], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0101, 0.9899], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1393, 0.8607], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3388, 0.6612], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7025, 0.2975], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0048, 0.9952], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4284, 0.5716], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7961, 0.2039], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1336, 0.8664], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7961, 0.2039], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1245, 0.8755], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0553, 0.9447], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2629, 0.7371], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8001, 0.1999], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9927e-01, 7.2649e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9971, 0.0029], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1258, 0.8742], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7851, 0.2149], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6334, 0.3666], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9589, 0.0411], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5614, 0.4386], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0723, 0.9277], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1731, 0.8269], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9943e-01, 5.6920e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3544, 0.6456], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4744, 0.5256], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9974, 0.0026], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9974, 0.0026], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3650, 0.6350], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0578, 0.9422], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0113, 0.9887], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5546, 0.4454], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4926, 0.5074], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4940, 0.5060], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5256, 0.4744], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0672, 0.9328], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5546, 0.4454], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0126, 0.9874], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1275, 0.8725], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4056, 0.5944], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2817, 0.7183], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 1.8129e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8940, 0.1060], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9663, 0.0337], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0819, 0.9181], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1291, 0.8709], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1734, 0.8266], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0618, 0.9382], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9981e-01, 1.8814e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9985e-01, 1.5296e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9996e-01, 3.6479e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0405, 0.9595], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9256, 0.0744], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1608, 0.8392], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5666, 0.4334], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9932, 0.0068], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8989, 0.1011], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9444, 0.0556], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1430, 0.8570], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9615, 0.0385], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7752, 0.2248], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9959e-01, 4.0606e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1650, 0.8350], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0139, 0.9861], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0645, 0.9355], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5617, 0.4383], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5464, 0.4536], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0121, 0.9879], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9979e-01, 2.0582e-04], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 39, Training ones: 69 / 66
outputs torch.Size([24]) tensor([0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7761, 0.2239], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7040, 0.2960], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8349, 0.1651], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7700, 0.2300], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4617, 0.5383], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2488, 0.7512], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3994, 0.6006], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1104, 0.8896], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8837, 0.1163], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3883, 0.6117], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8214, 0.1786], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0915, 0.9085], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4121, 0.5879], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0825, 0.9175], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0514, 0.9486], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9421, 0.0579], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6488, 0.3512], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3999, 0.6001], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2510, 0.7490], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7028, 0.2972], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3026, 0.6974], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0527, 0.9473], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2535, 0.7465], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2226, 0.7774], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 58.333% (loss: 0.802) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0707, 0.9293], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4555, 0.5445], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 9, Training ones: 16 / 17
INFO:root:[   53] train: 81.389% test: 54.167%
INFO:root:Accuracy: 0.81905, Precision: 0.87879, Recall: 0.84058, F1: 0.85926
INFO:root:Val Accuracy: 0.57692, Precision: 0.64706, Recall: 0.68750, F1: 0.66667
INFO:root:F1: 0.66667 did not improve from 0.800000011920929
INFO:root:Epoch 54
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0831, 0.9169], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7514, 0.2486], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1754, 0.8246], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1832, 0.8168], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1286, 0.8714], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3910, 0.6090], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0561, 0.9439], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2554, 0.7446], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0023, 0.9977], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1569, 0.8431], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0269, 0.9731], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1147, 0.8853], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1766, 0.8234], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0362, 0.9638], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9704, 0.0296], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0067, 0.9933], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3769, 0.6231], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8794, 0.1206], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0707, 0.9293], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4495, 0.5505], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9978, 0.0022], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3553, 0.6447], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4881, 0.5119], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9439, 0.0561], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 95.833% (loss: 0.317) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0365, 0.9635], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0577, 0.9423], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0330, 0.9670], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9699, 0.0301], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4918, 0.5082], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1969, 0.8031], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4279, 0.5721], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0416, 0.9584], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4308, 0.5692], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0083, 0.9917], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0770, 0.9230], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0062, 0.9938], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0188, 0.9812], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0563, 0.9437], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2307, 0.7693], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0062, 0.9938], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0640, 0.9360], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4528, 0.5472], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0088, 0.9912], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2198, 0.7802], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0235, 0.9765], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0421, 0.9579], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0043, 0.9957], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0049, 0.9951], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0335, 0.9665], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4109, 0.5891], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0329, 0.9671], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0430, 0.9570], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0060, 0.9940], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0210, 0.9790], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0036, 0.9964], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0230, 0.9770], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0637, 0.9363], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0116, 0.9884], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0350, 0.9650], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0162, 0.9838], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6695, 0.3305], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0089, 0.9911], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0047, 0.9953], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0098, 0.9902], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0138, 0.9862], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0052, 0.9948], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0078, 0.9922], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0104, 0.9896], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0668, 0.9332], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0180, 0.9820], device='cuda:0')
Training Output torch.Size([2]) tensor([1.9260e-04, 9.9981e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.0686e-04, 9.9959e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0177, 0.9823], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0125, 0.9875], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1972, 0.8028], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5398, 0.4602], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0257, 0.9743], device='cuda:0')
Training Output torch.Size([2]) tensor([9.3994e-04, 9.9906e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0078, 0.9922], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([7.5100e-04, 9.9925e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1342, 0.8658], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3513, 0.6487], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4152, 0.5848], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0046, 0.9954], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0072, 0.9928], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0075, 0.9925], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0337, 0.9663], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0059, 0.9941], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0985, 0.9015], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5488, 0.4512], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1687, 0.8313], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([5.1026e-04, 9.9949e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Training Output torch.Size([2]) tensor([8.4264e-04, 9.9916e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0036, 0.9964], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0027, 0.9973], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9525, 0.0475], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 10, Training ones: 69 / 95
outputs torch.Size([24]) tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2046, 0.7954], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1026, 0.8974], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0957, 0.9043], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1105, 0.8895], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0394, 0.9606], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0096, 0.9904], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0618, 0.9382], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0076, 0.9924], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2944, 0.7056], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0407, 0.9593], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2146, 0.7854], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0068, 0.9932], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0385, 0.9615], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0083, 0.9917], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0049, 0.9951], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3601, 0.6399], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0898, 0.9102], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0377, 0.9623], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0194, 0.9806], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1272, 0.8728], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0244, 0.9756], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0281, 0.9719], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0206, 0.9794], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 62.500% (loss: 1.156) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0069, 0.9931], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0515, 0.9485], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[   54] train: 73.611% test: 56.250%
INFO:root:Accuracy: 0.71429, Precision: 0.70526, Recall: 0.97101, F1: 0.81707
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.800000011920929
INFO:root:Epoch 55
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0053, 0.9947], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1754, 0.8246], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0049, 0.9951], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0070, 0.9930], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5431, 0.4569], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0096, 0.9904], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0261, 0.9739], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0054, 0.9946], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0282, 0.9718], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1058, 0.8942], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0064, 0.9936], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7156, 0.2844], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0096, 0.9904], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0040, 0.9960], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2780, 0.7220], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0052, 0.9948], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0138, 0.9862], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9085, 0.0915], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0349, 0.9651], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0080, 0.9920], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0478, 0.9522], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 87.500% (loss: 0.191) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4201, 0.5799], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0124, 0.9876], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0040, 0.9960], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0302, 0.9698], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7074, 0.2926], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7598, 0.2402], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2563, 0.7437], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4382, 0.5618], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5240, 0.4760], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8833, 0.1167], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0364, 0.9636], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0833, 0.9167], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0088, 0.9912], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0035, 0.9965], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0328, 0.9672], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0459, 0.9541], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1278, 0.8722], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0185, 0.9815], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6409, 0.3591], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0220, 0.9780], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4305, 0.5695], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0482, 0.9518], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0714, 0.9286], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0793, 0.9207], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4384, 0.5616], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4800, 0.5200], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8171, 0.1829], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3864, 0.6136], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4598, 0.5402], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0993, 0.9007], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6331, 0.3669], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0637, 0.9363], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0400, 0.9600], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3403, 0.6597], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5707, 0.4293], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0416, 0.9584], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2347, 0.7653], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4327, 0.5673], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1953, 0.8047], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5757, 0.4243], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0774, 0.9226], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0381, 0.9619], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0639, 0.9361], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0292, 0.9708], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1628, 0.8372], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2074, 0.7926], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0313, 0.9687], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4164, 0.5836], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8913, 0.1087], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0458, 0.9542], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7096, 0.2904], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9380, 0.0620], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8253, 0.1747], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9807, 0.0193], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6856, 0.3144], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4525, 0.5475], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9311, 0.0689], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3783, 0.6217], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0758, 0.9242], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9830, 0.0170], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9886, 0.0114], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9950, 0.0050], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7354, 0.2646], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5724, 0.4276], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3435, 0.6565], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5391, 0.4609], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6405, 0.3595], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9840, 0.0160], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2724, 0.7276], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1711, 0.8289], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8552, 0.1448], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9983, 0.0017], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9951, 0.0049], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8007, 0.1993], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2750, 0.7250], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8787, 0.1213], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3821, 0.6179], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4059, 0.5941], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1442, 0.8558], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9941e-01, 5.8841e-04], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 33, Training ones: 69 / 72
outputs torch.Size([24]) tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9927, 0.0073], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9800, 0.0200], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9772, 0.0228], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9921, 0.0079], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9938, 0.0062], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8252, 0.1748], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9646, 0.0354], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7457, 0.2543], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9929, 0.0071], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9656, 0.0344], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9941, 0.0059], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6183, 0.3817], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9573, 0.0427], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8250, 0.1750], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8829, 0.1171], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9847, 0.0153], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9849, 0.0151], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9293, 0.0707], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8943, 0.1057], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9644, 0.0356], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9447, 0.0553], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4944, 0.5056], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9502, 0.0498], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9134, 0.0866], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 33.333% (loss: 1.822) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7932, 0.2068], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9805, 0.0195], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 25, Training ones: 16 / 1
INFO:root:[   55] train: 73.056% test: 41.667%
INFO:root:Accuracy: 0.72381, Precision: 0.77778, Recall: 0.81159, F1: 0.79433
INFO:root:Val Accuracy: 0.34615, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.800000011920929
INFO:root:Epoch 56
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6130, 0.3870], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9980, 0.0020], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7043, 0.2957], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7489, 0.2511], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9853, 0.0147], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4822, 0.5178], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7512, 0.2488], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9648, 0.0352], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2039, 0.7961], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8262, 0.1738], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4519, 0.5481], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7593, 0.2407], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7708, 0.2292], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5784, 0.4216], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9875, 0.0125], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5061, 0.4939], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8259, 0.1741], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9947e-01, 5.2542e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8520, 0.1480], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9463, 0.0537], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9222, 0.0778], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9757, 0.0243], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7087, 0.2913], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6850, 0.3150], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 29.167% (loss: 1.375) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7996, 0.2004], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9075, 0.0925], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4585, 0.5415], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8108, 0.1892], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9807, 0.0193], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9904, 0.0096], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9652, 0.0348], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9875, 0.0125], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9984, 0.0016], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9549, 0.0451], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6616, 0.3384], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9462, 0.0538], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3957, 0.6043], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5482, 0.4518], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6418, 0.3582], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9603, 0.0397], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9936, 0.0064], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2487, 0.7513], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9626, 0.0374], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9925, 0.0075], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9926, 0.0074], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9346, 0.0654], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8094, 0.1906], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8028, 0.1972], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4315, 0.5685], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9902, 0.0098], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4934, 0.5066], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9903, 0.0097], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8750, 0.1250], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8743, 0.1257], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7140, 0.2860], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7869, 0.2131], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5963, 0.4037], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7508, 0.2492], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8090, 0.1910], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9919, 0.0081], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9105, 0.0895], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9416, 0.0584], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9704, 0.0296], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9185, 0.0815], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6742, 0.3258], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6468, 0.3532], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9417, 0.0583], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2900, 0.7100], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7207, 0.2793], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7556, 0.2444], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9397, 0.0603], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1908, 0.8092], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3048, 0.6952], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0792, 0.9208], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2070, 0.7930], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6289, 0.3711], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6159, 0.3841], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9905, 0.0095], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9936, 0.0064], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9507, 0.0493], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4683, 0.5317], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9980, 0.0020], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2530, 0.7470], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0732, 0.9268], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9871, 0.0129], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9842, 0.0158], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9931, 0.0069], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4528, 0.5472], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9361, 0.0639], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1457, 0.8543], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1556, 0.8444], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6773, 0.3227], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6560, 0.3440], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6114, 0.3886], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1417, 0.8583], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8431, 0.1569], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9880, 0.0120], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8836, 0.1164], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0907, 0.9093], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0870, 0.9130], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2024, 0.7976], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0450, 0.9550], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2615, 0.7385], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1018, 0.8982], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9965, 0.0035], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 79, Training ones: 69 / 26
outputs torch.Size([24]) tensor([0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.6584, 0.3416], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4228, 0.5772], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2894, 0.7106], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6895, 0.3105], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6321, 0.3679], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0719, 0.9281], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3011, 0.6989], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0502, 0.9498], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6442, 0.3558], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2992, 0.7008], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6975, 0.3025], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0457, 0.9543], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2308, 0.7692], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0768, 0.9232], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0523, 0.9477], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6151, 0.3849], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4793, 0.5207], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2085, 0.7915], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1442, 0.8558], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3886, 0.6114], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1940, 0.8060], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0162, 0.9838], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3120, 0.6880], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1705, 0.8295], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 70.833% (loss: 0.657) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0641, 0.9359], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3312, 0.6688], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 6, Training ones: 16 / 20
INFO:root:[   56] train: 59.167% test: 60.417%
INFO:root:Accuracy: 0.53333, Precision: 0.88462, Recall: 0.33333, F1: 0.48421
INFO:root:Val Accuracy: 0.69231, Precision: 0.70000, Recall: 0.87500, F1: 0.77778
INFO:root:F1: 0.77778 did not improve from 0.800000011920929
INFO:root:Epoch 57
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0174, 0.9826], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6723, 0.3277], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1665, 0.8335], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0836, 0.9164], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1364, 0.8636], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0592, 0.9408], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0572, 0.9428], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4846, 0.5154], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0754, 0.9246], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0935, 0.9065], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0209, 0.9791], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0474, 0.9526], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1166, 0.8834], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0690, 0.9310], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6849, 0.3151], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0537, 0.9463], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0219, 0.9781], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7327, 0.2673], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1445, 0.8555], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3898, 0.6102], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9488, 0.0512], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0348, 0.9652], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0946, 0.9054], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2822, 0.7178], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.166) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0170, 0.9830], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0116, 0.9884], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0065, 0.9935], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0263, 0.9737], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2905, 0.7095], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2264, 0.7736], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1144, 0.8856], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7118, 0.2882], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5027, 0.4973], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0201, 0.9799], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0101, 0.9899], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0068, 0.9932], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0269, 0.9731], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0030, 0.9970], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0206, 0.9794], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0416, 0.9584], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1170, 0.8830], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0186, 0.9814], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0907, 0.9093], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0239, 0.9761], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0299, 0.9701], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0401, 0.9599], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0196, 0.9804], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0023, 0.9977], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0248, 0.9752], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0195, 0.9805], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3556, 0.6444], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0154, 0.9846], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0058, 0.9942], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0272, 0.9728], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0288, 0.9712], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0259, 0.9741], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0046, 0.9954], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0036, 0.9964], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0722, 0.9278], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0030, 0.9970], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0306, 0.9694], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0439, 0.9561], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0252, 0.9748], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0217, 0.9783], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0056, 0.9944], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0301, 0.9699], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0239, 0.9761], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0075, 0.9925], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0691, 0.9309], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0205, 0.9795], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0224, 0.9776], device='cuda:0')
Training Output torch.Size([2]) tensor([1.8058e-04, 9.9982e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.9666e-04, 9.9960e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1013, 0.8987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0071, 0.9929], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1782, 0.8218], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2583, 0.7417], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0092, 0.9908], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1089, 0.8911], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Training Output torch.Size([2]) tensor([6.4747e-04, 9.9935e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0856, 0.9144], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4150, 0.5850], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4978, 0.5022], device='cuda:0')
Training Output torch.Size([2]) tensor([8.2153e-04, 9.9918e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0282, 0.9718], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0051, 0.9949], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0073, 0.9927], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0514, 0.9486], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0317, 0.9683], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0046, 0.9954], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0054, 0.9946], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1066, 0.8934], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4702, 0.5298], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2124, 0.7876], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0027, 0.9973], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0028, 0.9972], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0029, 0.9971], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2165, 0.7835], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 6, Training ones: 69 / 99
outputs torch.Size([24]) tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2474, 0.7526], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1109, 0.8891], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0515, 0.9485], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3626, 0.6374], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1443, 0.8557], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0110, 0.9890], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0537, 0.9463], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0068, 0.9932], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2063, 0.7937], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0637, 0.9363], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2302, 0.7698], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0080, 0.9920], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0390, 0.9610], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0090, 0.9910], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0073, 0.9927], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2981, 0.7019], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1283, 0.8717], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0431, 0.9569], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0240, 0.9760], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1079, 0.8921], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0312, 0.9688], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0839, 0.9161], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0325, 0.9675], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 62.500% (loss: 1.024) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0083, 0.9917], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0438, 0.9562], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 0, Training ones: 16 / 26
INFO:root:[   57] train: 70.833% test: 56.250%
INFO:root:Accuracy: 0.71429, Precision: 0.69697, Recall: 1.00000, F1: 0.82143
INFO:root:Val Accuracy: 0.61538, Precision: 0.61538, Recall: 1.00000, F1: 0.76190
INFO:root:F1: 0.76190 did not improve from 0.800000011920929
INFO:root:Epoch 58
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0056, 0.9944], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4317, 0.5683], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0067, 0.9933], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0048, 0.9952], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0084, 0.9916], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0759, 0.9241], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0079, 0.9921], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0104, 0.9896], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0384, 0.9616], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0098, 0.9902], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0105, 0.9895], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0080, 0.9920], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0171, 0.9829], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1405, 0.8595], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0033, 0.9967], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0102, 0.9898], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3311, 0.6689], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0455, 0.9545], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0412, 0.9588], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9022, 0.0978], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0096, 0.9904], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0073, 0.9927], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0204, 0.9796], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 87.500% (loss: 0.182) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0430, 0.9570], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1770, 0.8230], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0020, 0.9980], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0290, 0.9710], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9722, 0.0278], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9659, 0.0341], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2118, 0.7882], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1541, 0.8459], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4300, 0.5700], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1029, 0.8971], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0119, 0.9881], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0529, 0.9471], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2489, 0.7511], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0651, 0.9349], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1022, 0.8978], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0150, 0.9850], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0597, 0.9403], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1446, 0.8554], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0455, 0.9545], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2969, 0.7031], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0413, 0.9587], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0430, 0.9570], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0829, 0.9171], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1992, 0.8008], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1540, 0.8460], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5767, 0.4233], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2290, 0.7710], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0597, 0.9403], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0786, 0.9214], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2170, 0.7830], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0960, 0.9040], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1160, 0.8840], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2286, 0.7714], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7497, 0.2503], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1527, 0.8473], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1313, 0.8687], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5503, 0.4497], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8147, 0.1853], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2183, 0.7817], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3182, 0.6818], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0338, 0.9662], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2649, 0.7351], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1718, 0.8282], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1929, 0.8071], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3961, 0.6039], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0207, 0.9793], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2438, 0.7562], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0082, 0.9918], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0441, 0.9559], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5087, 0.4913], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5741, 0.4259], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9718, 0.0282], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9864, 0.0136], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7864, 0.2136], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1126, 0.8874], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8367, 0.1633], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0729, 0.9271], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0849, 0.9151], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2447, 0.7553], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8267, 0.1733], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9608, 0.0392], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0983, 0.9017], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6369, 0.3631], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8437, 0.1563], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6453, 0.3547], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8425, 0.1575], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8248, 0.1752], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4344, 0.5656], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2617, 0.7383], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4538, 0.5462], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9941, 0.0059], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9975, 0.0025], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8077, 0.1923], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0439, 0.9561], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1781, 0.8219], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1525, 0.8475], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3430, 0.6570], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0778, 0.9222], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9923e-01, 7.6580e-04], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 24, Training ones: 69 / 81
outputs torch.Size([24]) tensor([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9739, 0.0261], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9427, 0.0573], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9258, 0.0742], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9927, 0.0073], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9438, 0.0562], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5688, 0.4312], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7742, 0.2258], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3052, 0.6948], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9519, 0.0481], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9375, 0.0625], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9690, 0.0310], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2744, 0.7256], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8333, 0.1667], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3983, 0.6017], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2867, 0.7133], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9596, 0.0404], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9665, 0.0335], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8515, 0.1485], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6570, 0.3430], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8779, 0.1221], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7962, 0.2038], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1440, 0.8560], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9269, 0.0731], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7951, 0.2049], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 50.000% (loss: 1.249) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3658, 0.6342], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8798, 0.1202], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 20, Training ones: 16 / 6
INFO:root:[   58] train: 75.278% test: 75.000%
INFO:root:Accuracy: 0.73333, Precision: 0.75309, Recall: 0.88406, F1: 0.81333
INFO:root:Val Accuracy: 0.53846, Precision: 0.83333, Recall: 0.31250, F1: 0.45455
INFO:root:F1: 0.45455 did not improve from 0.800000011920929
INFO:root:Epoch 59
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3985, 0.6015], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9835, 0.0165], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4606, 0.5394], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6903, 0.3097], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7043, 0.2957], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8142, 0.1858], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4988, 0.5012], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8104, 0.1896], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0323, 0.9677], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7617, 0.2383], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6534, 0.3466], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0934, 0.9066], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7189, 0.2811], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5167, 0.4833], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9690, 0.0310], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0966, 0.9034], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6425, 0.3575], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9986, 0.0014], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6515, 0.3485], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9121, 0.0879], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9941, 0.0059], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4825, 0.5175], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5863, 0.4137], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4001, 0.5999], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 50.000% (loss: 0.787) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2181, 0.7819], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3192, 0.6808], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1185, 0.8815], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5015, 0.4985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9929, 0.0071], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7679, 0.2321], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8825, 0.1175], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8979, 0.1021], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9876, 0.0124], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9787, 0.0213], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2387, 0.7613], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7848, 0.2152], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2590, 0.7410], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1101, 0.8899], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4706, 0.5294], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6918, 0.3082], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2318, 0.7682], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0292, 0.9708], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4864, 0.5136], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7061, 0.2939], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4185, 0.5815], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6843, 0.3157], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8386, 0.1614], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8550, 0.1450], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5518, 0.4482], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9101, 0.0899], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8216, 0.1784], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9396, 0.0604], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3958, 0.6042], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8660, 0.1340], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4215, 0.5785], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5996, 0.4004], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4208, 0.5792], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0204, 0.9796], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7261, 0.2739], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9910, 0.0090], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5695, 0.4305], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5318, 0.4682], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9524, 0.0476], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8664, 0.1336], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1745, 0.8255], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1408, 0.8592], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2633, 0.7367], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3029, 0.6971], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4619, 0.5381], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5249, 0.4751], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2494, 0.7506], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0312, 0.9688], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1347, 0.8653], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0176, 0.9824], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0108, 0.9892], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1447, 0.8553], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1341, 0.8659], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9710, 0.0290], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9491, 0.0509], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2199, 0.7801], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1269, 0.8731], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3748, 0.6252], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0581, 0.9419], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1995, 0.8005], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0768, 0.9232], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9515, 0.0485], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9862, 0.0138], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2106, 0.7894], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6851, 0.3149], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1140, 0.8860], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1718, 0.8282], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2728, 0.7272], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1056, 0.8944], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6446, 0.3554], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5053, 0.4947], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8588, 0.1412], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8362, 0.1638], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9377, 0.0623], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0278, 0.9722], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0039, 0.9961], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0544, 0.9456], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0615, 0.9385], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0473, 0.9527], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0487, 0.9513], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9627, 0.0373], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 53, Training ones: 69 / 52
outputs torch.Size([24]) tensor([0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5485, 0.4515], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3875, 0.6125], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2949, 0.7051], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6377, 0.3623], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6775, 0.3225], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0899, 0.9101], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1807, 0.8193], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0290, 0.9710], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5540, 0.4460], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1868, 0.8132], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5501, 0.4499], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0389, 0.9611], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1985, 0.8015], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0532, 0.9468], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1053, 0.8947], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5357, 0.4643], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4359, 0.5641], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2330, 0.7670], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1167, 0.8833], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3433, 0.6567], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1543, 0.8457], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0170, 0.9830], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2392, 0.7608], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1713, 0.8287], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 70.833% (loss: 0.687) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0559, 0.9441], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1948, 0.8052], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 6, Training ones: 16 / 20
INFO:root:[   59] train: 70.833% test: 60.417%
INFO:root:Accuracy: 0.66667, Precision: 0.82692, Recall: 0.62319, F1: 0.71074
INFO:root:Val Accuracy: 0.69231, Precision: 0.70000, Recall: 0.87500, F1: 0.77778
INFO:root:F1: 0.77778 did not improve from 0.800000011920929
INFO:root:Epoch 60
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0131, 0.9869], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6123, 0.3877], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0479, 0.9521], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0587, 0.9413], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1035, 0.8965], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1275, 0.8725], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0600, 0.9400], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0528, 0.9472], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0962, 0.9038], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0337, 0.9663], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1137, 0.8863], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0596, 0.9404], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2581, 0.7419], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7834, 0.2166], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0241, 0.9759], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0575, 0.9425], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6791, 0.3209], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1158, 0.8842], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1714, 0.8286], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9260, 0.0740], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0260, 0.9740], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0853, 0.9147], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3843, 0.6157], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.137) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0096, 0.9904], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0787, 0.9213], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0436, 0.9564], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0105, 0.9895], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9487, 0.0513], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5630, 0.4370], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1334, 0.8666], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0994, 0.9006], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3883, 0.6117], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0388, 0.9612], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0131, 0.9869], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0829, 0.9171], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0660, 0.9340], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0095, 0.9905], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0819, 0.9181], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0511, 0.9489], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4463, 0.5537], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0147, 0.9853], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0523, 0.9477], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3901, 0.6099], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0344, 0.9656], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0834, 0.9166], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0770, 0.9230], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0193, 0.9807], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0205, 0.9795], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0521, 0.9479], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0500, 0.9500], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2723, 0.7277], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0153, 0.9847], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1578, 0.8422], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1353, 0.8647], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0310, 0.9690], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1262, 0.8738], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0035, 0.9965], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0587, 0.9413], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2184, 0.7816], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0638, 0.9362], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0513, 0.9487], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0574, 0.9426], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1098, 0.8902], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0525, 0.9475], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0134, 0.9866], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0337, 0.9663], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0533, 0.9467], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0116, 0.9884], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1062, 0.8938], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0606, 0.9394], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0444, 0.9556], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0025, 0.9975], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0155, 0.9845], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0715, 0.9285], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0564, 0.9436], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7048, 0.2952], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0956, 0.9044], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0834, 0.9166], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0177, 0.9823], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0356, 0.9644], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0084, 0.9916], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0073, 0.9927], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4838, 0.5162], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6625, 0.3375], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5136, 0.4864], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0152, 0.9848], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0677, 0.9323], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0080, 0.9920], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0996, 0.9004], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1202, 0.8798], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3813, 0.6187], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0724, 0.9276], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0337, 0.9663], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0378, 0.9622], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9779, 0.0221], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5717, 0.4283], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0080, 0.9920], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0031, 0.9969], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0212, 0.9788], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0067, 0.9933], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0086, 0.9914], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0156, 0.9844], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8668, 0.1332], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 12, Training ones: 69 / 93
outputs torch.Size([24]) tensor([0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7159, 0.2841], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5686, 0.4314], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5674, 0.4326], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5842, 0.4158], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8856, 0.1144], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1909, 0.8091], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2507, 0.7493], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0329, 0.9671], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7725, 0.2275], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2033, 0.7967], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6905, 0.3095], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0424, 0.9576], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3440, 0.6560], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0781, 0.9219], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0627, 0.9373], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6766, 0.3234], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5883, 0.4117], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3599, 0.6401], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1627, 0.8373], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5083, 0.4917], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2237, 0.7763], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0254, 0.9746], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1729, 0.8271], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2187, 0.7813], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 62.500% (loss: 0.716) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0887, 0.9113], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2943, 0.7057], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 10, Training ones: 16 / 16
INFO:root:[   60] train: 80.000% test: 56.250%
INFO:root:Accuracy: 0.77143, Precision: 0.74194, Recall: 1.00000, F1: 0.85185
INFO:root:Val Accuracy: 0.61538, Precision: 0.68750, Recall: 0.68750, F1: 0.68750
INFO:root:F1: 0.68750 did not improve from 0.800000011920929
INFO:root:Epoch 61
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4815, 0.5185], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8116, 0.1884], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1235, 0.8765], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3572, 0.6428], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2218, 0.7782], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3668, 0.6332], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0200, 0.9800], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4553, 0.5447], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0321, 0.9679], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2402, 0.7598], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0446, 0.9554], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0938, 0.9062], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1061, 0.8939], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0625, 0.9375], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9236, 0.0764], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0547, 0.9453], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0966, 0.9034], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8665, 0.1335], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1191, 0.8809], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3306, 0.6694], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9367, 0.0633], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1109, 0.8891], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1523, 0.8477], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0849, 0.9151], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.198) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0329, 0.9671], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6972, 0.3028], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0045, 0.9955], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0176, 0.9824], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9958, 0.0042], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9674, 0.0326], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4186, 0.5814], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9723, 0.0277], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9551, 0.0449], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2731, 0.7269], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0088, 0.9912], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3250, 0.6750], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0781, 0.9219], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0051, 0.9949], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3306, 0.6694], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6302, 0.3698], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7367, 0.2633], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0171, 0.9829], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3116, 0.6884], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6084, 0.3916], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0723, 0.9277], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2223, 0.7777], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0808, 0.9192], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1313, 0.8687], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1359, 0.8641], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8888, 0.1112], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3199, 0.6801], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7889, 0.2111], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0360, 0.9639], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0726, 0.9274], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6364, 0.3636], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6193, 0.3807], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2527, 0.7473], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0097, 0.9903], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0524, 0.9476], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3782, 0.6218], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0380, 0.9620], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5985, 0.4015], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6975, 0.3025], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2266, 0.7734], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0844, 0.9156], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0164, 0.9836], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3346, 0.6654], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2740, 0.7260], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0557, 0.9443], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1342, 0.8658], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1944, 0.8056], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0704, 0.9296], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3483, 0.6517], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0093, 0.9907], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0213, 0.9787], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2902, 0.7098], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4981, 0.5019], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8668, 0.1332], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9903, 0.0097], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3890, 0.6110], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0446, 0.9554], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2073, 0.7927], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0239, 0.9761], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0064, 0.9936], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9752, 0.0248], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9292, 0.0708], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7717, 0.2283], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0662, 0.9338], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3369, 0.6631], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0692, 0.9308], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2786, 0.7214], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2040, 0.7960], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2561, 0.7439], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0459, 0.9541], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1534, 0.8466], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3696, 0.6304], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9611, 0.0389], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9980, 0.0020], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0693, 0.9307], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0044, 0.9956], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0118, 0.9882], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0628, 0.9372], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0582, 0.9418], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0173, 0.9827], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9853, 0.0147], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 26, Training ones: 69 / 79
outputs torch.Size([24]) tensor([0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.8439, 0.1561], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7329, 0.2671], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8223, 0.1777], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5932, 0.4068], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9725, 0.0275], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3368, 0.6632], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2813, 0.7187], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0296, 0.9704], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8923, 0.1077], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3120, 0.6880], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7038, 0.2962], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0338, 0.9662], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5071, 0.4929], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0798, 0.9202], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0720, 0.9280], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8420, 0.1580], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6972, 0.3028], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6001, 0.3999], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1618, 0.8382], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6885, 0.3115], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2653, 0.7347], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0556, 0.9444], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1331, 0.8669], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1988, 0.8012], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 54.167% (loss: 0.828) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1064, 0.8936], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3645, 0.6355], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 12, Training ones: 16 / 14
INFO:root:[   61] train: 83.333% test: 52.083%
INFO:root:Accuracy: 0.80952, Precision: 0.81013, Recall: 0.92754, F1: 0.86486
INFO:root:Val Accuracy: 0.53846, Precision: 0.64286, Recall: 0.56250, F1: 0.60000
INFO:root:F1: 0.60000 did not improve from 0.800000011920929
INFO:root:Epoch 62
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1685, 0.8315], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9767, 0.0233], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1546, 0.8454], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1169, 0.8831], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1522, 0.8478], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1635, 0.8365], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1985, 0.8015], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3444, 0.6556], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1022, 0.8978], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0247, 0.9753], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0081, 0.9919], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0048, 0.9952], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0631, 0.9369], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0696, 0.9304], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9940, 0.0060], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0700, 0.9300], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9637, 0.0363], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1923, 0.8077], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0891, 0.9109], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9917, 0.0083], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1610, 0.8390], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0194, 0.9806], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2020, 0.7980], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.109) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0506, 0.9494], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0372, 0.9628], device='cuda:0')
Training Output torch.Size([2]) tensor([9.7926e-04, 9.9902e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0089, 0.9911], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9973, 0.0027], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9970, 0.0030], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5723, 0.4277], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9506, 0.0494], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8804, 0.1196], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1618, 0.8382], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0238, 0.9762], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3487, 0.6513], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0173, 0.9827], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0936, 0.9064], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1859, 0.8141], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6576, 0.3424], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0483, 0.9517], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0339, 0.9661], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5660, 0.4340], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1407, 0.8593], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4915, 0.5085], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0923, 0.9077], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1617, 0.8383], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0102, 0.9898], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0275, 0.9725], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3791, 0.6209], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7060, 0.2940], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0059, 0.9941], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1084, 0.8916], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2199, 0.7801], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2301, 0.7699], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1336, 0.8664], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4756, 0.5244], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4847, 0.5153], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8708, 0.1292], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0680, 0.9320], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5927, 0.4073], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5650, 0.4350], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0104, 0.9896], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0544, 0.9456], device='cuda:0')
Training Output torch.Size([2]) tensor([6.1064e-04, 9.9939e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1775, 0.8225], device='cuda:0')
Training Output torch.Size([2]) tensor([6.1543e-04, 9.9938e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3105, 0.6895], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0203, 0.9797], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0112, 0.9888], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0234, 0.9766], device='cuda:0')
Training Output torch.Size([2]) tensor([5.3474e-04, 9.9947e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0123, 0.9877], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1792, 0.8208], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0161, 0.9839], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9641, 0.0359], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9954, 0.0046], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2949, 0.7051], device='cuda:0')
Training Output torch.Size([2]) tensor([4.0291e-04, 9.9960e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9906, 0.0094], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0470, 0.9530], device='cuda:0')
Training Output torch.Size([2]) tensor([2.1612e-04, 9.9978e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9971, 0.0029], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9147, 0.0853], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9952, 0.0048], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0323, 0.9677], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9743, 0.0257], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1166, 0.8834], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3703, 0.6297], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9116, 0.0884], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7600, 0.2400], device='cuda:0')
Training Output torch.Size([2]) tensor([4.6100e-04, 9.9954e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5506, 0.4494], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9475, 0.0525], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9956, 0.0044], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([1.4119e-04, 9.9986e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.7618e-04, 9.9912e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0838, 0.9162], device='cuda:0')
Training Output torch.Size([2]) tensor([9.4178e-04, 9.9906e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.1183e-04, 9.9939e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9989, 0.0011], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 28, Training ones: 69 / 77
outputs torch.Size([24]) tensor([0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5411, 0.4589], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5120, 0.4880], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7542, 0.2458], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1130, 0.8870], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9283, 0.0717], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1181, 0.8819], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0374, 0.9626], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6557, 0.3443], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0152, 0.9848], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2063, 0.7937], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1217, 0.8783], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0043, 0.9957], device='cuda:0')
Validation Output torch.Size([2]) tensor([5.3265e-04, 9.9947e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8135, 0.1865], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2895, 0.7105], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5819, 0.4181], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0197, 0.9803], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5999, 0.4001], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0443, 0.9557], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0036, 0.9964], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0088, 0.9912], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0234, 0.9766], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 54.167% (loss: 1.152) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0068, 0.9932], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0806, 0.9194], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 8, Training ones: 16 / 18
INFO:root:[   62] train: 85.000% test: 52.083%
INFO:root:Accuracy: 0.82857, Precision: 0.83117, Recall: 0.92754, F1: 0.87671
INFO:root:Val Accuracy: 0.53846, Precision: 0.61111, Recall: 0.68750, F1: 0.64706
INFO:root:F1: 0.64706 did not improve from 0.800000011920929
INFO:root:Epoch 63
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2289, 0.7711], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9980, 0.0020], device='cuda:0')
Training Output torch.Size([2]) tensor([4.9360e-04, 9.9951e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0274, 0.9726], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0362, 0.9638], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0302, 0.9698], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0840, 0.9160], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3227, 0.6773], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2551, 0.7449], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0043, 0.9957], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0154, 0.9846], device='cuda:0')
Training Output torch.Size([2]) tensor([7.4264e-05, 9.9993e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0093, 0.9907], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0116, 0.9884], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9284, 0.0716], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0046, 0.9954], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9844, 0.0156], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0038, 0.9962], device='cuda:0')
Training Output torch.Size([2]) tensor([1.4653e-04, 9.9985e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9826, 0.0174], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0128, 0.9872], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0023, 0.9977], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0823, 0.9177], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.058) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4266, 0.5734], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0061, 0.9939], device='cuda:0')
Training Output torch.Size([2]) tensor([6.1089e-05, 9.9994e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0538, 0.9462], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9320, 0.0680], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7319, 0.2681], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7245, 0.2755], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1537, 0.8463], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6085, 0.3915], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0343, 0.9657], device='cuda:0')
Training Output torch.Size([2]) tensor([8.3772e-04, 9.9916e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.2791e-04, 9.9927e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.5929e-04, 9.9944e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1235e-04, 9.9989e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.4346e-04, 9.9976e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0341, 0.9659], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0341, 0.9659], device='cuda:0')
Training Output torch.Size([2]) tensor([2.1194e-04, 9.9979e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0043, 0.9957], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8987, 0.1013], device='cuda:0')
Training Output torch.Size([2]) tensor([1.8343e-04, 9.9982e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0862, 0.9138], device='cuda:0')
Training Output torch.Size([2]) tensor([1.2607e-04, 9.9987e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0047, 0.9953], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.4858e-04, 9.9955e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0048, 0.9952], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1309, 0.8691], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6000, 0.4000], device='cuda:0')
Training Output torch.Size([2]) tensor([5.8612e-04, 9.9941e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0070, 0.9930], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0028, 0.9972], device='cuda:0')
Training Output torch.Size([2]) tensor([4.6113e-05, 9.9995e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.6047e-04, 9.9964e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.6368e-04, 9.9944e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0046, 0.9954], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0428, 0.9572], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0113, 0.9887], device='cuda:0')
Training Output torch.Size([2]) tensor([2.0343e-04, 9.9980e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0307, 0.9693], device='cuda:0')
Training Output torch.Size([2]) tensor([3.5350e-04, 9.9965e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0078, 0.9922], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0023, 0.9977], device='cuda:0')
Training Output torch.Size([2]) tensor([1.2315e-04, 9.9988e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0673, 0.9327], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1821e-04, 9.9988e-01], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.8058e-04, 9.9982e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0031, 0.9969], device='cuda:0')
Training Output torch.Size([2]) tensor([2.3924e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0319, 0.9681], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0582, 0.9418], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9701, 0.0299], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9965, 0.0035], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0347, 0.9653], device='cuda:0')
Training Output torch.Size([2]) tensor([1.2030e-05, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0061, 0.9939], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0034, 0.9966], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3792e-05, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9406, 0.0594], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5120, 0.4880], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8906, 0.1094], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9250, 0.0750], device='cuda:0')
Training Output torch.Size([2]) tensor([3.6765e-05, 9.9996e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0078, 0.9922], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1279, 0.8721], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8691, 0.1309], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0204, 0.9796], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0156, 0.9844], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9763, 0.0237], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9970e-01, 3.0179e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9979e-01, 2.1486e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([3.7053e-05, 9.9996e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.3187e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.8269e-04, 9.9942e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.2223e-04, 9.9958e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0110, 0.9890], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9922, 0.0078], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 21, Training ones: 69 / 84
outputs torch.Size([24]) tensor([0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.6746, 0.3254], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8679, 0.1321], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9718, 0.0282], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0709, 0.9291], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0899, 0.9101], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2069, 0.7931], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0453, 0.9547], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0027, 0.9973], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6773, 0.3227], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0544, 0.9456], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2261, 0.7739], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0074, 0.9926], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0738, 0.9262], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0075, 0.9925], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.5101e-04, 9.9905e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9570, 0.0430], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4614, 0.5386], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6804, 0.3196], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0285, 0.9715], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8626, 0.1374], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0863, 0.9137], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0267, 0.9733], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0438, 0.9562], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 50.000% (loss: 1.428) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0096, 0.9904], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1945, 0.8055], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 7, Training ones: 16 / 19
INFO:root:[   63] train: 85.833% test: 50.000%
INFO:root:Accuracy: 0.83810, Precision: 0.80952, Recall: 0.98551, F1: 0.88889
INFO:root:Val Accuracy: 0.50000, Precision: 0.57895, Recall: 0.68750, F1: 0.62857
INFO:root:F1: 0.62857 did not improve from 0.800000011920929
INFO:root:Epoch 64
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.6170e-04, 9.9974e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3131, 0.6869], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0127, 0.9873], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8773, 0.1227], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0079, 0.9921], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1278, 0.8722], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0044, 0.9956], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0347, 0.9653], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0039, 0.9961], device='cuda:0')
Training Output torch.Size([2]) tensor([8.2636e-04, 9.9917e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.9770e-04, 9.9970e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0020, 0.9980], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0764, 0.9236], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0158, 0.9842], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9445, 0.0555], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3316e-04, 9.9987e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1308, 0.8692], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9906e-01, 9.3994e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0314, 0.9686], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0480, 0.9520], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9879, 0.0121], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0205, 0.9795], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0043, 0.9957], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0996, 0.9004], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 91.667% (loss: 0.166) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0227, 0.9773], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0072, 0.9928], device='cuda:0')
Training Output torch.Size([2]) tensor([7.7524e-05, 9.9992e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.7984e-04, 9.9932e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6048, 0.3952], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9977, 0.0023], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8269, 0.1731], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9944, 0.0056], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2554, 0.7446], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0103, 0.9897], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1014, 0.8986], device='cuda:0')
Training Output torch.Size([2]) tensor([3.9204e-04, 9.9961e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0033, 0.9967], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0068, 0.9932], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3726, 0.6274], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9908, 0.0092], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0495, 0.9505], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2133, 0.7867], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1619, 0.8381], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0025, 0.9975], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1640, 0.8360], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0205, 0.9795], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5438, 0.4562], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1006, 0.8994], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1145, 0.8855], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6193, 0.3807], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8061, 0.1939], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0049, 0.9951], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0586, 0.9414], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0038, 0.9962], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7345, 0.2655], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2977, 0.7023], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0027, 0.9973], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0034, 0.9966], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0765, 0.9235], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0023, 0.9977], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6219, 0.3781], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6624, 0.3376], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2617, 0.7383], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1194, 0.8806], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5496, 0.4504], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0079, 0.9921], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0581, 0.9419], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2068, 0.7932], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0174, 0.9826], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0555, 0.9445], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0217, 0.9783], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5913, 0.4087], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4763, 0.5237], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0949, 0.9051], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2869, 0.7131], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0415, 0.9585], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9843, 0.0157], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9962, 0.0038], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0665, 0.9335], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2097, 0.7903], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3268, 0.6732], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0107, 0.9893], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9917, 0.0083], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9879, 0.0121], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9291, 0.0709], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0030, 0.9970], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9731, 0.0269], device='cuda:0')
Training Output torch.Size([2]) tensor([9.0397e-04, 9.9910e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3535, 0.6465], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9815, 0.0185], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9829, 0.0171], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0782, 0.9218], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3297, 0.6703], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2029, 0.7971], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9982, 0.0018], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9982, 0.0018], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0572, 0.9428], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0061, 0.9939], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0067, 0.9933], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2629, 0.7371], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2235, 0.7765], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0679, 0.9321], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9921, 0.0079], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 28, Training ones: 69 / 77
outputs torch.Size([24]) tensor([0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7807, 0.2193], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7680, 0.2320], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8449, 0.1551], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2307, 0.7693], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8212, 0.1788], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1606, 0.8394], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1381, 0.8619], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0099, 0.9901], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7199, 0.2801], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3793, 0.6207], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2832, 0.7168], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0207, 0.9793], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1642, 0.8358], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0195, 0.9805], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1277, 0.8723], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9064, 0.0936], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5588, 0.4412], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7162, 0.2838], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0389, 0.9611], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6963, 0.3037], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1779, 0.8221], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0100, 0.9900], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1018, 0.8982], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0558, 0.9442], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 50.000% (loss: 1.026) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0246, 0.9754], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3341, 0.6659], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 9, Training ones: 16 / 17
INFO:root:[   64] train: 85.000% test: 50.000%
INFO:root:Accuracy: 0.82857, Precision: 0.83117, Recall: 0.92754, F1: 0.87671
INFO:root:Val Accuracy: 0.50000, Precision: 0.58824, Recall: 0.62500, F1: 0.60606
INFO:root:F1: 0.60606 did not improve from 0.800000011920929
INFO:root:Epoch 65
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0950, 0.9050], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8836, 0.1164], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1120, 0.8880], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1944, 0.8056], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0590, 0.9410], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0687, 0.9313], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0695, 0.9305], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4645, 0.5355], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1011, 0.8989], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2174, 0.7826], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1717, 0.8283], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0064, 0.9936], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1687, 0.8313], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0133, 0.9867], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9842, 0.0158], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0102, 0.9898], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0300, 0.9700], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9848, 0.0152], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2102, 0.7898], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0553, 0.9447], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6511, 0.3489], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0412, 0.9588], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0260, 0.9740], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1179, 0.8821], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.130) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0088, 0.9912], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0132, 0.9868], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0755, 0.9245], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9706, 0.0294], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7447, 0.2553], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2759, 0.7241], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2590, 0.7410], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7394, 0.2606], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0945, 0.9055], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0103, 0.9897], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0424, 0.9576], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3030, 0.6970], device='cuda:0')
Training Output torch.Size([2]) tensor([4.6553e-04, 9.9953e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0160, 0.9840], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0416, 0.9584], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0518, 0.9482], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0059, 0.9941], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7666, 0.2334], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0484, 0.9516], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3521, 0.6479], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0393, 0.9607], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0051, 0.9949], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0055, 0.9945], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6709, 0.3291], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1346, 0.8654], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8932, 0.1068], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0216, 0.9784], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5132, 0.4868], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0664, 0.9336], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0885, 0.9115], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0282, 0.9718], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0335, 0.9665], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1833, 0.8167], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2911, 0.7089], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0066, 0.9934], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0801, 0.9199], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0857, 0.9143], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0124, 0.9876], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0711, 0.9289], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0030, 0.9970], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0039, 0.9961], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0379, 0.9621], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4297, 0.5703], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0291, 0.9709], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0146, 0.9854], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0061, 0.9939], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0025, 0.9975], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0881, 0.9119], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2306, 0.7694], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3542, 0.6458], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0149, 0.9851], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0048, 0.9952], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0088, 0.9912], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3581, 0.6419], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1935, 0.8065], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9613, 0.0387], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0362, 0.9638], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0111, 0.9889], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0189, 0.9811], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0312, 0.9688], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3550, 0.6450], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9151, 0.0849], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0038, 0.9962], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0077, 0.9923], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0398, 0.9602], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9978, 0.0022], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9450, 0.0550], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0028, 0.9972], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0087, 0.9913], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0187, 0.9813], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0025, 0.9975], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9928, 0.0072], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 16, Training ones: 69 / 89
outputs torch.Size([24]) tensor([0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.8280, 0.1720], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8167, 0.1833], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5466, 0.4534], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1368, 0.8632], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6955, 0.3045], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2015, 0.7985], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1882, 0.8118], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0088, 0.9912], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5660, 0.4340], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3290, 0.6710], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2068, 0.7932], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0122, 0.9878], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0942, 0.9058], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0187, 0.9813], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0331, 0.9669], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8944, 0.1056], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5836, 0.4164], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4140, 0.5860], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0304, 0.9696], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5054, 0.4946], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1824, 0.8176], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0059, 0.9941], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0931, 0.9069], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0415, 0.9585], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 54.167% (loss: 1.035) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0198, 0.9802], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2938, 0.7062], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 8, Training ones: 16 / 18
INFO:root:[   65] train: 83.333% test: 52.083%
INFO:root:Accuracy: 0.80952, Precision: 0.77528, Recall: 1.00000, F1: 0.87342
INFO:root:Val Accuracy: 0.53846, Precision: 0.61111, Recall: 0.68750, F1: 0.64706
INFO:root:F1: 0.64706 did not improve from 0.800000011920929
INFO:root:Epoch 66
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0128, 0.9872], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8049, 0.1951], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3056, 0.6944], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0829, 0.9171], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4570, 0.5430], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1884, 0.8116], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0291, 0.9709], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0437, 0.9563], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0183, 0.9817], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0148, 0.9852], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3751, 0.6249], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0060, 0.9940], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2156, 0.7844], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0150, 0.9850], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9589, 0.0411], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0331, 0.9669], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0763, 0.9237], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7829, 0.2171], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0206, 0.9794], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6835, 0.3165], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9232, 0.0768], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0040, 0.9960], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0205, 0.9795], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0294, 0.9706], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 95.833% (loss: 0.169) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0260, 0.9740], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0171, 0.9829], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0989, 0.9011], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9891, 0.0109], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9987, 0.0013], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8966, 0.1034], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9356, 0.0644], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9654, 0.0346], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4482, 0.5518], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0068, 0.9932], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2338, 0.7662], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1580, 0.8420], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0127, 0.9873], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0417, 0.9583], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2236, 0.7764], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9714, 0.0286], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0265, 0.9735], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1037, 0.8963], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7919, 0.2081], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1027, 0.8973], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9740, 0.0260], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1420, 0.8580], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3261, 0.6739], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0431, 0.9569], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1619, 0.8381], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2677, 0.7323], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7578, 0.2422], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1921, 0.8079], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3308, 0.6692], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0204, 0.9796], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1732, 0.8268], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1361, 0.8639], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0179, 0.9821], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0287, 0.9713], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5133, 0.4867], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3127, 0.6873], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1402, 0.8598], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6012, 0.3988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3875, 0.6125], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0053, 0.9947], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0254, 0.9746], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0670, 0.9330], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0353, 0.9647], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1023, 0.8977], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3353, 0.6647], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0301, 0.9699], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0039, 0.9961], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0975, 0.9025], device='cuda:0')
Training Output torch.Size([2]) tensor([9.2421e-05, 9.9991e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0548, 0.9452], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0370, 0.9630], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9957, 0.0043], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9903, 0.0097], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2696, 0.7304], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0075, 0.9925], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8746, 0.1254], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0148, 0.9852], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0028, 0.9972], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8636, 0.1364], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8474, 0.1526], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9889, 0.0111], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1316, 0.8684], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2769, 0.7231], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0668, 0.9332], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0165, 0.9835], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4557, 0.5443], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7074, 0.2926], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0134, 0.9866], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0143, 0.9857], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0058, 0.9942], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9969, 0.0031], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9967e-01, 3.3080e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0948, 0.9052], device='cuda:0')
Training Output torch.Size([2]) tensor([4.9457e-04, 9.9951e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1736, 0.8264], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0206, 0.9794], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0809, 0.9191], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0036, 0.9964], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9706, 0.0294], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 26, Training ones: 69 / 79
outputs torch.Size([24]) tensor([0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.8824, 0.1176], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9695, 0.0305], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4595, 0.5405], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0650, 0.9350], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9440, 0.0560], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4802, 0.5198], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3168, 0.6832], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0152, 0.9848], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1317, 0.8683], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2201, 0.7799], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1723, 0.8277], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0187, 0.9813], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0792, 0.9208], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0254, 0.9746], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1942, 0.8058], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9651, 0.0349], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7688, 0.2312], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2104, 0.7896], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0554, 0.9446], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3659, 0.6341], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3586, 0.6414], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0251, 0.9749], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1376, 0.8624], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0447, 0.9553], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 50.000% (loss: 1.170) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0209, 0.9791], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3798, 0.6202], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 5, Training ones: 16 / 21
INFO:root:[   66] train: 88.333% test: 50.000%
INFO:root:Accuracy: 0.86667, Precision: 0.84810, Recall: 0.97101, F1: 0.90541
INFO:root:Val Accuracy: 0.50000, Precision: 0.57143, Recall: 0.75000, F1: 0.64865
INFO:root:F1: 0.64865 did not improve from 0.800000011920929
INFO:root:Epoch 67
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0040, 0.9960], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9316, 0.0684], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0333, 0.9667], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0889, 0.9111], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1255, 0.8745], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1715, 0.8285], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2970, 0.7030], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0168, 0.9832], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0107, 0.9893], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0102, 0.9898], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0044, 0.9956], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3239, 0.6761], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0889, 0.9111], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9988, 0.0012], device='cuda:0')
Training Output torch.Size([2]) tensor([1.6800e-04, 9.9983e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0622, 0.9378], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9071, 0.0929], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0277, 0.9723], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0217, 0.9783], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9808, 0.0192], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0025, 0.9975], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0544, 0.9456], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0669, 0.9331], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.074) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0124, 0.9876], device='cuda:0')
Training Output torch.Size([2]) tensor([4.6371e-04, 9.9954e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0027, 0.9973], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9667, 0.0333], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9945, 0.0055], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9600, 0.0400], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9967, 0.0033], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4205, 0.5795], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0555, 0.9445], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0111, 0.9889], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1019, 0.8981], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0068, 0.9932], device='cuda:0')
Training Output torch.Size([2]) tensor([6.1809e-05, 9.9994e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5146, 0.4854], device='cuda:0')
Training Output torch.Size([2]) tensor([5.6148e-04, 9.9944e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0054, 0.9946], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0986, 0.9014], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0121, 0.9879], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9797, 0.0203], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0040, 0.9960], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0977, 0.9023], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0358, 0.9642], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0072, 0.9928], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0096, 0.9904], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0736, 0.9264], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1539, 0.8461], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9250, 0.0750], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0031, 0.9969], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0196, 0.9804], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0320, 0.9680], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9949, 0.0051], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0047, 0.9953], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8621, 0.1379], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1372, 0.8628], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0123, 0.9877], device='cuda:0')
Training Output torch.Size([2]) tensor([5.3161e-04, 9.9947e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0169, 0.9831], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0039, 0.9961], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0074, 0.9926], device='cuda:0')
Training Output torch.Size([2]) tensor([5.2134e-04, 9.9948e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.8381e-05, 9.9990e-01], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([3.0598e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.3393e-04, 9.9957e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0282, 0.9718], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0597, 0.9403], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7557, 0.2443], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4995, 0.5005], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0186, 0.9814], device='cuda:0')
Training Output torch.Size([2]) tensor([4.8218e-04, 9.9952e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0127, 0.9873], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1609, 0.8391], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5220, 0.4780], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8738, 0.1262], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9917e-01, 8.3121e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0232, 0.9768], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9668, 0.0332], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2256, 0.7744], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3732, 0.6268], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8132, 0.1868], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0609, 0.9391], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0087, 0.9913], device='cuda:0')
Training Output torch.Size([2]) tensor([5.3578e-04, 9.9946e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0070, 0.9930], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9937, 0.0063], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9965e-01, 3.5144e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([3.5489e-04, 9.9965e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.9928e-05, 9.9991e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7153, 0.2847], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0111, 0.9889], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0096, 0.9904], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9994e-01, 5.8064e-05], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 23, Training ones: 69 / 82
outputs torch.Size([24]) tensor([0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9791, 0.0209], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9988, 0.0012], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8611, 0.1389], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3276, 0.6724], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9982e-01, 1.7675e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7973, 0.2027], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7228, 0.2772], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0385, 0.9615], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1957, 0.8043], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8384, 0.1616], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6528, 0.3472], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1277, 0.8723], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3900, 0.6100], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0823, 0.9177], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8252, 0.1748], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9983, 0.0017], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9779, 0.0221], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8981, 0.1019], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2660, 0.7340], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7833, 0.2167], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8838, 0.1162], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0611, 0.9389], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6353, 0.3647], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1061, 0.8939], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 50.000% (loss: 1.604) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1116, 0.8884], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8445, 0.1555], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 16, Training ones: 16 / 10
INFO:root:[   67] train: 86.111% test: 75.000%
INFO:root:Accuracy: 0.85714, Precision: 0.82927, Recall: 0.98551, F1: 0.90066
INFO:root:Val Accuracy: 0.53846, Precision: 0.70000, Recall: 0.43750, F1: 0.53846
INFO:root:F1: 0.53846 did not improve from 0.800000011920929
INFO:root:Epoch 68
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1422, 0.8578], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9944, 0.0056], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1749, 0.8251], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4477, 0.5523], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0102, 0.9898], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0166, 0.9834], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0489, 0.9511], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2794, 0.7206], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1055, 0.8945], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0238, 0.9762], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0116, 0.9884], device='cuda:0')
Training Output torch.Size([2]) tensor([2.1236e-04, 9.9979e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2275, 0.7725], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9759, 0.0241], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9992e-01, 8.2202e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([2.4633e-04, 9.9975e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2224, 0.7776], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9980, 0.0020], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1060, 0.8940], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1056, 0.8944], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9933e-01, 6.7456e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1146, 0.8854], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1904, 0.8096], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1965, 0.8035], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 95.833% (loss: 0.271) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0518, 0.9482], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1471, 0.8529], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9907e-01, 9.2538e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9963, 0.0037], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9803, 0.0197], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9945e-01, 5.5386e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8680, 0.1320], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3990, 0.6010], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7253, 0.2747], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0074, 0.9926], device='cuda:0')
Training Output torch.Size([2]) tensor([6.7719e-04, 9.9932e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.2721e-04, 9.9957e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4508, 0.5492], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0054, 0.9946], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9926, 0.0074], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0480, 0.9520], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0081, 0.9919], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4608, 0.5392], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3422, 0.6578], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3923, 0.6077], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0536, 0.9464], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3255, 0.6745], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0764, 0.9236], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0225, 0.9775], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0266, 0.9734], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9931, 0.0069], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0084, 0.9916], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4657, 0.5343], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0144, 0.9856], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0096, 0.9904], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0496, 0.9504], device='cuda:0')
Training Output torch.Size([2]) tensor([7.7029e-04, 9.9923e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0054, 0.9946], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9971, 0.0029], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0117, 0.9883], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0195, 0.9805], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9066, 0.0934], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0199, 0.9801], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0051, 0.9949], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0708, 0.9292], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0086, 0.9914], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3499, 0.6501], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6727, 0.3273], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0464, 0.9536], device='cuda:0')
Training Output torch.Size([2]) tensor([8.9170e-04, 9.9911e-01], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0557, 0.9443], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0465, 0.9535], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0444, 0.9556], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3152, 0.6848], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9966, 0.0034], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9555, 0.0445], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0544, 0.9456], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([7.7180e-04, 9.9923e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9850, 0.0150], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9582, 0.0418], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9633, 0.0367], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0059, 0.9941], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2692, 0.7308], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0038, 0.9962], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0494, 0.9506], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9891, 0.0109], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8604, 0.1396], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1271, 0.8729], device='cuda:0')
Training Output torch.Size([2]) tensor([2.5217e-04, 9.9975e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0150, 0.9850], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0903, 0.9097], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9985, 0.0015], device='cuda:0')
Training Output torch.Size([2]) tensor([6.0589e-04, 9.9939e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0043, 0.9957], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Training Output torch.Size([2]) tensor([5.6148e-04, 9.9944e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9966, 0.0034], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 25, Training ones: 69 / 80
outputs torch.Size([24]) tensor([0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9013, 0.0987], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9308, 0.0692], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4188, 0.5812], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1245, 0.8755], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9926, 0.0074], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3222, 0.6778], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1024, 0.8976], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0039, 0.9961], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4677, 0.5323], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7191, 0.2809], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1872, 0.8128], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0232, 0.9768], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2587, 0.7413], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0064, 0.9936], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3472, 0.6528], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9590, 0.0410], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6300, 0.3700], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9041, 0.0959], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0292, 0.9708], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7224, 0.2776], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2863, 0.7137], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0146, 0.9854], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1391, 0.8609], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0393, 0.9607], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 45.833% (loss: 1.214) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0328, 0.9672], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3083, 0.6917], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 8, Training ones: 16 / 18
INFO:root:[   68] train: 86.111% test: 47.917%
INFO:root:Accuracy: 0.85714, Precision: 0.83750, Recall: 0.97101, F1: 0.89933
INFO:root:Val Accuracy: 0.46154, Precision: 0.55556, Recall: 0.62500, F1: 0.58824
INFO:root:F1: 0.58824 did not improve from 0.800000011920929
INFO:root:Epoch 69
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0638, 0.9362], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8431, 0.1569], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0339, 0.9661], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0870, 0.9130], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0100, 0.9900], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0312, 0.9688], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2553, 0.7447], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0062, 0.9938], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0044, 0.9956], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0063, 0.9937], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3575, 0.6425], device='cuda:0')
Training Output torch.Size([2]) tensor([3.9434e-04, 9.9961e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3737, 0.6263], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1209, 0.8791], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9925, 0.0075], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0060, 0.9940], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0053, 0.9947], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9937, 0.0063], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0065, 0.9935], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0424, 0.9576], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9895, 0.0105], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0197, 0.9803], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0874, 0.9126], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2347, 0.7653], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.092) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Output torch.Size([2]) tensor([5.8042e-04, 9.9942e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.6931e-04, 9.9983e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7897, 0.2103], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9952, 0.0048], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2689, 0.7311], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3436, 0.6564], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9617, 0.0383], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0144, 0.9856], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0038, 0.9962], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4682, 0.5318], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0144, 0.9856], device='cuda:0')
Training Output torch.Size([2]) tensor([7.4661e-04, 9.9925e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0774, 0.9226], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0204, 0.9796], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8742, 0.1258], device='cuda:0')
Training Output torch.Size([2]) tensor([4.7285e-04, 9.9953e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5457, 0.4543], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9594, 0.0406], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2635, 0.7365], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9969, 0.0031], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0087, 0.9913], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4738, 0.5262], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0040, 0.9960], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0384, 0.9616], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1103, 0.8897], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8805, 0.1195], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0325, 0.9675], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0235, 0.9765], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0060, 0.9940], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1989, 0.8011], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0088, 0.9912], device='cuda:0')
Training Output torch.Size([2]) tensor([8.8132e-04, 9.9912e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0123, 0.9877], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8320, 0.1680], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0253, 0.9747], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0067, 0.9933], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3737, 0.6263], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0288, 0.9712], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2286, 0.7714], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0023, 0.9977], device='cuda:0')
Training Output torch.Size([2]) tensor([5.0137e-04, 9.9950e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0466, 0.9534], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0065, 0.9935], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3951, 0.6049], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0088, 0.9912], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0137, 0.9863], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0044, 0.9956], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0034, 0.9966], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0070, 0.9930], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1893, 0.8107], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7344, 0.2656], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9321, 0.0679], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0048, 0.9952], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0303, 0.9697], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5668, 0.4332], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0030, 0.9970], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0847e-04, 9.9989e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9842, 0.0158], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8589, 0.1411], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9834, 0.0166], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0091, 0.9909], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1770, 0.8230], device='cuda:0')
Training Output torch.Size([2]) tensor([5.4848e-04, 9.9945e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0973, 0.9027], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0657, 0.9343], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0531, 0.9469], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0611, 0.9389], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0029, 0.9971], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0651, 0.9349], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5255, 0.4745], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9963, 0.0037], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0269, 0.9731], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0212, 0.9788], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0115, 0.9885], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0291, 0.9709], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1857, 0.8143], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9983e-01, 1.6964e-04], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 22, Training ones: 69 / 83
outputs torch.Size([24]) tensor([0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9966, 0.0034], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9769, 0.0231], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9583, 0.0417], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8858, 0.1142], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9981, 0.0019], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8249, 0.1751], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4740, 0.5260], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0143, 0.9857], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9980, 0.0020], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9849, 0.0151], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7363, 0.2637], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1045, 0.8955], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6542, 0.3458], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0324, 0.9676], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2252, 0.7748], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9963, 0.0037], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9736, 0.0264], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9981, 0.0019], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1247, 0.8753], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9959, 0.0041], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6576, 0.3424], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0129, 0.9871], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6233, 0.3767], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4934, 0.5066], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 54.167% (loss: 1.782) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1285, 0.8715], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4476, 0.5524], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 16, Training ones: 16 / 10
INFO:root:[   69] train: 85.000% test: 52.083%
INFO:root:Accuracy: 0.82857, Precision: 0.80723, Recall: 0.97101, F1: 0.88158
INFO:root:Val Accuracy: 0.53846, Precision: 0.70000, Recall: 0.43750, F1: 0.53846
INFO:root:F1: 0.53846 did not improve from 0.800000011920929
INFO:root:Epoch 70
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0289, 0.9711], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9847, 0.0153], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0495, 0.9505], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4749, 0.5251], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5387, 0.4613], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2473, 0.7527], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7460, 0.2540], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8023, 0.1977], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0059, 0.9941], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0883, 0.9117], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0388, 0.9612], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0295, 0.9705], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0825, 0.9175], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0614, 0.9386], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 2.1361e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0362, 0.9638], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0284, 0.9716], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9936, 0.0064], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7847, 0.2153], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7873, 0.2127], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1799, 0.8201], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8380, 0.1620], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2238, 0.7762], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0663, 0.9337], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 70.833% (loss: 0.505) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0526, 0.9474], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4752, 0.5248], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1354, 0.8646], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9924, 0.0076], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9974, 0.0026], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9870, 0.0130], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9902, 0.0098], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9928, 0.0072], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6660, 0.3340], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1503, 0.8497], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1622, 0.8378], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3716, 0.6284], device='cuda:0')
Training Output torch.Size([2]) tensor([1.2007e-04, 9.9988e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0956, 0.9044], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5447, 0.4553], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9638, 0.0362], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0138, 0.9862], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8776, 0.1224], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9793, 0.0207], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0550, 0.9450], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9879, 0.0121], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1359, 0.8641], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6402, 0.3598], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1343, 0.8657], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0357, 0.9643], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4929, 0.5071], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9611, 0.0389], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1636, 0.8364], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1984, 0.8016], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6735, 0.3265], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9970, 0.0030], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1541, 0.8459], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0111, 0.9889], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0880, 0.9120], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9981, 0.0019], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8971, 0.1029], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8391, 0.1609], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7835, 0.2165], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8832, 0.1168], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5410, 0.4590], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1879, 0.8121], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2248, 0.7752], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0158, 0.9842], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2546, 0.7454], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2449, 0.7551], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1015, 0.8985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0550, 0.9450], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3233, 0.6767], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0033, 0.9967], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2814, 0.7186], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4673, 0.5327], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2969, 0.7031], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9990, 0.0010], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9826, 0.0174], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2842, 0.7158], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0090, 0.9910], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6959, 0.3041], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0209, 0.9791], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0475, 0.9525], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9945e-01, 5.5278e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9936, 0.0064], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9946e-01, 5.3578e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0792, 0.9208], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9980, 0.0020], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0320, 0.9680], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0721, 0.9279], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4901, 0.5099], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9826, 0.0174], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5554, 0.4446], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3521, 0.6479], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2434, 0.7566], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9941, 0.0059], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9700, 0.0300], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0296, 0.9704], device='cuda:0')
Training Output torch.Size([2]) tensor([8.1356e-04, 9.9919e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0290, 0.9710], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0141, 0.9859], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0065, 0.9935], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0036, 0.9964], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9901, 0.0099], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 42, Training ones: 69 / 63
outputs torch.Size([24]) tensor([0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9267, 0.0733], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5881, 0.4119], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3118, 0.6882], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1607, 0.8393], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9881, 0.0119], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3162, 0.6838], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1390, 0.8610], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0089, 0.9911], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9311, 0.0689], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2462, 0.7538], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2299, 0.7701], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0249, 0.9751], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1096, 0.8904], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0056, 0.9944], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0599, 0.9401], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9869, 0.0131], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6084, 0.3916], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8197, 0.1803], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0303, 0.9697], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9316, 0.0684], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1068, 0.8932], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0063, 0.9937], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0684, 0.9316], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0410, 0.9590], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 54.167% (loss: 1.134) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0241, 0.9759], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0725, 0.9275], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 8, Training ones: 16 / 18
INFO:root:[   70] train: 76.667% test: 52.083%
INFO:root:Accuracy: 0.73333, Precision: 0.82540, Recall: 0.75362, F1: 0.78788
INFO:root:Val Accuracy: 0.53846, Precision: 0.61111, Recall: 0.68750, F1: 0.64706
INFO:root:F1: 0.64706 did not improve from 0.800000011920929
INFO:root:Epoch 71
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0515, 0.9485], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9429, 0.0571], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1765, 0.8235], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0968, 0.9032], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0184, 0.9816], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0480, 0.9520], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0188, 0.9812], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0148, 0.9852], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0098, 0.9902], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0027, 0.9973], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0205, 0.9795], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0082, 0.9918], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0994, 0.9006], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0139, 0.9861], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9754, 0.0246], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0046, 0.9954], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0736, 0.9264], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9651, 0.0349], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0323, 0.9677], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0736, 0.9264], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9826, 0.0174], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0253, 0.9747], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0239, 0.9761], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2475, 0.7525], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.053) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0028, 0.9972], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0064, 0.9936], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0038, 0.9962], device='cuda:0')
Training Output torch.Size([2]) tensor([7.9628e-04, 9.9920e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9881, 0.0119], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9298, 0.0702], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2382, 0.7618], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1707, 0.8293], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0285, 0.9715], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0138, 0.9862], device='cuda:0')
Training Output torch.Size([2]) tensor([3.7410e-04, 9.9963e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0155, 0.9845], device='cuda:0')
Training Output torch.Size([2]) tensor([3.8379e-05, 9.9996e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.0463e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0252, 0.9748], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0103, 0.9897], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3496, 0.6504], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0099, 0.9901], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0827, 0.9173], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3648, 0.6352], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1779, 0.8221], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9311, 0.0689], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0817, 0.9183], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0025, 0.9975], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0185, 0.9815], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0033, 0.9967], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0282, 0.9718], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6250, 0.3750], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0132, 0.9868], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1029, 0.8971], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6333, 0.3667], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0077, 0.9923], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3838, 0.6162], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0071, 0.9929], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5323, 0.4677], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0356, 0.9644], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2079, 0.7921], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4549, 0.5451], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0101, 0.9899], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7125, 0.2875], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0066, 0.9934], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0970, 0.9030], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0162, 0.9838], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1860, 0.8140], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2003, 0.7997], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0112, 0.9888], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0042, 0.9958], device='cuda:0')
Training Output torch.Size([2]) tensor([1.8059e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.6322e-05, 9.9992e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1016, 0.8984], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0395, 0.9605], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8755, 0.1245], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9511, 0.0489], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0071, 0.9929], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0141, 0.9859], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5958, 0.4042], device='cuda:0')
Training Output torch.Size([2]) tensor([9.2719e-04, 9.9907e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.6856e-05, 9.9990e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9602, 0.0398], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9854, 0.0146], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7386, 0.2614], device='cuda:0')
Training Output torch.Size([2]) tensor([1.2388e-04, 9.9988e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8287, 0.1713], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0145, 0.9855], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6402, 0.3598], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9880, 0.0120], device='cuda:0')
Training Output torch.Size([2]) tensor([6.6410e-04, 9.9934e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0040, 0.9960], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0258, 0.9742], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9794, 0.0206], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9946, 0.0054], device='cuda:0')
Training Output torch.Size([2]) tensor([8.9345e-04, 9.9911e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.0007e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1118, 0.8882], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0054, 0.9946], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0295, 0.9705], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9990, 0.0010], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 23, Training ones: 69 / 82
outputs torch.Size([24]) tensor([0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.8348, 0.1652], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3510, 0.6490], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1331, 0.8669], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0381, 0.9619], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3673, 0.6327], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2373, 0.7627], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0610, 0.9390], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0039, 0.9961], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8159, 0.1841], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0342, 0.9658], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0803, 0.9197], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0080, 0.9920], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0295, 0.9705], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0098, 0.9902], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9891, 0.0109], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3517, 0.6483], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4589, 0.5411], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0129, 0.9871], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8924, 0.1076], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0309, 0.9691], device='cuda:0')
Validation Output torch.Size([2]) tensor([4.7101e-04, 9.9953e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0150, 0.9850], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0093, 0.9907], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 62.500% (loss: 1.398) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0103, 0.9897], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0247, 0.9753], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 4, Training ones: 16 / 22
INFO:root:[   71] train: 85.833% test: 56.250%
INFO:root:Accuracy: 0.83810, Precision: 0.81707, Recall: 0.97101, F1: 0.88742
INFO:root:Val Accuracy: 0.61538, Precision: 0.63636, Recall: 0.87500, F1: 0.73684
INFO:root:F1: 0.73684 did not improve from 0.800000011920929
INFO:root:Epoch 72
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.0001e-04, 9.9940e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7301, 0.2699], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0137, 0.9863], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0127, 0.9873], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2344, 0.7656], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0042, 0.9958], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0419, 0.9581], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0044, 0.9956], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1151, 0.8849], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0046, 0.9954], device='cuda:0')
Training Output torch.Size([2]) tensor([3.8672e-04, 9.9961e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0063, 0.9937], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9950, 0.0050], device='cuda:0')
Training Output torch.Size([2]) tensor([5.8519e-05, 9.9994e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9950e-01, 4.9650e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0036, 0.9964], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0079, 0.9921], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9928, 0.0072], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0114, 0.9886], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1492, 0.8508], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3330, 0.6670], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.058) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0030, 0.9970], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0202, 0.9798], device='cuda:0')
Training Output torch.Size([2]) tensor([3.4944e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9991e-01, 9.0634e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2538, 0.7462], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0443, 0.9557], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9036, 0.0964], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2041, 0.7959], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5430, 0.4570], device='cuda:0')
Training Output torch.Size([2]) tensor([3.0595e-04, 9.9969e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0154, 0.9846], device='cuda:0')
Training Output torch.Size([2]) tensor([3.5837e-04, 9.9964e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.7668e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([8.9694e-04, 9.9910e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9859, 0.0141], device='cuda:0')
Training Output torch.Size([2]) tensor([2.6478e-04, 9.9974e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0047, 0.9953], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4770, 0.5230], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0213, 0.9787], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8674, 0.1326], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0118, 0.9882], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1495, 0.8505], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0052, 0.9948], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0240, 0.9760], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8362, 0.1638], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2941, 0.7059], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0029, 0.9971], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0143, 0.9857], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2107, 0.7893], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0101, 0.9899], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0156, 0.9844], device='cuda:0')
Training Output torch.Size([2]) tensor([1.6410e-04, 9.9984e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0092, 0.9908], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2899, 0.7101], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1108, 0.8892], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0214, 0.9786], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0543, 0.9457], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9667, 0.0333], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1109, 0.8891], device='cuda:0')
Training Output torch.Size([2]) tensor([2.5664e-04, 9.9974e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0048, 0.9952], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0373, 0.9627], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0076, 0.9924], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0077, 0.9923], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0183, 0.9817], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0059, 0.9941], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0176, 0.9824], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9978, 0.0022], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9996e-01, 3.8680e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7456, 0.2544], device='cuda:0')
Training Output torch.Size([2]) tensor([1.6251e-04, 9.9984e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0059, 0.9941], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0070, 0.9930], device='cuda:0')
Training Output torch.Size([2]) tensor([6.7587e-04, 9.9932e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9918e-01, 8.2153e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9985e-01, 1.5477e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9911, 0.0089], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0048, 0.9952], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9523, 0.0477], device='cuda:0')
Training Output torch.Size([2]) tensor([1.8450e-04, 9.9982e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0558, 0.9442], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9168, 0.0832], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9902, 0.0098], device='cuda:0')
Training Output torch.Size([2]) tensor([7.2544e-05, 9.9993e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0075, 0.9925], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0207, 0.9793], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9948e-01, 5.1930e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9991e-01, 9.1344e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([2.8131e-04, 9.9972e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.2172e-04, 9.9988e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0143, 0.9857], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0048, 0.9952], device='cuda:0')
Training Output torch.Size([2]) tensor([1.2364e-04, 9.9988e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0069, 0.9931], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9991e-01, 8.5811e-05], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 23, Training ones: 69 / 82
outputs torch.Size([24]) tensor([0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9815, 0.0185], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9104, 0.0896], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3269, 0.6731], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1435, 0.8565], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1777, 0.8223], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6647, 0.3353], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1546, 0.8454], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0047, 0.9953], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7938, 0.2062], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1489, 0.8511], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2322, 0.7678], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0085, 0.9915], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0485, 0.9515], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0045, 0.9955], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0049, 0.9951], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9981, 0.0019], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9133, 0.0867], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3775, 0.6225], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0203, 0.9797], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9452, 0.0548], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0938, 0.9062], device='cuda:0')
Validation Output torch.Size([2]) tensor([4.2554e-04, 9.9957e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0220, 0.9780], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0146, 0.9854], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 50.000% (loss: 1.608) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0193, 0.9807], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1408, 0.8592], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 7, Training ones: 16 / 19
INFO:root:[   72] train: 84.167% test: 50.000%
INFO:root:Accuracy: 0.81905, Precision: 0.80488, Recall: 0.95652, F1: 0.87417
INFO:root:Val Accuracy: 0.50000, Precision: 0.57895, Recall: 0.68750, F1: 0.62857
INFO:root:F1: 0.62857 did not improve from 0.800000011920929
INFO:root:Epoch 73
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0091, 0.9909], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9837, 0.0163], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0074, 0.9926], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0146, 0.9854], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0484, 0.9516], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0272, 0.9728], device='cuda:0')
Training Output torch.Size([2]) tensor([5.4848e-04, 9.9945e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0100, 0.9900], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([9.6856e-05, 9.9990e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0034, 0.9966], device='cuda:0')
Training Output torch.Size([2]) tensor([1.9640e-04, 9.9980e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9956, 0.0044], device='cuda:0')
Training Output torch.Size([2]) tensor([7.0863e-05, 9.9993e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9897, 0.0103], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0067, 0.9933], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0045, 0.9955], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9283, 0.0717], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0176, 0.9824], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0121, 0.9879], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0072, 0.9928], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.012) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.5846e-04, 9.9904e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3555, 0.6445], device='cuda:0')
Training Output torch.Size([2]) tensor([1.5537e-04, 9.9984e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.7744e-04, 9.9982e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9992e-01, 7.9053e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9981, 0.0019], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9963e-01, 3.6830e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9988, 0.0012], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8300, 0.1700], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0972, 0.9028], device='cuda:0')
Training Output torch.Size([2]) tensor([2.8186e-04, 9.9972e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0095, 0.9905], device='cuda:0')
Training Output torch.Size([2]) tensor([2.5714e-04, 9.9974e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.7109e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0087, 0.9913], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0051, 0.9949], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9990e-01, 1.0071e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0494, 0.9506], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0859, 0.9141], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2030, 0.7970], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0070, 0.9930], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9805, 0.0195], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0166, 0.9834], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1941, 0.8059], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0082, 0.9918], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1816, 0.8184], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5970, 0.4030], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9007, 0.0993], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0054, 0.9946], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0895, 0.9105], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0845, 0.9155], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5380, 0.4620], device='cuda:0')
Training Output torch.Size([2]) tensor([8.1039e-04, 9.9919e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0091, 0.9909], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8447, 0.1553], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0379, 0.9621], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9987, 0.0013], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9916, 0.0084], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0790, 0.9210], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0109, 0.9891], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0111, 0.9889], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4142, 0.5858], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1533, 0.8467], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0033, 0.9967], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0172, 0.9828], device='cuda:0')
Training Output torch.Size([2]) tensor([2.9596e-04, 9.9970e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0194, 0.9806], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8252, 0.1748], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3958, 0.6042], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9992e-01, 8.0612e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0597, 0.9403], device='cuda:0')
Training Output torch.Size([2]) tensor([4.5742e-04, 9.9954e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2710, 0.7290], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0337, 0.9663], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0025, 0.9975], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7806, 0.2194], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9983, 0.0017], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9992e-01, 7.9673e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0082, 0.9918], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9936e-01, 6.3619e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0063, 0.9937], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0279, 0.9721], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8509, 0.1491], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9845, 0.0155], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0081, 0.9919], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0184, 0.9816], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0068, 0.9932], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9990, 0.0010], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9996e-01, 3.9752e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0040, 0.9960], device='cuda:0')
Training Output torch.Size([2]) tensor([5.6148e-04, 9.9944e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0791, 0.9209], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1604, 0.8396], device='cuda:0')
Training Output torch.Size([2]) tensor([8.3936e-04, 9.9916e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9976e-01, 2.4441e-04], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 28, Training ones: 69 / 77
outputs torch.Size([24]) tensor([0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9817, 0.0183], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7730, 0.2270], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0451, 0.9549], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2748, 0.7252], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8806, 0.1194], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2764, 0.7236], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0897, 0.9103], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0043, 0.9957], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2831, 0.7169], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2034, 0.7966], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2360, 0.7640], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0055, 0.9945], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0437, 0.9563], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0137, 0.9863], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9979, 0.0021], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8528, 0.1472], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2790, 0.7210], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0103, 0.9897], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6230, 0.3770], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0502, 0.9498], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.2473e-04, 9.9978e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0198, 0.9802], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0093, 0.9907], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 54.167% (loss: 1.537) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0116, 0.9884], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0933, 0.9067], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 6, Training ones: 16 / 20
INFO:root:[   73] train: 88.333% test: 52.083%
INFO:root:Accuracy: 0.86667, Precision: 0.85714, Recall: 0.95652, F1: 0.90411
INFO:root:Val Accuracy: 0.53846, Precision: 0.60000, Recall: 0.75000, F1: 0.66667
INFO:root:F1: 0.66667 did not improve from 0.800000011920929
INFO:root:Epoch 74
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8839, 0.1161], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0347, 0.9653], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0100, 0.9900], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0164, 0.9836], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0045, 0.9955], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0125, 0.9875], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([5.6258e-04, 9.9944e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.3214e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0274, 0.9726], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8205, 0.1795], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0080, 0.9920], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0274, 0.9726], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9988, 0.0012], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0069, 0.9931], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9937, 0.0063], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9955e-01, 4.4770e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1255, 0.8745], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0892, 0.9108], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0234, 0.9766], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 95.833% (loss: 0.242) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0515, 0.9485], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0078, 0.9922], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0077, 0.9923], device='cuda:0')
Training Output torch.Size([2]) tensor([5.4955e-04, 9.9945e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9966, 0.0034], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9981, 0.0019], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2751, 0.7249], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9136, 0.0864], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5212, 0.4788], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0035, 0.9965], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0108, 0.9892], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Training Output torch.Size([2]) tensor([2.4206e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.5537e-04, 9.9984e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.8841e-04, 9.9941e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0110, 0.9890], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2322, 0.7678], device='cuda:0')
Training Output torch.Size([2]) tensor([8.8650e-04, 9.9911e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0116, 0.9884], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9552, 0.0448], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0411, 0.9589], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0481, 0.9519], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2078, 0.7922], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0392, 0.9608], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9254, 0.0746], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0175, 0.9825], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0069, 0.9931], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0335, 0.9665], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0049, 0.9951], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0263, 0.9737], device='cuda:0')
Training Output torch.Size([2]) tensor([2.3551e-04, 9.9976e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0028, 0.9972], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0053, 0.9947], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0130, 0.9870], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0036, 0.9964], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0036, 0.9964], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0064, 0.9936], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1944, 0.8056], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0501, 0.9499], device='cuda:0')
Training Output torch.Size([2]) tensor([2.8407e-04, 9.9972e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0042, 0.9958], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0276, 0.9724], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0129, 0.9871], device='cuda:0')
Training Output torch.Size([2]) tensor([4.9942e-04, 9.9950e-01], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0138, 0.9862], device='cuda:0')
Training Output torch.Size([2]) tensor([2.6375e-04, 9.9974e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.1517e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0040, 0.9960], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0510, 0.9490], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9799, 0.0201], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9912e-01, 8.8305e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0439, 0.9561], device='cuda:0')
Training Output torch.Size([2]) tensor([1.5030e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1031, 0.8969], device='cuda:0')
Training Output torch.Size([2]) tensor([5.0055e-05, 9.9995e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.5949e-05, 9.9994e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0101, 0.9899], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6873, 0.3127], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6001, 0.3999], device='cuda:0')
Training Output torch.Size([2]) tensor([7.0829e-04, 9.9929e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5529, 0.4471], device='cuda:0')
Training Output torch.Size([2]) tensor([5.3161e-04, 9.9947e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0055, 0.9945], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4211, 0.5789], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8946, 0.1054], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0111, 0.9889], device='cuda:0')
Training Output torch.Size([2]) tensor([3.6188e-04, 9.9964e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9979, 0.0021], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9954e-01, 4.6281e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0046, 0.9954], device='cuda:0')
Training Output torch.Size([2]) tensor([1.7778e-04, 9.9982e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0149, 0.9851], device='cuda:0')
Training Output torch.Size([2]) tensor([7.5246e-04, 9.9925e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Output torch.Size([2]) tensor([1.9185e-04, 9.9981e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9498, 0.0502], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 20, Training ones: 69 / 85
outputs torch.Size([24]) tensor([0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9392, 0.0608], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5804, 0.4196], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0358, 0.9642], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4079, 0.5921], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9160, 0.0840], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1615, 0.8385], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1037, 0.8963], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0152, 0.9848], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2916, 0.7084], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2768, 0.7232], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3042, 0.6958], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0155, 0.9845], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1199, 0.8801], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0045, 0.9955], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0924, 0.9076], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9946, 0.0054], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6558, 0.3442], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5241, 0.4759], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0193, 0.9807], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3663, 0.6337], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0701, 0.9299], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0027, 0.9973], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0431, 0.9569], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0202, 0.9798], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 45.833% (loss: 1.247) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0251, 0.9749], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0983, 0.9017], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 6, Training ones: 16 / 20
INFO:root:[   74] train: 85.000% test: 47.917%
INFO:root:Accuracy: 0.82857, Precision: 0.80000, Recall: 0.98551, F1: 0.88312
INFO:root:Val Accuracy: 0.46154, Precision: 0.55000, Recall: 0.68750, F1: 0.61111
INFO:root:F1: 0.61111 did not improve from 0.800000011920929
INFO:root:Epoch 75
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0041, 0.9959], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8669, 0.1331], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0038, 0.9962], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0020, 0.9980], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0138, 0.9862], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0114, 0.9886], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0260, 0.9740], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0073, 0.9927], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0179, 0.9821], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0603, 0.9397], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0093, 0.9907], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0263, 0.9737], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9466, 0.0534], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0062, 0.9938], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0238, 0.9762], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9967, 0.0033], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0485, 0.9515], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0839, 0.9161], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0141, 0.9859], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0120, 0.9880], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0198, 0.9802], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 95.833% (loss: 0.125) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1106, 0.8894], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1418, 0.8582], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0229, 0.9771], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0374, 0.9626], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9928e-01, 7.1803e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1078, 0.8922], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8123, 0.1877], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9626, 0.0374], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1706, 0.8294], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1005, 0.8995], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0098, 0.9902], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0627, 0.9373], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0110, 0.9890], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0311, 0.9689], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0213, 0.9787], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6448, 0.3552], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0071, 0.9929], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2751, 0.7249], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6007, 0.3993], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8842, 0.1158], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7925, 0.2075], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1611, 0.8389], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0301, 0.9699], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1599, 0.8401], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8918, 0.1082], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9615, 0.0385], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9842, 0.0158], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2561, 0.7439], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9645, 0.0355], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1200, 0.8800], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3855, 0.6145], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3842, 0.6158], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0246, 0.9754], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1439, 0.8561], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9983, 0.0017], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8750, 0.1250], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1897, 0.8103], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0787, 0.9213], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5827, 0.4173], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1973, 0.8027], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9329, 0.0671], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0131, 0.9869], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8873, 0.1127], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5592, 0.4408], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3099, 0.6901], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4923, 0.5077], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0046, 0.9954], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2689, 0.7311], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0255, 0.9745], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1529, 0.8471], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6896, 0.3104], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7162, 0.2838], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9860, 0.0140], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9985e-01, 1.4884e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4282, 0.5718], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0630, 0.9370], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1495, 0.8505], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2626, 0.7374], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2232, 0.7768], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9985, 0.0015], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9989e-01, 1.1192e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9997e-01, 3.4944e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5218, 0.4782], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9830, 0.0170], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0787, 0.9213], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6725, 0.3275], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9672, 0.0328], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7721, 0.2279], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6444, 0.3556], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9962, 0.0038], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5106, 0.4894], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9999e-01, 7.7670e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 2.2212e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4309, 0.5691], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0242, 0.9758], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0835, 0.9165], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5745, 0.4255], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8353, 0.1647], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1840, 0.8160], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9934, 0.0066], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 40, Training ones: 69 / 65
outputs torch.Size([24]) tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9989, 0.0011], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9949, 0.0051], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8972, 0.1028], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9868, 0.0132], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9852, 0.0148], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9667, 0.0333], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9045, 0.0955], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6267, 0.3733], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9877, 0.0123], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9831, 0.0169], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9811, 0.0189], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5079, 0.4921], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9598, 0.0402], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3785, 0.6215], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8790, 0.1210], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9980e-01, 1.9949e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9956, 0.0044], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9981, 0.0019], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5815, 0.4185], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9714, 0.0286], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9303, 0.0697], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3468, 0.6532], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7815, 0.2185], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6682, 0.3318], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 37.500% (loss: 2.213) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7490, 0.2510], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9450, 0.0550], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 24, Training ones: 16 / 2
INFO:root:[   75] train: 78.889% test: 43.750%
INFO:root:Accuracy: 0.79048, Precision: 0.86154, Recall: 0.81159, F1: 0.83582
INFO:root:Val Accuracy: 0.38462, Precision: 0.50000, Recall: 0.06250, F1: 0.11111
INFO:root:F1: 0.11111 did not improve from 0.800000011920929
INFO:root:Epoch 76
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5438, 0.4562], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9974e-01, 2.5916e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4843, 0.5157], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9311, 0.0689], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9744, 0.0256], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3257, 0.6743], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6357, 0.3643], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8321, 0.1679], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7256, 0.2744], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1854, 0.8146], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9910, 0.0090], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1151, 0.8849], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7457, 0.2543], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5484, 0.4516], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9813, 0.0187], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3596, 0.6404], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9751, 0.0249], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9959e-01, 4.0606e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4112, 0.5888], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7620, 0.2380], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9993e-01, 7.1979e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6389, 0.3611], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7304, 0.2696], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7316, 0.2684], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 41.667% (loss: 1.218) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3211, 0.6789], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6791, 0.3209], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0371, 0.9629], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5788, 0.4212], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9982e-01, 1.7606e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9530, 0.0470], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9920, 0.0080], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9304, 0.0696], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9914e-01, 8.5925e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4490, 0.5510], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3437, 0.6563], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3884, 0.6116], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7969, 0.2031], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0998, 0.9002], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5392, 0.4608], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5845, 0.4155], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9963e-01, 3.7119e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3097, 0.6903], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8391, 0.1609], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9955e-01, 4.4683e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3901, 0.6099], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9988, 0.0012], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2727, 0.7273], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8843, 0.1157], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1665, 0.8335], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4976, 0.5024], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5776, 0.4224], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9874, 0.0126], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6002, 0.3998], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8849, 0.1151], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3118, 0.6882], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8444, 0.1556], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6305, 0.3695], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1527, 0.8473], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6683, 0.3317], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9903, 0.0097], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3013, 0.6987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6523, 0.3477], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6878, 0.3122], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3888, 0.6112], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7910, 0.2090], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7120, 0.2880], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1913, 0.8087], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7633, 0.2367], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6056, 0.3944], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5502, 0.4498], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7843, 0.2157], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1595, 0.8405], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7639, 0.2361], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0239, 0.9761], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0454, 0.9546], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6217, 0.3783], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4134, 0.5866], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7091, 0.2909], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9709, 0.0291], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4292, 0.5708], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0171, 0.9829], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3652, 0.6348], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0776, 0.9224], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0669, 0.9331], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7432, 0.2568], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9949, 0.0051], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9968, 0.0032], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0754, 0.9246], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2228, 0.7772], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0991, 0.9009], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5116, 0.4884], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9318, 0.0682], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9942, 0.0058], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8615, 0.1385], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1245, 0.8755], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6165, 0.3835], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9933, 0.0067], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7232, 0.2768], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0356, 0.9644], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0239, 0.9761], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2517, 0.7483], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0277, 0.9723], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1010, 0.8990], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0066, 0.9934], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9318, 0.0682], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 64, Training ones: 69 / 41
outputs torch.Size([24]) tensor([0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.6894, 0.3106], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4096, 0.5904], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0824, 0.9176], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2386, 0.7614], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8112, 0.1888], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2712, 0.7288], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1094, 0.8906], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0328, 0.9672], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6409, 0.3591], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1219, 0.8781], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3826, 0.6174], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0357, 0.9643], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1355, 0.8645], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0210, 0.9790], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1214, 0.8786], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9439, 0.0561], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4767, 0.5233], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8758, 0.1242], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0451, 0.9549], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3988, 0.6012], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1612, 0.8388], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0086, 0.9914], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0883, 0.9117], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0444, 0.9556], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 58.333% (loss: 0.979) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0563, 0.9437], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1512, 0.8488], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 5, Training ones: 16 / 21
INFO:root:[   76] train: 70.000% test: 54.167%
INFO:root:Accuracy: 0.65714, Precision: 0.90244, Recall: 0.53623, F1: 0.67273
INFO:root:Val Accuracy: 0.57692, Precision: 0.61905, Recall: 0.81250, F1: 0.70270
INFO:root:F1: 0.70270 did not improve from 0.800000011920929
INFO:root:Epoch 77
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0139, 0.9861], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9369, 0.0631], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0851, 0.9149], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0822, 0.9178], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1216, 0.8784], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0046, 0.9954], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0264, 0.9736], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0688, 0.9312], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0482, 0.9518], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0446, 0.9554], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3196, 0.6804], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0382, 0.9618], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0683, 0.9317], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0303, 0.9697], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6810, 0.3190], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0242, 0.9758], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0323, 0.9677], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9147, 0.0853], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0174, 0.9826], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0647, 0.9353], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8391, 0.1609], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0404, 0.9596], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0914, 0.9086], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1307, 0.8693], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.091) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0040, 0.9960], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0393, 0.9607], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0103, 0.9897], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0271, 0.9729], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9394, 0.0606], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5486, 0.4514], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2782, 0.7218], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6085, 0.3915], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9521, 0.0479], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0327, 0.9673], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0107, 0.9893], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0461, 0.9539], device='cuda:0')
Training Output torch.Size([2]) tensor([9.1283e-04, 9.9909e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0171, 0.9829], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0161, 0.9839], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8574, 0.1426], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0078, 0.9922], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0522, 0.9478], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9260, 0.0740], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0502, 0.9498], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6151, 0.3849], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5607, 0.4393], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0216, 0.9784], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0454, 0.9546], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0104, 0.9896], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0952, 0.9048], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6521, 0.3479], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0341, 0.9659], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7456, 0.2544], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0480, 0.9520], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0929, 0.9071], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0385, 0.9615], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0791, 0.9209], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0118, 0.9882], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2088, 0.7912], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0107, 0.9893], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0870, 0.9130], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1502, 0.8498], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0470, 0.9530], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0181, 0.9819], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0268, 0.9732], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0386, 0.9614], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0205, 0.9795], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0908, 0.9092], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0094, 0.9906], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0121, 0.9879], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0371e-04, 9.9990e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0795, 0.9205], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1632, 0.8368], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9888, 0.0112], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9254, 0.0746], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0119, 0.9881], device='cuda:0')
Training Output torch.Size([2]) tensor([3.9666e-04, 9.9960e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0336, 0.9664], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0075, 0.9925], device='cuda:0')
Training Output torch.Size([2]) tensor([1.6062e-04, 9.9984e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9810, 0.0190], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9695, 0.0305], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9333, 0.0667], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0035, 0.9965], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4060, 0.5940], device='cuda:0')
Training Output torch.Size([2]) tensor([4.0527e-04, 9.9959e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0589, 0.9411], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5293, 0.4707], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5815, 0.4185], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0029, 0.9971], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0027, 0.9973], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0381, 0.9619], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9340, 0.0660], device='cuda:0')
Training Output torch.Size([2]) tensor([2.3505e-04, 9.9976e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.7789e-04, 9.9912e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0160, 0.9840], device='cuda:0')
Training Output torch.Size([2]) tensor([5.9186e-04, 9.9941e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0074, 0.9926], device='cuda:0')
Training Output torch.Size([2]) tensor([9.2358e-04, 9.9908e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9931, 0.0069], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 23, Training ones: 69 / 82
outputs torch.Size([24]) tensor([0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.6872, 0.3128], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3886, 0.6114], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0560, 0.9440], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2635, 0.7365], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9186, 0.0814], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3505, 0.6495], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0444, 0.9556], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0039, 0.9961], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8649, 0.1351], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0367, 0.9633], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3012, 0.6988], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0124, 0.9876], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0694, 0.9306], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0058, 0.9942], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0494, 0.9506], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9682, 0.0318], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5901, 0.4099], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9860, 0.0140], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0187, 0.9813], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4867, 0.5133], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1604, 0.8396], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1265, 0.8735], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0356, 0.9644], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 54.167% (loss: 1.172) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0236, 0.9764], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0735, 0.9265], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 6, Training ones: 16 / 20
INFO:root:[   77] train: 86.111% test: 52.083%
INFO:root:Accuracy: 0.85714, Precision: 0.82927, Recall: 0.98551, F1: 0.90066
INFO:root:Val Accuracy: 0.53846, Precision: 0.60000, Recall: 0.75000, F1: 0.66667
INFO:root:F1: 0.66667 did not improve from 0.800000011920929
INFO:root:Epoch 78
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1622, 0.8378], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9205, 0.0795], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0957, 0.9043], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0172, 0.9828], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0183, 0.9817], device='cuda:0')
Training Output torch.Size([2]) tensor([4.9360e-04, 9.9951e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0956, 0.9044], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0051, 0.9949], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0065, 0.9935], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0126, 0.9874], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0140, 0.9860], device='cuda:0')
Training Output torch.Size([2]) tensor([7.4370e-04, 9.9926e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0396, 0.9604], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9321, 0.0679], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0064, 0.9936], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0114, 0.9886], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9345, 0.0655], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0027, 0.9973], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0121, 0.9879], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9670, 0.0330], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0128, 0.9872], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0025, 0.9975], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0177, 0.9823], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.034) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0162, 0.9838], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0524, 0.9476], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0047, 0.9953], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0783, 0.9217], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8563, 0.1437], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9588, 0.0412], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8351, 0.1649], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3433, 0.6567], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9650, 0.0350], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0724, 0.9276], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0055, 0.9945], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0576, 0.9424], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0317, 0.9683], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0524, 0.9476], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0368, 0.9632], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9668, 0.0332], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0367, 0.9633], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3092, 0.6908], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9835, 0.0165], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5416, 0.4584], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4247, 0.5753], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2670, 0.7330], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0232, 0.9768], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1001, 0.8999], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8937, 0.1063], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0266, 0.9734], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0404, 0.9596], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1247, 0.8753], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2904, 0.7096], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5601, 0.4399], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Output torch.Size([2]) tensor([6.2756e-04, 9.9937e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8940, 0.1060], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1857, 0.8143], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8850, 0.1150], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1110, 0.8890], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1433, 0.8567], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0209, 0.9791], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0757, 0.9243], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3376, 0.6624], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0083, 0.9917], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1656, 0.8344], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0676, 0.9324], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0055, 0.9945], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0079, 0.9921], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0134, 0.9866], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0511, 0.9489], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1784, 0.8216], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3058, 0.6942], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9936, 0.0064], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9974e-01, 2.6324e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1993, 0.8007], device='cuda:0')
Training Output torch.Size([2]) tensor([3.2822e-04, 9.9967e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0856, 0.9144], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4453, 0.5547], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0179, 0.9821], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9981e-01, 1.9260e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9793, 0.0207], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9981, 0.0019], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0827, 0.9173], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9971, 0.0029], device='cuda:0')
Training Output torch.Size([2]) tensor([9.2178e-04, 9.9908e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7972, 0.2028], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9099, 0.0901], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9976e-01, 2.3875e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0273, 0.9727], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0186, 0.9814], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0688, 0.9312], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9912e-01, 8.7961e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9978e-01, 2.2429e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0111, 0.9889], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0200, 0.9800], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3451, 0.6549], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0025, 0.9975], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0097, 0.9903], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9835, 0.0165], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 27, Training ones: 69 / 78
outputs torch.Size([24]) tensor([0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9473, 0.0527], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7383, 0.2617], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3226, 0.6774], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8182, 0.1818], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8786, 0.1214], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7881, 0.2119], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0369, 0.9631], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0020, 0.9980], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9956, 0.0044], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0487, 0.9513], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5675, 0.4325], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0170, 0.9830], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1842, 0.8158], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2676, 0.7324], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9959, 0.0041], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9831, 0.0169], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9975e-01, 2.4537e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0179, 0.9821], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9255, 0.0745], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5740, 0.4260], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5070, 0.4930], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0988, 0.9012], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 66.667% (loss: 1.549) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0324, 0.9676], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1108, 0.8892], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 13, Training ones: 16 / 13
INFO:root:[   78] train: 90.833% test: 58.333%
INFO:root:Accuracy: 0.89524, Precision: 0.87179, Recall: 0.98551, F1: 0.92517
INFO:root:Val Accuracy: 0.65385, Precision: 0.76923, Recall: 0.62500, F1: 0.68966
INFO:root:F1: 0.68966 did not improve from 0.800000011920929
INFO:root:Epoch 79
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0770, 0.9230], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9918, 0.0082], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0129, 0.9871], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0849, 0.9151], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0102, 0.9898], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0254, 0.9746], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8386, 0.1614], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4773, 0.5227], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0166, 0.9834], device='cuda:0')
Training Output torch.Size([2]) tensor([9.8886e-04, 9.9901e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0134, 0.9866], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0186, 0.9814], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2939, 0.7061], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9981, 0.0019], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0171, 0.9829], device='cuda:0')
Training Output torch.Size([2]) tensor([9.3628e-04, 9.9906e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9833, 0.0167], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0217, 0.9783], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1082, 0.8918], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9923e-01, 7.7029e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0193, 0.9807], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1347, 0.8653], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7651, 0.2349], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 91.667% (loss: 0.204) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0291, 0.9709], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0249, 0.9751], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2161, 0.7839], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 9.6661e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9032, 0.0968], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3865, 0.6135], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9174, 0.0826], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9955, 0.0045], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0484, 0.9516], device='cuda:0')
Training Output torch.Size([2]) tensor([4.6113e-05, 9.9995e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0171, 0.9829], device='cuda:0')
Training Output torch.Size([2]) tensor([5.7816e-04, 9.9942e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.8633e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0248, 0.9752], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0965, 0.9035], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9943e-01, 5.7367e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9964, 0.0036], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1006, 0.8994], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9854, 0.0146], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0844, 0.9156], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1986, 0.8014], device='cuda:0')
Training Output torch.Size([2]) tensor([4.0291e-04, 9.9960e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7146, 0.2854], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0034, 0.9966], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2311, 0.7689], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6319, 0.3681], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0312, 0.9688], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0441, 0.9559], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5125, 0.4875], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0118, 0.9882], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7883, 0.2117], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0675, 0.9325], device='cuda:0')
Training Output torch.Size([2]) tensor([3.7629e-04, 9.9962e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.2507e-04, 9.9927e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.9094e-05, 9.9994e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0216, 0.9784], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0770, 0.9230], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0211, 0.9789], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4196, 0.5804], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0078, 0.9922], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0126, 0.9874], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0048, 0.9952], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7524, 0.2476], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9977, 0.0023], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0029, 0.9971], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0081, 0.9919], device='cuda:0')
Training Output torch.Size([2]) tensor([3.2125e-04, 9.9968e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.3998e-04, 9.9946e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9994e-01, 5.9209e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9990, 0.0010], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9988, 0.0012], device='cuda:0')
Training Output torch.Size([2]) tensor([7.4554e-05, 9.9993e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9956, 0.0044], device='cuda:0')
Training Output torch.Size([2]) tensor([8.3171e-05, 9.9992e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0078, 0.9922], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2610, 0.7390], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7386, 0.2614], device='cuda:0')
Training Output torch.Size([2]) tensor([3.5081e-05, 9.9996e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.9163e-04, 9.9921e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0047, 0.9953], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9989e-01, 1.0679e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9988, 0.0012], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0169, 0.9831], device='cuda:0')
Training Output torch.Size([2]) tensor([4.7193e-04, 9.9953e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.3659e-05, 9.9996e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([1.9073e-04, 9.9981e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.5979e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9966e-01, 3.3535e-04], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 27, Training ones: 69 / 78
outputs torch.Size([24]) tensor([1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4215, 0.5785], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1306, 0.8694], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0572, 0.9428], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1811, 0.8189], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1154, 0.8846], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2336, 0.7664], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0040, 0.9960], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.3277e-04, 9.9977e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9947, 0.0053], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1074, 0.8926], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0027, 0.9973], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0093, 0.9907], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.7850e-04, 9.9962e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9966, 0.0034], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9047, 0.0953], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9987e-01, 1.2982e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.5473e-04, 9.9905e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7663, 0.2337], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0744, 0.9256], device='cuda:0')
Validation Output torch.Size([2]) tensor([4.9568e-05, 9.9995e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1672, 0.8328], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0349, 0.9651], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 58.333% (loss: 1.843) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0023, 0.9977], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0049, 0.9951], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 5, Training ones: 16 / 21
INFO:root:[   79] train: 87.500% test: 54.167%
INFO:root:Accuracy: 0.85714, Precision: 0.84615, Recall: 0.95652, F1: 0.89796
INFO:root:Val Accuracy: 0.57692, Precision: 0.61905, Recall: 0.81250, F1: 0.70270
INFO:root:F1: 0.70270 did not improve from 0.800000011920929
INFO:root:Epoch 80
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9909, 0.0091], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1673, 0.8327], device='cuda:0')
Training Output torch.Size([2]) tensor([9.3811e-04, 9.9906e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0194, 0.9806], device='cuda:0')
Training Output torch.Size([2]) tensor([2.4587e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0572, 0.9428], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7625, 0.2375], device='cuda:0')
Training Output torch.Size([2]) tensor([6.4775e-05, 9.9994e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0514e-04, 9.9989e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([4.3819e-04, 9.9956e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0462, 0.9538], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9986e-01, 1.3605e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3892, 0.6108], device='cuda:0')
Training Output torch.Size([2]) tensor([2.2429e-04, 9.9978e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.4157e-04, 9.9976e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9969, 0.0031], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0029, 0.9971], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0358, 0.9642], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 91.667% (loss: 0.115) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.8410e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0295, 0.9705], device='cuda:0')
Training Output torch.Size([2]) tensor([1.2364e-04, 9.9988e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0453, 0.9547], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.5903e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9961e-01, 3.8748e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6695, 0.3305], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0146, 0.9854], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9810, 0.0190], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4932, 0.5068], device='cuda:0')
Training Output torch.Size([2]) tensor([2.2125e-04, 9.9978e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0030, 0.9970], device='cuda:0')
Training Output torch.Size([2]) tensor([3.1628e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.2887e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0046, 0.9954], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9913e-01, 8.6598e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0042, 0.9958], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6024, 0.3976], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0494, 0.9506], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3185, 0.6815], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1072, 0.8928], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8318, 0.1682], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8810, 0.1190], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3316, 0.6684], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7441, 0.2559], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9831, 0.0169], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9922, 0.0078], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2284, 0.7716], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0090, 0.9910], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0279, 0.9721], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0043, 0.9957], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0738, 0.9262], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9295, 0.0705], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5666, 0.4334], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9735e-05, 9.9990e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.8534e-05, 9.9991e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0143, 0.9857], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1891, 0.8109], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0157, 0.9843], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0933, 0.9067], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0196, 0.9804], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0239, 0.9761], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0210, 0.9790], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9910e-01, 8.9869e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9958e-01, 4.1650e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0072, 0.9928], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0276, 0.9724], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0082, 0.9918], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0034, 0.9966], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0039, 0.9961], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9957e-01, 4.3309e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9932e-01, 6.8117e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9331, 0.0669], device='cuda:0')
Training Output torch.Size([2]) tensor([5.2542e-04, 9.9947e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8253, 0.1747], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0071, 0.9929], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9087, 0.0913], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1986, 0.8014], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0156, 0.9844], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0081, 0.9919], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1250, 0.8750], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9942e-01, 5.7816e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9930e-01, 7.0278e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([6.6281e-04, 9.9934e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0034, 0.9966], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0359, 0.9641], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9530, 0.0470], device='cuda:0')
Training Output torch.Size([2]) tensor([8.9869e-04, 9.9910e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9966e-01, 3.4397e-04], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 28, Training ones: 69 / 77
outputs torch.Size([24]) tensor([0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([9.9949e-01, 5.0530e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9970, 0.0030], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9975, 0.0025], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9834, 0.0166], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9952e-01, 4.7563e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9849, 0.0151], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1553, 0.8447], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0122, 0.9878], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9984e-01, 1.6378e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5975, 0.4025], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9716, 0.0284], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2027, 0.7973], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7886, 0.2114], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0321, 0.9679], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1221, 0.8779], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9967e-01, 3.2695e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9937e-01, 6.2878e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9999e-01, 5.7719e-06], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0428, 0.9572], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9916e-01, 8.3936e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9989, 0.0011], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0053, 0.9947], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9931, 0.0069], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9788, 0.0212], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 50.000% (loss: 2.707) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0996, 0.9004], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6339, 0.3661], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 18, Training ones: 16 / 8
INFO:root:[   80] train: 83.611% test: 75.000%
INFO:root:Accuracy: 0.82857, Precision: 0.83117, Recall: 0.92754, F1: 0.87671
INFO:root:Val Accuracy: 0.53846, Precision: 0.75000, Recall: 0.37500, F1: 0.50000
INFO:root:F1: 0.50000 did not improve from 0.800000011920929
INFO:root:Epoch 81
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0535, 0.9465], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9801, 0.0199], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0654, 0.9346], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1162, 0.8838], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9801, 0.0199], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9893, 0.0107], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2486, 0.7514], device='cuda:0')
Training Output torch.Size([2]) tensor([6.7984e-04, 9.9932e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0118, 0.9882], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0368, 0.9632], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5504, 0.4496], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0337, 0.9663], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0929, 0.9071], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7957, 0.2043], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9985e-01, 1.5177e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0189, 0.9811], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0546, 0.9454], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 1.6507e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0044, 0.9956], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8335, 0.1665], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 1.1213e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0395, 0.9605], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2698, 0.7302], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1219, 0.8781], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 79.167% (loss: 0.580) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0631, 0.9369], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2711, 0.7289], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0040, 0.9960], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9900, 0.0100], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9968e-01, 3.1875e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9986, 0.0014], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9873, 0.0127], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9925, 0.0075], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9903e-01, 9.7354e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9977, 0.0023], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2953, 0.7047], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0592, 0.9408], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0115, 0.9885], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0303, 0.9697], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2609, 0.7391], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 2.4587e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6186, 0.3814], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1349, 0.8651], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9946, 0.0054], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4835, 0.5165], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9970, 0.0030], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0668, 0.9332], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1031, 0.8969], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0181, 0.9819], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8234, 0.1766], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3239, 0.6761], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9953, 0.0047], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1558, 0.8442], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6045, 0.3955], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5303, 0.4697], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1394, 0.8606], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4233, 0.5767], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0323, 0.9677], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2507, 0.7493], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6151, 0.3849], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2109, 0.7891], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6774, 0.3226], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1133, 0.8867], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2348, 0.7652], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2737, 0.7263], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8908, 0.1092], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0518, 0.9482], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0092, 0.9908], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2243, 0.7757], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1976, 0.8024], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0686, 0.9314], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1077, 0.8923], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0743, 0.9257], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0204, 0.9796], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0271, 0.9729], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1064, 0.8936], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0411, 0.9589], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9714, 0.0286], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9941, 0.0059], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1277, 0.8723], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0156, 0.9844], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0089, 0.9911], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3281, 0.6719], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0076, 0.9924], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9930, 0.0070], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9801, 0.0199], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9897, 0.0103], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0417, 0.9583], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9774, 0.0226], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0102, 0.9898], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0556, 0.9444], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6684, 0.3316], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9627, 0.0373], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0291, 0.9709], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1122, 0.8878], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0495, 0.9505], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9919, 0.0081], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9989, 0.0011], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0043, 0.9957], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7637, 0.2363], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0739, 0.9261], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0845, 0.9155], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0327, 0.9673], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9986, 0.0014], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 39, Training ones: 69 / 66
outputs torch.Size([24]) tensor([0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.8606, 0.1394], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6433, 0.3567], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3966, 0.6034], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0245, 0.9755], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8862, 0.1138], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3856, 0.6144], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0894, 0.9106], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0082, 0.9918], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9456, 0.0544], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0163, 0.9837], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2845, 0.7155], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0850, 0.9150], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1682, 0.8318], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0294, 0.9706], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1193, 0.8807], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9476, 0.0524], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6029, 0.3971], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9863, 0.0137], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0366, 0.9634], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8729, 0.1271], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8276, 0.1724], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0082, 0.9918], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0063, 0.9937], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0187, 0.9813], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 58.333% (loss: 1.268) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0706, 0.9294], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1971, 0.8029], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 9, Training ones: 16 / 17
INFO:root:[   81] train: 82.778% test: 54.167%
INFO:root:Accuracy: 0.81905, Precision: 0.87879, Recall: 0.84058, F1: 0.85926
INFO:root:Val Accuracy: 0.57692, Precision: 0.64706, Recall: 0.68750, F1: 0.66667
INFO:root:F1: 0.66667 did not improve from 0.800000011920929
INFO:root:Epoch 82
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0846, 0.9154], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9785, 0.0215], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0583, 0.9417], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0338, 0.9662], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0675, 0.9325], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0178, 0.9822], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1087, 0.8913], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0169, 0.9831], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1723, 0.8277], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0553, 0.9447], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0153, 0.9847], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0040, 0.9960], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0606, 0.9394], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0079, 0.9921], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8901, 0.1099], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0049, 0.9951], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6121, 0.3879], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0419, 0.9581], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1717, 0.8283], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9705, 0.0295], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0574, 0.9426], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0298, 0.9702], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0163, 0.9837], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.073) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0179, 0.9821], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0410, 0.9590], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0058, 0.9942], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0972, 0.9028], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9965, 0.0035], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9344, 0.0656], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1795, 0.8205], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9626, 0.0374], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9664, 0.0336], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0350, 0.9650], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0747, 0.9253], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0210, 0.9790], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0117, 0.9883], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0157, 0.9843], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0316, 0.9684], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9973, 0.0027], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0616, 0.9384], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0446, 0.9554], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4412, 0.5588], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1114, 0.8886], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9881, 0.0119], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0090, 0.9910], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0339, 0.9661], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0178, 0.9822], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6395, 0.3605], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5962, 0.4038], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9692, 0.0308], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0170, 0.9830], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0651, 0.9349], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0454, 0.9546], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0396, 0.9604], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0418, 0.9582], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0188, 0.9812], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0582, 0.9418], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5245, 0.4755], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0111, 0.9889], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1731, 0.8269], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4691, 0.5309], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0070, 0.9930], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0399, 0.9601], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1600, 0.8400], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0085, 0.9915], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0043, 0.9957], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0367, 0.9633], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8925, 0.1075], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0161, 0.9839], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0230, 0.9770], device='cuda:0')
Training Output torch.Size([2]) tensor([3.6479e-05, 9.9996e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0076, 0.9924], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0793, 0.9207], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0093, 0.9907], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7314, 0.2686], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9963, 0.0037], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Training Output torch.Size([2]) tensor([3.7410e-04, 9.9963e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7374, 0.2626], device='cuda:0')
Training Output torch.Size([2]) tensor([7.5100e-04, 9.9925e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0076, 0.9924], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9987, 0.0013], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9940, 0.0060], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9406, 0.0594], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0909, 0.9091], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0080, 0.9920], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7923, 0.2077], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9953, 0.0047], device='cuda:0')
Training Output torch.Size([2]) tensor([2.8967e-04, 9.9971e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0195, 0.9805], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0041, 0.9959], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9604, 0.0396], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9965, 0.0035], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0088, 0.9912], device='cuda:0')
Training Output torch.Size([2]) tensor([5.5170e-04, 9.9945e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0049, 0.9951], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0274, 0.9726], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0045, 0.9955], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9804, 0.0196], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 26, Training ones: 69 / 79
outputs torch.Size([24]) tensor([0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.8911, 0.1089], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7900, 0.2100], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6188, 0.3812], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3266, 0.6734], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9024, 0.0976], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4531, 0.5469], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0517, 0.9483], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0030, 0.9970], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9653, 0.0347], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1558, 0.8442], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3083, 0.6917], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0395, 0.9605], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2145, 0.7855], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0145, 0.9855], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0487, 0.9513], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9959, 0.0041], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9675, 0.0325], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9954, 0.0046], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0215, 0.9785], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7837, 0.2163], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8017, 0.1983], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0098, 0.9902], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2654, 0.7346], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3171, 0.6829], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 54.167% (loss: 1.350) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0462, 0.9538], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3307, 0.6693], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 10, Training ones: 16 / 16
INFO:root:[   82] train: 88.333% test: 52.083%
INFO:root:Accuracy: 0.86667, Precision: 0.84810, Recall: 0.97101, F1: 0.90541
INFO:root:Val Accuracy: 0.53846, Precision: 0.62500, Recall: 0.62500, F1: 0.62500
INFO:root:F1: 0.62500 did not improve from 0.800000011920929
INFO:root:Epoch 83
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0270, 0.9730], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9857, 0.0143], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0970, 0.9030], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1007, 0.8993], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1653, 0.8347], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2133, 0.7867], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0612, 0.9388], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0563, 0.9437], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2665, 0.7335], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0247, 0.9753], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0130, 0.9870], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0033, 0.9967], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0071, 0.9929], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9989, 0.0011], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0079, 0.9921], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0482, 0.9518], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9986, 0.0014], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0100, 0.9900], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0159, 0.9841], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8981, 0.1019], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0942, 0.9058], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2911, 0.7089], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0170, 0.9830], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.075) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0136, 0.9863], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0079, 0.9921], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0332, 0.9668], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0322, 0.9678], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 4.8604e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9920, 0.0080], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8738, 0.1262], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9292, 0.0708], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9167, 0.0833], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8399, 0.1601], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0290, 0.9710], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1197, 0.8803], device='cuda:0')
Training Output torch.Size([2]) tensor([6.5538e-05, 9.9993e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.4624e-05, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0311, 0.9689], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0561, 0.9439], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9052, 0.0948], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0589, 0.9411], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0547, 0.9453], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9841, 0.0159], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0095, 0.9905], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9463, 0.0537], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0133, 0.9867], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0347, 0.9653], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2131, 0.7869], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0814, 0.9186], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7077, 0.2923], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0134, 0.9866], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0926, 0.9074], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0202, 0.9798], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1033, 0.8967], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0706, 0.9294], device='cuda:0')
Training Output torch.Size([2]) tensor([8.3446e-04, 9.9917e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3353, 0.6647], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4886, 0.5114], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2612, 0.7388], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8940, 0.1060], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2900, 0.7100], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0399, 0.9601], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0106, 0.9894], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0063, 0.9937], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0121, 0.9879], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0049, 0.9951], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0051, 0.9949], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0521, 0.9479], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0099, 0.9901], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0743, 0.9257], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1922, 0.8078], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0031, 0.9969], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0729, 0.9271], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0238, 0.9762], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9931, 0.0069], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9904, 0.0096], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0439, 0.9561], device='cuda:0')
Training Output torch.Size([2]) tensor([7.9009e-04, 9.9921e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3791, 0.6209], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0617, 0.9383], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9829, 0.0171], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9361, 0.0639], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8854, 0.1146], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8192, 0.1808], device='cuda:0')
Training Output torch.Size([2]) tensor([1.5659e-04, 9.9984e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1147, 0.8853], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6569, 0.3431], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9745, 0.0255], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0226, 0.9774], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0137, 0.9863], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0442, 0.9558], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6024, 0.3976], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9834, 0.0166], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0034, 0.9966], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0046, 0.9954], device='cuda:0')
Training Output torch.Size([2]) tensor([7.9939e-04, 9.9920e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0127, 0.9873], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9869, 0.0131], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 26, Training ones: 69 / 79
outputs torch.Size([24]) tensor([0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.8592, 0.1408], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9328, 0.0672], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5766, 0.4234], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2208, 0.7792], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9221, 0.0779], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6008, 0.3992], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0516, 0.9484], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0020, 0.9980], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9301, 0.0699], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1696, 0.8304], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3720, 0.6280], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0158, 0.9842], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1777, 0.8223], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0124, 0.9876], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0714, 0.9286], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9972, 0.0028], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9694, 0.0306], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9896, 0.0104], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0188, 0.9812], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7434, 0.2566], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7826, 0.2174], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0251, 0.9749], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0953, 0.9047], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1925, 0.8075], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 50.000% (loss: 1.387) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0399, 0.9601], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4403, 0.5597], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 11, Training ones: 16 / 15
INFO:root:[   83] train: 88.333% test: 50.000%
INFO:root:Accuracy: 0.86667, Precision: 0.84810, Recall: 0.97101, F1: 0.90541
INFO:root:Val Accuracy: 0.50000, Precision: 0.60000, Recall: 0.56250, F1: 0.58065
INFO:root:F1: 0.58065 did not improve from 0.800000011920929
INFO:root:Epoch 84
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1017, 0.8983], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8214, 0.1786], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1304, 0.8696], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0601, 0.9399], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0114, 0.9886], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3417, 0.6583], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0078, 0.9922], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0644, 0.9356], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2940, 0.7060], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0061, 0.9939], device='cuda:0')
Training Output torch.Size([2]) tensor([4.3319e-05, 9.9996e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.2827e-04, 9.9977e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.1977e-04, 9.9958e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1791, 0.8209], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0075, 0.9925], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0170, 0.9830], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9968e-01, 3.1689e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2254, 0.7746], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9907, 0.0093], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1776, 0.8224], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0539, 0.9461], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 95.833% (loss: 0.151) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0663, 0.9337], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0330, 0.9670], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0770, 0.9230], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0051, 0.9949], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 1.4119e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9972, 0.0028], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9377, 0.0623], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9922, 0.0078], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9941, 0.0059], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3612, 0.6388], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1055, 0.8945], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1774e-04, 9.9988e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.6030e-04, 9.9984e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0243, 0.9757], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3688, 0.6312], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9943, 0.0057], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0330, 0.9670], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3235, 0.6765], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2474, 0.7526], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9943, 0.0057], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0130, 0.9870], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0248, 0.9752], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0040, 0.9960], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3670, 0.6330], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2078, 0.7922], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4965, 0.5035], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0027, 0.9973], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9456, 0.0544], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0225, 0.9775], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9325, 0.0675], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6469, 0.3531], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0340, 0.9660], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0177, 0.9823], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8659, 0.1341], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0224, 0.9776], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0079, 0.9921], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0568, 0.9432], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1846, 0.8154], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8523, 0.1477], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0166, 0.9834], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0145, 0.9855], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0936, 0.9064], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0412, 0.9588], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0047, 0.9953], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.0415e-04, 9.9930e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.8745e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0054, 0.9946], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0228, 0.9772], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9957e-01, 4.2554e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9980e-01, 2.0422e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0205, 0.9795], device='cuda:0')
Training Output torch.Size([2]) tensor([4.0291e-04, 9.9960e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0053, 0.9947], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0444, 0.9556], device='cuda:0')
Training Output torch.Size([2]) tensor([5.2748e-04, 9.9947e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9983, 0.0017], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9949, 0.0051], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9459, 0.0541], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0146, 0.9854], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9262, 0.0738], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0039, 0.9961], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0041, 0.9959], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9763, 0.0237], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9957e-01, 4.2804e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4180, 0.5820], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0047, 0.9953], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9876, 0.0124], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9879, 0.0121], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0430, 0.9570], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0043, 0.9957], device='cuda:0')
Training Output torch.Size([2]) tensor([7.9362e-05, 9.9992e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.2871e-04, 9.9977e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1681, 0.8319], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1358, 0.8642], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9993e-01, 6.6311e-05], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 26, Training ones: 69 / 79
outputs torch.Size([24]) tensor([0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.6489, 0.3511], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9276, 0.0724], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3664, 0.6336], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0698, 0.9302], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9777, 0.0223], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5852, 0.4148], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0238, 0.9762], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.2178e-04, 9.9908e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8612, 0.1388], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0569, 0.9431], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2608, 0.7392], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0071, 0.9929], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0592, 0.9408], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1297, 0.8703], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9906e-01, 9.4178e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9373, 0.0627], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9797, 0.0203], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0083, 0.9917], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7030, 0.2970], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5177, 0.4823], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0055, 0.9945], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0574, 0.9426], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1072, 0.8928], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 54.167% (loss: 1.501) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0127, 0.9873], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2161, 0.7839], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 10, Training ones: 16 / 16
INFO:root:[   84] train: 90.000% test: 52.083%
INFO:root:Accuracy: 0.88571, Precision: 0.86076, Recall: 0.98551, F1: 0.91892
INFO:root:Val Accuracy: 0.53846, Precision: 0.62500, Recall: 0.62500, F1: 0.62500
INFO:root:F1: 0.62500 did not improve from 0.800000011920929
INFO:root:Epoch 85
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1839, 0.8161], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9933, 0.0067], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3891, 0.6109], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0562, 0.9438], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0028, 0.9972], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0049, 0.9951], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7378, 0.2622], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0234, 0.9766], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0500, 0.9500], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0085, 0.9915], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0964, 0.9036], device='cuda:0')
Training Output torch.Size([2]) tensor([9.1517e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0244, 0.9756], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0318, 0.9682], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9989, 0.0011], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0020, 0.9980], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9123, 0.0877], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0884, 0.9116], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0059, 0.9941], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9940, 0.0060], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0181, 0.9819], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0085, 0.9915], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3429, 0.6571], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 95.833% (loss: 0.125) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0045, 0.9955], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0526, 0.9474], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0058, 0.9942], device='cuda:0')
Training Output torch.Size([2]) tensor([5.3893e-04, 9.9946e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9387, 0.0613], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9951e-01, 4.8786e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6110, 0.3890], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9276, 0.0724], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7779, 0.2221], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0066, 0.9934], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0128, 0.9872], device='cuda:0')
Training Output torch.Size([2]) tensor([2.9251e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.1014e-05, 9.9996e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0081, 0.9919], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9982e-01, 1.7988e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([4.6293e-05, 9.9995e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0090, 0.9910], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9977, 0.0023], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0088, 0.9912], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9789, 0.0211], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0557, 0.9443], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0038, 0.9962], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0033, 0.9967], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5003, 0.4997], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8093, 0.1907], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3049, 0.6951], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1092, 0.8908], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0489, 0.9511], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0538, 0.9462], device='cuda:0')
Training Output torch.Size([2]) tensor([6.5795e-05, 9.9993e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7278, 0.2722], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1003, 0.8997], device='cuda:0')
Training Output torch.Size([2]) tensor([1.7813e-04, 9.9982e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2096, 0.7904], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0195, 0.9805], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([2.9770e-04, 9.9970e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([2.8798e-04, 9.9971e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0572, 0.9428], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0039, 0.9961], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0746, 0.9254], device='cuda:0')
Training Output torch.Size([2]) tensor([6.4494e-04, 9.9936e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0038, 0.9962], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0982, 0.9018], device='cuda:0')
Training Output torch.Size([2]) tensor([4.7843e-04, 9.9952e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9989, 0.0011], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9982, 0.0018], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0126, 0.9874], device='cuda:0')
Training Output torch.Size([2]) tensor([9.3510e-05, 9.9991e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4489, 0.5511], device='cuda:0')
Training Output torch.Size([2]) tensor([1.5968e-04, 9.9984e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0023, 0.9977], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3255, 0.6745], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9743, 0.0257], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9993e-01, 6.8952e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([4.8415e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9994e-01, 6.2782e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([4.3393e-04, 9.9957e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9129, 0.0871], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9838, 0.0162], device='cuda:0')
Training Output torch.Size([2]) tensor([3.4196e-04, 9.9966e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.9264e-04, 9.9951e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9949, 0.0051], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9989, 0.0011], device='cuda:0')
Training Output torch.Size([2]) tensor([9.4613e-05, 9.9991e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.7031e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0100, 0.9900], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6145, 0.3855], device='cuda:0')
Training Output torch.Size([2]) tensor([1.9074e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.5127e-04, 9.9935e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3312, 0.6688], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 26, Training ones: 69 / 79
outputs torch.Size([24]) tensor([0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.6454, 0.3546], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9534, 0.0466], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4717, 0.5283], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1510, 0.8490], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9776, 0.0224], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3050, 0.6950], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0128, 0.9872], device='cuda:0')
Validation Output torch.Size([2]) tensor([4.4162e-04, 9.9956e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8759, 0.1241], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0509, 0.9491], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2107, 0.7893], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0045, 0.9955], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0271, 0.9729], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1304, 0.8696], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9988e-01, 1.2054e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9806, 0.0194], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9929, 0.0071], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0044, 0.9956], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8077, 0.1923], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4480, 0.5520], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0786, 0.9214], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1042, 0.8958], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 54.167% (loss: 1.732) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0708, 0.9292], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 8, Training ones: 16 / 18
INFO:root:[   85] train: 85.556% test: 52.083%
INFO:root:Accuracy: 0.86667, Precision: 0.84810, Recall: 0.97101, F1: 0.90541
INFO:root:Val Accuracy: 0.53846, Precision: 0.61111, Recall: 0.68750, F1: 0.64706
INFO:root:F1: 0.64706 did not improve from 0.800000011920929
INFO:root:Epoch 86
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0245, 0.9755], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9961e-01, 3.9281e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8808, 0.1192], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0031, 0.9969], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4957, 0.5043], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0120, 0.9880], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0094, 0.9906], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4341, 0.5659], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0592, 0.9408], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0108, 0.9892], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([9.1344e-05, 9.9991e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0060, 0.9940], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0034, 0.9966], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9926, 0.0074], device='cuda:0')
Training Output torch.Size([2]) tensor([3.6401e-04, 9.9964e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0144, 0.9856], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9995e-01, 4.8895e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([2.7372e-04, 9.9973e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9644, 0.0356], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0056, 0.9944], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0195, 0.9805], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0168, 0.9832], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 95.833% (loss: 0.151) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.3893e-04, 9.9946e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.6188e-04, 9.9964e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.3889e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.4731e-04, 9.9905e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9980e-01, 1.9872e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9703, 0.0297], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7257, 0.2743], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3867, 0.6133], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8531, 0.1469], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6395, 0.3605], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1883, 0.8117], device='cuda:0')
Training Output torch.Size([2]) tensor([1.6604e-04, 9.9983e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3982e-04, 9.9986e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0060, 0.9940], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9991e-01, 8.7845e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([1.7503e-04, 9.9983e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0052, 0.9948], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9904, 0.0096], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0420, 0.9580], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3539, 0.6461], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Training Output torch.Size([2]) tensor([4.7009e-04, 9.9953e-01], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0488, 0.9512], device='cuda:0')
Training Output torch.Size([2]) tensor([1.8094e-04, 9.9982e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8944, 0.1056], device='cuda:0')
Training Output torch.Size([2]) tensor([7.3218e-04, 9.9927e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6382, 0.3618], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9100, 0.0900], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0715, 0.9285], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0385, 0.9615], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8264, 0.1736], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0027, 0.9973], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0610, 0.9390], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4151, 0.5849], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0044, 0.9956], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0271, 0.9729], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0118, 0.9882], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0033, 0.9967], device='cuda:0')
Training Output torch.Size([2]) tensor([3.5419e-04, 9.9965e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0719, 0.9281], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0918, 0.9082], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0233, 0.9767], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0028, 0.9972], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0040, 0.9960], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1512, 0.8488], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0166, 0.9834], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0218, 0.9782], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 1.5999e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 1.3900e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0442, 0.9558], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0495, 0.9505], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0868, 0.9132], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0045, 0.9955], device='cuda:0')
Training Output torch.Size([2]) tensor([4.5386e-04, 9.9955e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9991e-01, 9.2421e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9982, 0.0018], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 3.6976e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0238, 0.9762], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9966e-01, 3.3996e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([8.5925e-04, 9.9914e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0121, 0.9879], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9975, 0.0025], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9997e-01, 2.7860e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0462, 0.9538], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0025, 0.9975], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0348, 0.9652], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7339, 0.2661], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 6.9875e-08], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0097, 0.9903], device='cuda:0')
Training Output torch.Size([2]) tensor([4.7193e-04, 9.9953e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0524, 0.9476], device='cuda:0')
Training Output torch.Size([2]) tensor([6.7719e-04, 9.9932e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0441, 0.9559], device='cuda:0')
Training Output torch.Size([2]) tensor([6.4118e-04, 9.9936e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 8.6103e-09], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 27, Training ones: 69 / 78
outputs torch.Size([24]) tensor([0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9910, 0.0090], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9970e-01, 3.0238e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9986, 0.0014], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9965, 0.0035], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9999e-01, 1.2077e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8173, 0.1827], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0708, 0.9292], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0040, 0.9960], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9988, 0.0012], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9839, 0.0161], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9459, 0.0541], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0539, 0.9461], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4175, 0.5825], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0191, 0.9809], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2051, 0.7949], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0000e+00, 2.3139e-06], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9991e-01, 9.0988e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9998e-01, 1.8059e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0268, 0.9732], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9963, 0.0037], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9966, 0.0034], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0047, 0.9953], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9361, 0.0639], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9177, 0.0823], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 54.167% (loss: 2.914) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0454, 0.9546], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4346, 0.5654], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 16, Training ones: 16 / 10
INFO:root:[   86] train: 87.500% test: 52.083%
INFO:root:Accuracy: 0.85714, Precision: 0.84615, Recall: 0.95652, F1: 0.89796
INFO:root:Val Accuracy: 0.53846, Precision: 0.70000, Recall: 0.43750, F1: 0.53846
INFO:root:F1: 0.53846 did not improve from 0.800000011920929
INFO:root:Epoch 87
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0207, 0.9793], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9988e-01, 1.2291e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0240, 0.9760], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1175, 0.8825], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7046, 0.2954], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0034, 0.9966], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1886, 0.8114], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5613, 0.4387], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0155, 0.9845], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0175, 0.9825], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6840, 0.3160], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0052, 0.9948], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1865, 0.8135], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0131, 0.9869], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9937, 0.0063], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0144, 0.9856], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0121, 0.9879], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 3.6976e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0086, 0.9914], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0311, 0.9689], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 3.1259e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8340, 0.1660], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2552, 0.7448], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0679, 0.9321], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 83.333% (loss: 0.253) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0083, 0.9917], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2675, 0.7325], device='cuda:0')
Training Output torch.Size([2]) tensor([3.9589e-04, 9.9960e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0159, 0.9841], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9937e-01, 6.3371e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9952, 0.0048], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 3.0297e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9907e-01, 9.2538e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9954e-01, 4.5742e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9969, 0.0031], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0025, 0.9975], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0609, 0.9391], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0398, 0.9602], device='cuda:0')
Training Output torch.Size([2]) tensor([1.6093e-04, 9.9984e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0262, 0.9738], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3424, 0.6576], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 2.2733e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([8.6484e-05, 9.9991e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0610, 0.9390], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9962e-01, 3.7924e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5345, 0.4655], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9987e-01, 1.3033e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0068, 0.9932], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7411, 0.2589], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0152, 0.9848], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0297, 0.9703], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0027, 0.9973], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1964, 0.8036], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0195, 0.9805], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0225, 0.9775], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0475, 0.9525], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9962, 0.0038], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0781, 0.9219], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0200, 0.9800], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3110, 0.6890], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9963, 0.0037], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2398, 0.7602], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0875, 0.9125], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4463, 0.5537], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1198, 0.8802], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0473, 0.9527], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0378, 0.9622], device='cuda:0')
Training Output torch.Size([2]) tensor([4.4858e-04, 9.9955e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0053, 0.9947], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0318, 0.9682], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0440, 0.9560], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0117, 0.9883], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0060, 0.9940], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0079, 0.9921], device='cuda:0')
Training Output torch.Size([2]) tensor([1.6636e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.8823e-04, 9.9911e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2043, 0.7957], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8409, 0.1591], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9925e-01, 7.4661e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9990, 0.0010], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0094, 0.9906], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0432, 0.9568], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0895, 0.9105], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0167, 0.9833], device='cuda:0')
Training Output torch.Size([2]) tensor([9.8309e-04, 9.9902e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9988, 0.0012], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9993e-01, 6.6570e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9818, 0.0182], device='cuda:0')
Training Output torch.Size([2]) tensor([6.0708e-04, 9.9939e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9941, 0.0059], device='cuda:0')
Training Output torch.Size([2]) tensor([4.2388e-04, 9.9958e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0311, 0.9689], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6303, 0.3697], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9473, 0.0527], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0023, 0.9977], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0150, 0.9850], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0378, 0.9622], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9958, 0.0042], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9932, 0.0068], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0286, 0.9714], device='cuda:0')
Training Output torch.Size([2]) tensor([1.7198e-04, 9.9983e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0028, 0.9972], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1104e-04, 9.9989e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Output torch.Size([2]) tensor([4.9942e-04, 9.9950e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9681, 0.0319], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 33, Training ones: 69 / 72
outputs torch.Size([24]) tensor([1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2341, 0.7659], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6619, 0.3381], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3144, 0.6856], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1340, 0.8660], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9010, 0.0990], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0298, 0.9702], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0064, 0.9936], device='cuda:0')
Validation Output torch.Size([2]) tensor([8.6937e-04, 9.9913e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8087, 0.1913], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0716, 0.9284], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1240, 0.8760], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0040, 0.9960], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0196, 0.9804], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0456, 0.9544], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9906e-01, 9.4362e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9278, 0.0722], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9866, 0.0134], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0038, 0.9962], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3620, 0.6380], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1777, 0.8223], device='cuda:0')
Validation Output torch.Size([2]) tensor([6.5382e-04, 9.9935e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0300, 0.9700], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0228, 0.9772], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 54.167% (loss: 1.620) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0030, 0.9970], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0227, 0.9773], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 6, Training ones: 16 / 20
INFO:root:[   87] train: 82.500% test: 52.083%
INFO:root:Accuracy: 0.80000, Precision: 0.83333, Recall: 0.86957, F1: 0.85106
INFO:root:Val Accuracy: 0.53846, Precision: 0.60000, Recall: 0.75000, F1: 0.66667
INFO:root:F1: 0.66667 did not improve from 0.800000011920929
INFO:root:Epoch 88
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0056, 0.9944], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7849, 0.2151], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0025, 0.9975], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0098, 0.9902], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0083, 0.9917], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([8.9519e-04, 9.9910e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0031, 0.9969], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0153, 0.9847], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0034, 0.9966], device='cuda:0')
Training Output torch.Size([2]) tensor([1.5628e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0046, 0.9954], device='cuda:0')
Training Output torch.Size([2]) tensor([8.2797e-04, 9.9917e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8565, 0.1435], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0053, 0.9947], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0091, 0.9909], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7233, 0.2767], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0162, 0.9838], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9955, 0.0045], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0345, 0.9655], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0087, 0.9913], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.036) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0043, 0.9957], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0073, 0.9927], device='cuda:0')
Training Output torch.Size([2]) tensor([2.4923e-04, 9.9975e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 8.3327e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2424, 0.7576], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9605, 0.0395], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1490, 0.8510], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7704, 0.2296], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0065, 0.9935], device='cuda:0')
Training Output torch.Size([2]) tensor([7.6133e-04, 9.9924e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0046, 0.9954], device='cuda:0')
Training Output torch.Size([2]) tensor([9.5728e-05, 9.9990e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.5659e-04, 9.9984e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0136, 0.9864], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8664, 0.1336], device='cuda:0')
Training Output torch.Size([2]) tensor([8.9694e-04, 9.9910e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0072, 0.9928], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9941, 0.0059], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0613, 0.9387], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9862, 0.0138], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0067, 0.9933], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0183, 0.9817], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0076, 0.9924], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0090, 0.9910], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5997, 0.4003], device='cuda:0')
Training Output torch.Size([2]) tensor([8.9869e-04, 9.9910e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0302, 0.9698], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0951, 0.9049], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2369, 0.7631], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0135, 0.9865], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0036, 0.9964], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1363, 0.8637], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0028, 0.9972], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0133, 0.9867], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0419, 0.9581], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0109, 0.9891], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0175, 0.9825], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0028, 0.9972], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0072, 0.9928], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0348, 0.9652], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0105, 0.9895], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0253, 0.9747], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Training Output torch.Size([2]) tensor([9.6290e-05, 9.9990e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0859, 0.9141], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9980e-01, 2.0106e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9968e-01, 3.1504e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0062, 0.9938], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0555e-04, 9.9989e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0724, 0.9276], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0041, 0.9959], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0108, 0.9892], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0445, 0.9555], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7919, 0.2081], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9955, 0.0045], device='cuda:0')
Training Output torch.Size([2]) tensor([7.6322e-05, 9.9992e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7732, 0.2268], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0033, 0.9967], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2835, 0.7165], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9593, 0.0407], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0156, 0.9844], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1254, 0.8746], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9891, 0.0109], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9994e-01, 6.4522e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Training Output torch.Size([2]) tensor([3.1016e-04, 9.9969e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.9281e-04, 9.9961e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0165, 0.9835], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0347, 0.9653], device='cuda:0')
Training Output torch.Size([2]) tensor([4.5564e-04, 9.9954e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.6537e-06], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 20, Training ones: 69 / 85
outputs torch.Size([24]) tensor([0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.8544, 0.1456], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9544, 0.0456], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9088, 0.0912], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7057, 0.2943], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9965, 0.0035], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1776, 0.8224], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0420, 0.9580], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0046, 0.9954], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9934, 0.0066], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6359, 0.3641], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6629, 0.3371], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0189, 0.9811], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1457, 0.8543], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0096, 0.9904], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0202, 0.9798], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9991e-01, 8.9578e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9967, 0.0033], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9962e-01, 3.7629e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0191, 0.9809], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8487, 0.1513], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7732, 0.2268], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2231, 0.7769], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1275, 0.8725], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 58.333% (loss: 1.813) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0167, 0.9833], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2311, 0.7689], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 13, Training ones: 16 / 13
INFO:root:[   88] train: 86.667% test: 54.167%
INFO:root:Accuracy: 0.84762, Precision: 0.81176, Recall: 1.00000, F1: 0.89610
INFO:root:Val Accuracy: 0.57692, Precision: 0.69231, Recall: 0.56250, F1: 0.62069
INFO:root:F1: 0.62069 did not improve from 0.800000011920929
INFO:root:Epoch 89
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0043, 0.9957], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9924, 0.0076], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0063, 0.9937], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1425, 0.8575], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9283, 0.0717], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2653, 0.7347], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0301, 0.9699], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0407, 0.9593], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0095, 0.9905], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0370, 0.9630], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0036, 0.9964], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0434, 0.9566], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0679, 0.9321], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3256, 0.6744], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0317, 0.9683], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9992e-01, 7.7524e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1560, 0.8440], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0078, 0.9922], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9990, 0.0010], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3297, 0.6703], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1507, 0.8493], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0257, 0.9743], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 91.667% (loss: 0.220) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0282, 0.9718], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0049, 0.9951], device='cuda:0')
Training Output torch.Size([2]) tensor([6.7456e-04, 9.9933e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0232, 0.9768], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.2779e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9942, 0.0058], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9983, 0.0017], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9938e-01, 6.1543e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9968, 0.0032], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2612, 0.7388], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0080, 0.9920], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0205, 0.9795], device='cuda:0')
Training Output torch.Size([2]) tensor([2.5021e-04, 9.9975e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.0845e-04, 9.9959e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0224, 0.9776], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1313, 0.8687], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7816, 0.2184], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1474, 0.8526], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9959e-01, 4.0765e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1390, 0.8610], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 6.2166e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0405, 0.9595], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9033, 0.0967], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0085, 0.9915], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8746, 0.1254], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4832, 0.5168], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9110, 0.0890], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0207, 0.9793], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5439, 0.4561], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0048, 0.9952], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2209, 0.7791], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2317, 0.7683], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0081, 0.9919], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1119, 0.8881], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9080, 0.0920], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7318, 0.2682], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4407, 0.5593], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2414, 0.7586], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8886, 0.1114], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0410, 0.9590], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1279, 0.8721], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9522, 0.0478], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0107, 0.9893], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0464, 0.9536], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1116, 0.8884], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2083, 0.7917], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0150, 0.9850], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0404, 0.9596], device='cuda:0')
Training Output torch.Size([2]) tensor([1.2124e-04, 9.9988e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0076, 0.9924], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1174, 0.8826], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0060, 0.9940], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9873, 0.0127], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9966e-01, 3.3864e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0381, 0.9619], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0090, 0.9910], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2437, 0.7563], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0131, 0.9869], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0302, 0.9698], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9983, 0.0017], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9913, 0.0087], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9981, 0.0019], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0454, 0.9546], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5975, 0.4025], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0175, 0.9825], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1897, 0.8103], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6789, 0.3211], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6289, 0.3711], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0023, 0.9977], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0751, 0.9249], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9979, 0.0021], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 1.7918e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0201, 0.9799], device='cuda:0')
Training Output torch.Size([2]) tensor([6.8117e-04, 9.9932e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.7961e-04, 9.9912e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0361, 0.9639], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0339, 0.9661], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0218, 0.9782], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8408, 0.1592], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 31, Training ones: 69 / 74
outputs torch.Size([24]) tensor([0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9202, 0.0798], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9680, 0.0320], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8970, 0.1030], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6410, 0.3590], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9728, 0.0272], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3191, 0.6809], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0641, 0.9359], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0065, 0.9935], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9965, 0.0035], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7228, 0.2772], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7511, 0.2489], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0259, 0.9741], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3002, 0.6998], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0188, 0.9812], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0135, 0.9865], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9986e-01, 1.4147e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9966, 0.0034], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9984e-01, 1.5782e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0342, 0.9658], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8666, 0.1334], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8526, 0.1474], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0104, 0.9896], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1850, 0.8150], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1172, 0.8828], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 58.333% (loss: 1.828) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0343, 0.9657], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4366, 0.5634], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 13, Training ones: 16 / 13
INFO:root:[   89] train: 87.500% test: 54.167%
INFO:root:Accuracy: 0.85714, Precision: 0.86486, Recall: 0.92754, F1: 0.89510
INFO:root:Val Accuracy: 0.57692, Precision: 0.69231, Recall: 0.56250, F1: 0.62069
INFO:root:F1: 0.62069 did not improve from 0.800000011920929
INFO:root:Epoch 90
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0065, 0.9935], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9990e-01, 9.5728e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2350, 0.7650], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0392, 0.9608], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2019, 0.7981], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0091, 0.9909], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0141, 0.9859], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9393, 0.0607], device='cuda:0')
Training Output torch.Size([2]) tensor([6.4494e-04, 9.9936e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0129, 0.9871], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0654, 0.9346], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0131, 0.9869], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0320, 0.9680], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9987e-01, 1.3447e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0156, 0.9844], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0875, 0.9125], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9985, 0.0015], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2057, 0.7943], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0364, 0.9636], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9891, 0.0109], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0755, 0.9245], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0594, 0.9406], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5514, 0.4486], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 91.667% (loss: 0.201) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0181, 0.9819], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0462, 0.9538], device='cuda:0')
Training Output torch.Size([2]) tensor([3.2951e-04, 9.9967e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0274, 0.9726], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9970e-01, 2.9654e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8395, 0.1605], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9929e-01, 7.1106e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9851, 0.0149], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9712, 0.0288], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2590, 0.7410], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0912, 0.9088], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0209e-05, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1733, 0.8267], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0371, 0.9629], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9919e-01, 8.1197e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0279, 0.9721], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2279, 0.7721], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9856, 0.0144], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9450, 0.0550], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9969, 0.0031], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0539, 0.9461], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0546, 0.9454], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0255, 0.9745], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9029, 0.0971], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0185, 0.9815], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8875, 0.1125], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0101, 0.9899], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5178, 0.4822], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0613, 0.9387], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9039, 0.0961], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0255, 0.9745], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0070, 0.9930], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0090, 0.9910], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8039, 0.1961], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0327, 0.9673], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0206, 0.9794], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1106, 0.8894], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2452, 0.7548], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0824, 0.9176], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0189, 0.9811], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0025, 0.9975], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1668, 0.8332], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0767, 0.9233], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1406, 0.8594], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0595, 0.9405], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0183, 0.9817], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0025, 0.9975], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0052, 0.9948], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1504, 0.8496], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0263, 0.9737], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9966e-01, 3.4063e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9997e-01, 3.0242e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0286, 0.9714], device='cuda:0')
Training Output torch.Size([2]) tensor([3.1320e-04, 9.9969e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1582, 0.8418], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0084, 0.9916], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0367, 0.9633], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9985e-01, 1.5001e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9983e-01, 1.7265e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9025, 0.0975], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0110, 0.9890], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7394, 0.2606], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0058, 0.9942], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1053, 0.8947], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6272, 0.3728], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9972e-01, 2.8241e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1133, 0.8867], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0092, 0.9908], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1717, 0.8283], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9636, 0.0364], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 2.1613e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([1.5844e-04, 9.9984e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0059, 0.9941], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0660, 0.9340], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0150, 0.9850], device='cuda:0')
Training Output torch.Size([2]) tensor([4.3393e-04, 9.9957e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9953e-01, 4.7378e-04], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 31, Training ones: 69 / 74
outputs torch.Size([24]) tensor([0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7059, 0.2941], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8960, 0.1040], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5892, 0.4108], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1097, 0.8903], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9872, 0.0128], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2138, 0.7862], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0271, 0.9729], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9868, 0.0132], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0867, 0.9133], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3854, 0.6146], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0089, 0.9911], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1300, 0.8700], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0083, 0.9917], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0588, 0.9412], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9916e-01, 8.4100e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9833, 0.0167], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9962e-01, 3.8446e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0202, 0.9798], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6552, 0.3448], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6163, 0.3837], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0035, 0.9965], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0536, 0.9464], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0418, 0.9582], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 54.167% (loss: 1.680) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0196, 0.9804], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1907, 0.8093], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 10, Training ones: 16 / 16
INFO:root:[   90] train: 89.167% test: 52.083%
INFO:root:Accuracy: 0.87619, Precision: 0.87838, Recall: 0.94203, F1: 0.90909
INFO:root:Val Accuracy: 0.53846, Precision: 0.62500, Recall: 0.62500, F1: 0.62500
INFO:root:F1: 0.62500 did not improve from 0.800000011920929
INFO:root:Epoch 91
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7602, 0.2398], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0266, 0.9734], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0262, 0.9738], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0117, 0.9883], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1086, 0.8914], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0187, 0.9813], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3913, 0.6087], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0034, 0.9966], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0044, 0.9956], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0094, 0.9906], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1152, 0.8848], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0027, 0.9973], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9910e-01, 8.9869e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([4.2059e-04, 9.9958e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0072, 0.9928], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8300, 0.1700], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0097, 0.9903], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0136, 0.9864], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0701, 0.9299], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0164, 0.9836], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0237, 0.9763], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0153, 0.9847], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 95.833% (loss: 0.169) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0027, 0.9973], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([5.7929e-04, 9.9942e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0048, 0.9952], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9987e-01, 1.2583e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9762, 0.0238], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8260, 0.1740], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9934, 0.0066], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0971, 0.9029], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4029, 0.5971], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0036, 0.9964], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0226, 0.9774], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([2.0500e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0299, 0.9701], device='cuda:0')
Training Output torch.Size([2]) tensor([9.0573e-04, 9.9909e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0158, 0.9842], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0031, 0.9969], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0128, 0.9872], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1038, 0.8962], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0034, 0.9966], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9945e-01, 5.5278e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2498, 0.7502], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0429, 0.9571], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9566, 0.0434], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0684, 0.9316], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4615, 0.5385], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0312, 0.9688], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8826, 0.1174], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0774, 0.9226], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0358, 0.9642], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0246, 0.9754], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0023, 0.9977], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0108, 0.9892], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9987, 0.0013], device='cuda:0')
Training Output torch.Size([2]) tensor([9.4916e-04, 9.9905e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2327, 0.7673], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0860, 0.9140], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0130, 0.9870], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0162, 0.9838], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0331, 0.9669], device='cuda:0')
Training Output torch.Size([2]) tensor([8.4594e-04, 9.9915e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0070, 0.9930], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0049, 0.9951], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1111, 0.8889], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0460, 0.9540], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0089, 0.9911], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0249, 0.9751], device='cuda:0')
Training Output torch.Size([2]) tensor([5.3265e-04, 9.9947e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1320, 0.8680], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1603, 0.8397], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0028, 0.9972], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9979, 0.0021], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9876, 0.0124], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0190, 0.9810], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9124, 0.0876], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1359, 0.8641], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0205, 0.9795], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9997e-01, 3.3475e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9969e-01, 3.1259e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9975e-01, 2.4923e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2274, 0.7726], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2106, 0.7894], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0058, 0.9942], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1098, 0.8902], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9884, 0.0116], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9838, 0.0162], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0185, 0.9815], device='cuda:0')
Training Output torch.Size([2]) tensor([5.4741e-04, 9.9945e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0262, 0.9738], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9440, 0.0560], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 1.6315e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0061, 0.9939], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0059, 0.9941], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0199, 0.9801], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0062, 0.9938], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0033, 0.9967], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 4.7851e-06], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 22, Training ones: 69 / 83
outputs torch.Size([24]) tensor([0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.6873, 0.3127], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9258, 0.0742], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5637, 0.4363], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0322, 0.9678], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9782, 0.0218], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4716, 0.5284], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0603, 0.9397], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0029, 0.9971], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9846, 0.0154], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0127, 0.9873], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3228, 0.6772], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0234, 0.9766], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2037, 0.7963], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0201, 0.9799], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0269, 0.9731], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9938e-01, 6.2389e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9796, 0.0204], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9966e-01, 3.4263e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0678, 0.9322], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7270, 0.2730], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6381, 0.3619], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0086, 0.9914], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1091, 0.8909], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0710, 0.9290], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 54.167% (loss: 1.671) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0593, 0.9407], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1813, 0.8187], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 10, Training ones: 16 / 16
INFO:root:[   91] train: 86.667% test: 52.083%
INFO:root:Accuracy: 0.84762, Precision: 0.81928, Recall: 0.98551, F1: 0.89474
INFO:root:Val Accuracy: 0.53846, Precision: 0.62500, Recall: 0.62500, F1: 0.62500
INFO:root:F1: 0.62500 did not improve from 0.800000011920929
INFO:root:Epoch 92
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0681, 0.9319], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9988, 0.0012], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1166, 0.8834], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0510, 0.9490], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2112, 0.7888], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5508, 0.4492], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0425, 0.9575], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1287, 0.8713], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0056, 0.9944], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0110, 0.9890], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0038, 0.9962], device='cuda:0')
Training Output torch.Size([2]) tensor([3.2377e-04, 9.9968e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0658, 0.9342], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6142, 0.3858], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9957, 0.0043], device='cuda:0')
Training Output torch.Size([2]) tensor([9.4244e-05, 9.9991e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0784, 0.9216], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9964e-01, 3.5837e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1183, 0.8817], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0505, 0.9495], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9926, 0.0074], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1214, 0.8786], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0190, 0.9810], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2653, 0.7347], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 91.667% (loss: 0.135) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.3474e-04, 9.9947e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0146, 0.9854], device='cuda:0')
Training Output torch.Size([2]) tensor([1.4092e-04, 9.9986e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0098, 0.9902], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0397, 0.9603], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9984, 0.0016], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9846, 0.0154], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9982, 0.0018], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0382, 0.9618], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4704, 0.5296], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0260, 0.9740], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5127, 0.4873], device='cuda:0')
Training Output torch.Size([2]) tensor([5.6368e-04, 9.9944e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.3782e-04, 9.9976e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0645, 0.9355], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0038, 0.9962], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4847, 0.5153], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0074, 0.9926], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5429, 0.4571], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7538, 0.2462], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0071, 0.9929], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9986, 0.0014], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0253, 0.9747], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2136, 0.7864], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0508, 0.9492], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3898, 0.6102], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0797, 0.9203], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9064, 0.0936], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0115, 0.9885], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9601, 0.0399], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1000, 0.9000], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0385, 0.9615], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8740, 0.1260], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0031, 0.9969], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2931, 0.7069], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9919e-01, 8.1356e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0198, 0.9802], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0170, 0.9830], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2883, 0.7117], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3959, 0.6041], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4128, 0.5872], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1033, 0.8967], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0051, 0.9949], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0693, 0.9307], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0041, 0.9959], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4177, 0.5823], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1541, 0.8459], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2344, 0.7656], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9273e-04, 9.9901e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.0598e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0132, 0.9868], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0863, 0.9137], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0031, 0.9969], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8376, 0.1624], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9973, 0.0027], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1239, 0.8761], device='cuda:0')
Training Output torch.Size([2]) tensor([4.9370e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0087, 0.9913], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0927, 0.9073], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9988, 0.0012], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9635, 0.0365], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9881, 0.0119], device='cuda:0')
Training Output torch.Size([2]) tensor([2.0145e-04, 9.9980e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7851, 0.2149], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0524, 0.9476], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0271, 0.9729], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9578, 0.0422], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9974e-01, 2.6427e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0063, 0.9937], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0110, 0.9890], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1148, 0.8852], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9251, 0.0749], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9994e-01, 6.0377e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0125, 0.9875], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0028, 0.9972], device='cuda:0')
Training Output torch.Size([2]) tensor([4.2471e-04, 9.9958e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1003, 0.8997], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0055, 0.9945], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9960e-01, 3.9821e-04], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 28, Training ones: 69 / 77
outputs torch.Size([24]) tensor([1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.3468, 0.6532], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8587, 0.1413], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0874, 0.9126], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0071, 0.9929], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9419, 0.0581], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6083, 0.3917], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1311, 0.8689], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0043, 0.9957], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8601, 0.1399], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1749, 0.8251], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0321, 0.9679], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2269, 0.7731], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0296, 0.9704], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4910, 0.5090], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9984, 0.0016], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8498, 0.1502], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9972, 0.0028], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1585, 0.8415], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3444, 0.6556], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2799, 0.7201], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0172, 0.9828], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0206, 0.9794], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0361, 0.9639], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 50.000% (loss: 1.587) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1287, 0.8713], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1550, 0.8450], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 7, Training ones: 16 / 19
INFO:root:[   92] train: 86.667% test: 50.000%
INFO:root:Accuracy: 0.84762, Precision: 0.84416, Recall: 0.94203, F1: 0.89041
INFO:root:Val Accuracy: 0.50000, Precision: 0.57895, Recall: 0.68750, F1: 0.62857
INFO:root:F1: 0.62857 did not improve from 0.800000011920929
INFO:root:Epoch 93
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0091, 0.9909], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9821, 0.0179], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2292, 0.7708], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1099, 0.8901], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0382, 0.9618], device='cuda:0')
Training Output torch.Size([2]) tensor([4.1497e-05, 9.9996e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3102, 0.6898], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1852, 0.8148], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0061, 0.9939], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2484, 0.7516], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0151, 0.9849], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1433, 0.8567], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0428, 0.9572], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4488, 0.5512], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7814, 0.2186], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3160e-05, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0508, 0.9492], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7215, 0.2785], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0534, 0.9466], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0207, 0.9793], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4282, 0.5718], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0151, 0.9849], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6030, 0.3970], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 91.667% (loss: 0.192) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3005, 0.6995], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0318, 0.9682], device='cuda:0')
Training Output torch.Size([2]) tensor([2.9480e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0048, 0.9952], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9987e-01, 1.2731e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8715, 0.1285], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9952, 0.0048], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9983, 0.0017], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6698, 0.3302], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1024, 0.8976], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0825, 0.9175], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2883, 0.7117], device='cuda:0')
Training Output torch.Size([2]) tensor([6.7745e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.0744e-05, 9.9995e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0422, 0.9578], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1455, 0.8545], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9986, 0.0014], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0515, 0.9485], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9729, 0.0271], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1333, 0.8667], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7259, 0.2741], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0159, 0.9841], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4084, 0.5916], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0300, 0.9700], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0122, 0.9878], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4093, 0.5907], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5283, 0.4717], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0083, 0.9917], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9254, 0.0746], device='cuda:0')
Training Output torch.Size([2]) tensor([8.2797e-04, 9.9917e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7239, 0.2761], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5030, 0.4970], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0267, 0.9733], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0025, 0.9975], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9755, 0.0245], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3661, 0.6339], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6791, 0.3209], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9546, 0.0454], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0096, 0.9904], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0064, 0.9936], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0414, 0.9586], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1523, 0.8477], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0651, 0.9349], device='cuda:0')
Training Output torch.Size([2]) tensor([8.7447e-04, 9.9913e-01], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([2.9423e-04, 9.9971e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0334, 0.9666], device='cuda:0')
Training Output torch.Size([2]) tensor([7.9939e-04, 9.9920e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4804, 0.5196], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9893, 0.0107], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0177, 0.9823], device='cuda:0')
Training Output torch.Size([2]) tensor([3.9899e-04, 9.9960e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0123, 0.9877], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0030, 0.9970], device='cuda:0')
Training Output torch.Size([2]) tensor([4.0606e-04, 9.9959e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9990, 0.0010], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9920, 0.0080], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8946, 0.1054], device='cuda:0')
Training Output torch.Size([2]) tensor([2.5514e-04, 9.9974e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5822, 0.4178], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0120, 0.9880], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0605, 0.9395], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9343, 0.0657], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9948, 0.0052], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0040, 0.9960], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0666, 0.9334], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9972, 0.0028], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9982e-01, 1.7813e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0069, 0.9931], device='cuda:0')
Training Output torch.Size([2]) tensor([2.8745e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0391e-04, 9.9990e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0205, 0.9795], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0099, 0.9901], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0040, 0.9960], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9994e-01, 5.5405e-05], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 29, Training ones: 69 / 76
outputs torch.Size([24]) tensor([1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4542, 0.5458], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9464, 0.0536], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0746, 0.9254], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0061, 0.9939], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9882, 0.0118], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5742, 0.4258], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0325, 0.9675], device='cuda:0')
Validation Output torch.Size([2]) tensor([6.0001e-04, 9.9940e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8812, 0.1188], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2282, 0.7718], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0085, 0.9915], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1548, 0.8452], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0048, 0.9952], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0211, 0.9789], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9968e-01, 3.2440e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9165, 0.0835], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9990, 0.0010], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0361, 0.9639], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4580, 0.5420], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3789, 0.6211], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0047, 0.9953], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0336, 0.9664], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0152, 0.9848], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 50.000% (loss: 1.781) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0270, 0.9730], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0891, 0.9109], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 7, Training ones: 16 / 19
INFO:root:[   93] train: 89.167% test: 50.000%
INFO:root:Accuracy: 0.87619, Precision: 0.86842, Recall: 0.95652, F1: 0.91034
INFO:root:Val Accuracy: 0.50000, Precision: 0.57895, Recall: 0.68750, F1: 0.62857
INFO:root:F1: 0.62857 did not improve from 0.800000011920929
INFO:root:Epoch 94
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.8383e-04, 9.9942e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9856, 0.0144], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0489, 0.9511], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8831, 0.1169], device='cuda:0')
Training Output torch.Size([2]) tensor([5.2032e-04, 9.9948e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.6429e-04, 9.9914e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1442, 0.8558], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0237, 0.9763], device='cuda:0')
Training Output torch.Size([2]) tensor([2.1070e-04, 9.9979e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0375, 0.9625], device='cuda:0')
Training Output torch.Size([2]) tensor([1.4037e-04, 9.9986e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.8218e-04, 9.9952e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1895, 0.8105], device='cuda:0')
Training Output torch.Size([2]) tensor([2.6791e-04, 9.9973e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9911e-01, 8.8823e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0283, 0.9717], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9934, 0.0066], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0181, 0.9819], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0463, 0.9537], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9969, 0.0031], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0261, 0.9739], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0308, 0.9692], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3817, 0.6183], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 95.833% (loss: 0.137) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0715, 0.9285], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0190, 0.9810], device='cuda:0')
Training Output torch.Size([2]) tensor([1.9374e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0247, 0.9753], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 8.2679e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9937, 0.0063], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9546, 0.0454], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9984, 0.0016], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9784, 0.0216], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0193, 0.9807], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0441, 0.9559], device='cuda:0')
Training Output torch.Size([2]) tensor([6.0708e-04, 9.9939e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.8585e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1409, 0.8591], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0146, 0.9854], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8680, 0.1320], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0028, 0.9972], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3853, 0.6147], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8922, 0.1078], device='cuda:0')
Training Output torch.Size([2]) tensor([2.2517e-04, 9.9977e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9952, 0.0048], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0866, 0.9134], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0326, 0.9674], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2587, 0.7413], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9782, 0.0218], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8399, 0.1601], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7625, 0.2375], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0202, 0.9798], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5194, 0.4806], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0207, 0.9793], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3399, 0.6601], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3437, 0.6563], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1949, 0.8051], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1505, 0.8495], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0314, 0.9686], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0027, 0.9973], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0027, 0.9973], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2214, 0.7786], device='cuda:0')
Training Output torch.Size([2]) tensor([4.9942e-04, 9.9950e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.9666e-04, 9.9960e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0441, 0.9559], device='cuda:0')
Training Output torch.Size([2]) tensor([6.2756e-04, 9.9937e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0689, 0.9311], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1999, 0.8001], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0330, 0.9670], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.7426e-04, 9.9973e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0719e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.9512e-04, 9.9960e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0051, 0.9949], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9105, 0.0895], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9994e-01, 5.7164e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9980, 0.0020], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0097, 0.9903], device='cuda:0')
Training Output torch.Size([2]) tensor([1.2219e-05, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.8241e-04, 9.9972e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1601, 0.8399], device='cuda:0')
Training Output torch.Size([2]) tensor([2.0343e-04, 9.9980e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9972, 0.0028], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9823, 0.0177], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9926, 0.0074], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0043, 0.9957], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9972, 0.0028], device='cuda:0')
Training Output torch.Size([2]) tensor([1.5207e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1882, 0.8118], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9038, 0.0962], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6205, 0.3795], device='cuda:0')
Training Output torch.Size([2]) tensor([3.1381e-04, 9.9969e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0111e-04, 9.9990e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0027, 0.9973], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9621, 0.0379], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9976, 0.0024], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0041, 0.9959], device='cuda:0')
Training Output torch.Size([2]) tensor([5.8858e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1726e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.4198e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.4258e-04, 9.9986e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 2.3007e-05], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 29, Training ones: 69 / 76
outputs torch.Size([24]) tensor([1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2602, 0.7398], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9002, 0.0998], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0234, 0.9766], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0043, 0.9957], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9957, 0.0043], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3215, 0.6785], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0080, 0.9920], device='cuda:0')
Validation Output torch.Size([2]) tensor([8.9928e-05, 9.9991e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5015, 0.4985], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1168, 0.8832], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0451, 0.9549], device='cuda:0')
Validation Output torch.Size([2]) tensor([8.2314e-04, 9.9918e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0539, 0.9461], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9927e-01, 7.3361e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7818, 0.2182], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9918, 0.0082], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0036, 0.9964], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1871, 0.8129], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1392, 0.8608], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.8076e-04, 9.9972e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0129, 0.9871], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0066, 0.9934], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 54.167% (loss: 1.916) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0034, 0.9966], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0305, 0.9695], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 6, Training ones: 16 / 20
INFO:root:[   94] train: 90.833% test: 52.083%
INFO:root:Accuracy: 0.89524, Precision: 0.88158, Recall: 0.97101, F1: 0.92414
INFO:root:Val Accuracy: 0.53846, Precision: 0.60000, Recall: 0.75000, F1: 0.66667
INFO:root:F1: 0.66667 did not improve from 0.800000011920929
INFO:root:Epoch 95
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.3082e-04, 9.9907e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9800, 0.0200], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0062, 0.9938], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0029, 0.9971], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0232, 0.9768], device='cuda:0')
Training Output torch.Size([2]) tensor([3.4330e-04, 9.9966e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.1070e-04, 9.9979e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3765e-04, 9.9986e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.6025e-05, 9.9992e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.2636e-04, 9.9917e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0596e-04, 9.9989e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.8384e-04, 9.9932e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.2366e-04, 9.9928e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3400, 0.6600], device='cuda:0')
Training Output torch.Size([2]) tensor([9.7039e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1024, 0.8976], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0393, 0.9607], device='cuda:0')
Training Output torch.Size([2]) tensor([5.6058e-05, 9.9994e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0980, 0.9020], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7559, 0.2441], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0222, 0.9778], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 91.667% (loss: 0.204) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0168, 0.9832], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0039, 0.9961], device='cuda:0')
Training Output torch.Size([2]) tensor([1.9949e-04, 9.9980e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0023, 0.9977], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9939e-01, 6.0945e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9776, 0.0224], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9553, 0.0447], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9974, 0.0026], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9676, 0.0324], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0541, 0.9459], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0028, 0.9972], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0657, 0.9343], device='cuda:0')
Training Output torch.Size([2]) tensor([6.6175e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.8862e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0795, 0.9205], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9981e-01, 1.9223e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([3.0416e-04, 9.9970e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0293, 0.9707], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9832, 0.0168], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2912, 0.7088], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9321, 0.0679], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0044, 0.9956], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0828, 0.9172], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1419, 0.8581], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0227, 0.9773], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6992, 0.3008], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9955, 0.0045], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0692, 0.9308], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0261, 0.9739], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0095, 0.9905], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0168, 0.9832], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0119, 0.9881], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3166, 0.6834], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0049, 0.9951], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0821, 0.9179], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5009, 0.4991], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0053, 0.9947], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6403, 0.3597], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0058, 0.9942], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3126, 0.6874], device='cuda:0')
Training Output torch.Size([2]) tensor([4.2306e-04, 9.9958e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3563, 0.6437], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0677, 0.9323], device='cuda:0')
Training Output torch.Size([2]) tensor([1.9756e-05, 9.9998e-01], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1361, 0.8639], device='cuda:0')
Training Output torch.Size([2]) tensor([3.6336e-05, 9.9996e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0466, 0.9534], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5404, 0.4596], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1368e-04, 9.9989e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9981e-01, 1.9110e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9976, 0.0024], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0198, 0.9802], device='cuda:0')
Training Output torch.Size([2]) tensor([1.7744e-04, 9.9982e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.1998e-04, 9.9908e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.0589e-04, 9.9939e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.2077e-05, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8912, 0.1088], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9984, 0.0016], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4758, 0.5242], device='cuda:0')
Training Output torch.Size([2]) tensor([8.4264e-04, 9.9916e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9984, 0.0016], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0122, 0.9878], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0027, 0.9973], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8918, 0.1082], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9703, 0.0297], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0033, 0.9967], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7135, 0.2865], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9973, 0.0027], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9971e-01, 2.8854e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.3628e-04, 9.9906e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.2051e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([9.6284e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.1141e-05, 9.9993e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.9365e-04, 9.9971e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.5045e-05, 9.9995e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9850, 0.0150], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 26, Training ones: 69 / 79
outputs torch.Size([24]) tensor([1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4273, 0.5727], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9649, 0.0351], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0866, 0.9134], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0598, 0.9402], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9640, 0.0360], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4470, 0.5530], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0162, 0.9838], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.5059e-04, 9.9985e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7043, 0.2957], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0149, 0.9851], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2108, 0.7892], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0081, 0.9919], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0581, 0.9419], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0025, 0.9975], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0290, 0.9710], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9970e-01, 2.9770e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9320, 0.0680], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9974, 0.0026], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0051, 0.9949], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3498, 0.6502], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2991, 0.7009], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2142, 0.7858], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0644, 0.9356], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 54.167% (loss: 1.681) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0065, 0.9935], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0444, 0.9556], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 6, Training ones: 16 / 20
INFO:root:[   95] train: 88.333% test: 52.083%
INFO:root:Accuracy: 0.86667, Precision: 0.84810, Recall: 0.97101, F1: 0.90541
INFO:root:Val Accuracy: 0.53846, Precision: 0.60000, Recall: 0.75000, F1: 0.66667
INFO:root:F1: 0.66667 did not improve from 0.800000011920929
INFO:root:Epoch 96
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.2972e-04, 9.9957e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9906, 0.0094], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0937, 0.9063], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1110, 0.8890], device='cuda:0')
Training Output torch.Size([2]) tensor([5.1126e-04, 9.9949e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0251, 0.9749], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0137, 0.9863], device='cuda:0')
Training Output torch.Size([2]) tensor([8.6767e-04, 9.9913e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0035, 0.9965], device='cuda:0')
Training Output torch.Size([2]) tensor([8.1244e-05, 9.9992e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Training Output torch.Size([2]) tensor([2.9886e-04, 9.9970e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1784, 0.8216], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3928e-04, 9.9986e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5300, 0.4700], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7499, 0.2501], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0262, 0.9738], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9334, 0.0666], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0060, 0.9940], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1062, 0.8938], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0027, 0.9973], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 91.667% (loss: 0.136) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0040, 0.9960], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([5.2235e-04, 9.9948e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0035, 0.9965], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.7672e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9978, 0.0022], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4900, 0.5100], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9551, 0.0449], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9736, 0.0264], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0087, 0.9913], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0355, 0.9645], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1644, 0.8356], device='cuda:0')
Training Output torch.Size([2]) tensor([7.0571e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0071, 0.9929], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0128, 0.9872], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9632, 0.0368], device='cuda:0')
Training Output torch.Size([2]) tensor([3.3209e-04, 9.9967e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0737, 0.9263], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9798, 0.0202], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9989, 0.0011], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0604, 0.9396], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2320, 0.7680], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0234, 0.9766], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1922, 0.8078], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5274, 0.4726], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2651, 0.7349], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0261, 0.9739], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2049, 0.7951], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4006, 0.5994], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0595, 0.9405], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3599, 0.6401], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0063, 0.9937], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4337, 0.5663], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9843, 0.0157], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0036, 0.9964], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3541, 0.6459], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7951, 0.2049], device='cuda:0')
Training Output torch.Size([2]) tensor([7.6621e-05, 9.9992e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0341, 0.9659], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2887, 0.7113], device='cuda:0')
Training Output torch.Size([2]) tensor([8.7503e-05, 9.9991e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0481, 0.9519], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1805, 0.8195], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0114, 0.9886], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1119, 0.8881], device='cuda:0')
Training Output torch.Size([2]) tensor([6.4642e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.2485e-04, 9.9988e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3741, 0.6259], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7250, 0.2750], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9930, 0.0070], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9987e-01, 1.2583e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0096, 0.9904], device='cuda:0')
Training Output torch.Size([2]) tensor([4.9457e-04, 9.9951e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0065, 0.9935], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0105, 0.9895], device='cuda:0')
Training Output torch.Size([2]) tensor([2.1910e-04, 9.9978e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9344, 0.0656], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 1.9450e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9986e-01, 1.3499e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([2.8633e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9981, 0.0019], device='cuda:0')
Training Output torch.Size([2]) tensor([1.5720e-04, 9.9984e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0053, 0.9947], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0644, 0.9356], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9970, 0.0030], device='cuda:0')
Training Output torch.Size([2]) tensor([3.2504e-04, 9.9968e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.7703e-04, 9.9942e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5447, 0.4553], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9980, 0.0020], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9987, 0.0013], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0124, 0.9876], device='cuda:0')
Training Output torch.Size([2]) tensor([3.1137e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0085, 0.9915], device='cuda:0')
Training Output torch.Size([2]) tensor([8.3496e-05, 9.9992e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Training Output torch.Size([2]) tensor([2.1070e-04, 9.9979e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.5903e-06], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 26, Training ones: 69 / 79
outputs torch.Size([24]) tensor([0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.8145, 0.1855], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9913, 0.0087], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3399, 0.6601], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3533, 0.6467], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9920e-01, 8.0409e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6283, 0.3717], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0495, 0.9505], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.0297e-04, 9.9970e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9420, 0.0580], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3117, 0.6883], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4718, 0.5282], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0223, 0.9777], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0831, 0.9169], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0086, 0.9914], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0742, 0.9258], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9995e-01, 5.3911e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9911, 0.0089], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9966e-01, 3.3535e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0101, 0.9899], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7785, 0.2215], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6766, 0.3234], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6551, 0.3449], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2205, 0.7795], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 58.333% (loss: 1.814) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0139, 0.9861], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1269, 0.8731], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 11, Training ones: 16 / 15
INFO:root:[   96] train: 86.667% test: 54.167%
INFO:root:Accuracy: 0.84762, Precision: 0.83544, Recall: 0.95652, F1: 0.89189
INFO:root:Val Accuracy: 0.57692, Precision: 0.66667, Recall: 0.62500, F1: 0.64516
INFO:root:F1: 0.64516 did not improve from 0.800000011920929
INFO:root:Epoch 97
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0038, 0.9962], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9754, 0.0246], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0473, 0.9527], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0239, 0.9761], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0122, 0.9878], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2830, 0.7170], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0355, 0.9645], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4627, 0.5373], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0469, 0.9531], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0805e-04, 9.9989e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0227, 0.9773], device='cuda:0')
Training Output torch.Size([2]) tensor([6.2756e-04, 9.9937e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1078, 0.8922], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([6.3743e-04, 9.9936e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9976, 0.0024], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0116, 0.9884], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0320, 0.9680], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0363, 0.9637], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0369, 0.9631], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0351, 0.9649], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0251, 0.9749], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 91.667% (loss: 0.286) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0135, 0.9865], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1858, 0.8142], device='cuda:0')
Training Output torch.Size([2]) tensor([5.8497e-04, 9.9942e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0337, 0.9663], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9948, 0.0052], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9298, 0.0702], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9992e-01, 7.9673e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8677, 0.1323], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9953, 0.0047], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0061, 0.9939], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4341, 0.5659], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0109, 0.9891], device='cuda:0')
Training Output torch.Size([2]) tensor([3.6054e-05, 9.9996e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0062, 0.9938], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0119, 0.9881], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9990, 0.0010], device='cuda:0')
Training Output torch.Size([2]) tensor([8.1674e-04, 9.9918e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0778, 0.9222], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9968e-01, 3.2440e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4467, 0.5533], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0238, 0.9762], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1217, 0.8783], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2781, 0.7219], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0155, 0.9845], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9988, 0.0012], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7520, 0.2480], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9945, 0.0055], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0256, 0.9744], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9560, 0.0440], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1412, 0.8588], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6056, 0.3944], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9464, 0.0536], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0108, 0.9892], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1411, 0.8589], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9623, 0.0377], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0023, 0.9977], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2188, 0.7812], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9580, 0.0420], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3648, 0.6352], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0106, 0.9894], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0651, 0.9349], device='cuda:0')
Training Output torch.Size([2]) tensor([8.1993e-04, 9.9918e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0065, 0.9935], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0042, 0.9958], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0636, 0.9364], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1337, 0.8663], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0091, 0.9909], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0641, 0.9359], device='cuda:0')
Training Output torch.Size([2]) tensor([8.6822e-05, 9.9991e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0369, 0.9631], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0242, 0.9758], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9971e-01, 2.9480e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 2.3278e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0474, 0.9526], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8892, 0.1108], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0114, 0.9886], device='cuda:0')
Training Output torch.Size([2]) tensor([6.6281e-04, 9.9934e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 2.2650e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9947, 0.0053], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9483, 0.0517], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0119, 0.9881], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2251, 0.7749], device='cuda:0')
Training Output torch.Size([2]) tensor([5.4634e-04, 9.9945e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0301, 0.9699], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7142, 0.2858], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9879, 0.0121], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2416, 0.7584], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1364, 0.8636], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0189, 0.9811], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9976, 0.0024], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 2.2650e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([8.7789e-04, 9.9912e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0052, 0.9948], device='cuda:0')
Training Output torch.Size([2]) tensor([1.5148e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0049, 0.9951], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0265, 0.9735], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9996e-01, 4.2316e-05], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 28, Training ones: 69 / 77
outputs torch.Size([24]) tensor([0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7983, 0.2017], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9882, 0.0118], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5529, 0.4471], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4759, 0.5241], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9874, 0.0126], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5322, 0.4678], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1069, 0.8931], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9232, 0.0768], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8163, 0.1837], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4562, 0.5438], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0519, 0.9481], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1363, 0.8637], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0289, 0.9711], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1197, 0.8803], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9985e-01, 1.4826e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9869, 0.0131], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9915e-01, 8.4925e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0197, 0.9803], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7209, 0.2791], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6502, 0.3498], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6356, 0.3644], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2457, 0.7543], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 50.000% (loss: 1.690) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0300, 0.9700], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1613, 0.8387], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 13, Training ones: 16 / 13
INFO:root:[   97] train: 90.000% test: 50.000%
INFO:root:Accuracy: 0.88571, Precision: 0.87013, Recall: 0.97101, F1: 0.91781
INFO:root:Val Accuracy: 0.50000, Precision: 0.61538, Recall: 0.50000, F1: 0.55172
INFO:root:F1: 0.55172 did not improve from 0.800000011920929
INFO:root:Epoch 98
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0659, 0.9341], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9170, 0.0830], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0634, 0.9366], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0778, 0.9222], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0061, 0.9939], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0896, 0.9104], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2134, 0.7866], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0042, 0.9958], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0217, 0.9783], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0028, 0.9972], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7047, 0.2953], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0459, 0.9541], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9971, 0.0029], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0335, 0.9665], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0250, 0.9750], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9960, 0.0040], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0029, 0.9971], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2301, 0.7699], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9958e-01, 4.1650e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0865, 0.9135], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0174, 0.9826], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1698, 0.8302], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 95.833% (loss: 0.107) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2388, 0.7612], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0209, 0.9791], device='cuda:0')
Training Output torch.Size([2]) tensor([6.3028e-05, 9.9994e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0103, 0.9897], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9259, 0.0741], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9953e-01, 4.7378e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9008, 0.0992], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9927e-01, 7.3361e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8892, 0.1108], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2684, 0.7316], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0038, 0.9962], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0223, 0.9777], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0025, 0.9975], device='cuda:0')
Training Output torch.Size([2]) tensor([2.6895e-04, 9.9973e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0284, 0.9716], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1979, 0.8021], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9971e-01, 2.8629e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0297, 0.9703], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0765, 0.9235], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8868, 0.1132], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0633, 0.9367], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9986e-01, 1.4482e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0265, 0.9735], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0156, 0.9844], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0122, 0.9878], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3334, 0.6666], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6310, 0.3690], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0329, 0.9671], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1563, 0.8437], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2026, 0.7974], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2282, 0.7718], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2304, 0.7696], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0059, 0.9941], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0425, 0.9575], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9256, 0.0744], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0064, 0.9936], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2557, 0.7443], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2858, 0.7142], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8598, 0.1402], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0290, 0.9710], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0048, 0.9952], device='cuda:0')
Training Output torch.Size([2]) tensor([8.8477e-04, 9.9912e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0176, 0.9824], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4282, 0.5718], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0526, 0.9474], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0605, 0.9395], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0239, 0.9761], device='cuda:0')
Training Output torch.Size([2]) tensor([2.5365e-04, 9.9975e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.4974e-05, 9.9995e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1131, 0.8869], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0280, 0.9720], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9353, 0.0647], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9492, 0.0508], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0199, 0.9801], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0120, 0.9880], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0971, 0.9029], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0189, 0.9811], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0056, 0.9944], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9986, 0.0014], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9995e-01, 4.8705e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4372, 0.5628], device='cuda:0')
Training Output torch.Size([2]) tensor([8.7277e-04, 9.9913e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3492, 0.6508], device='cuda:0')
Training Output torch.Size([2]) tensor([7.2933e-04, 9.9927e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0864, 0.9136], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6819, 0.3181], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5355, 0.4645], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0192, 0.9808], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0330, 0.9670], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0568, 0.9432], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9969, 0.0031], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9176, 0.0824], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0139, 0.9861], device='cuda:0')
Training Output torch.Size([2]) tensor([1.6800e-04, 9.9983e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.3733e-04, 9.9956e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.6219e-04, 9.9984e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0081, 0.9919], device='cuda:0')
Training Output torch.Size([2]) tensor([2.6221e-04, 9.9974e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9988e-01, 1.1821e-04], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 25, Training ones: 69 / 80
outputs torch.Size([24]) tensor([0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5511, 0.4489], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9566, 0.0434], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3554, 0.6446], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2320, 0.7680], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9688, 0.0312], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2785, 0.7215], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0661, 0.9339], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7574, 0.2426], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7022, 0.2978], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2574, 0.7426], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0362, 0.9638], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0793, 0.9207], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0199, 0.9801], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0754, 0.9246], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9965e-01, 3.4735e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9542, 0.0458], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9970, 0.0030], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0108, 0.9892], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4760, 0.5240], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3882, 0.6118], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0036, 0.9964], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3749, 0.6251], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1287, 0.8713], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 45.833% (loss: 1.553) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0183, 0.9817], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0703, 0.9297], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 8, Training ones: 16 / 18
INFO:root:[   98] train: 87.500% test: 47.917%
INFO:root:Accuracy: 0.85714, Precision: 0.83750, Recall: 0.97101, F1: 0.89933
INFO:root:Val Accuracy: 0.46154, Precision: 0.55556, Recall: 0.62500, F1: 0.58824
INFO:root:F1: 0.58824 did not improve from 0.800000011920929
INFO:root:Epoch 99
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0211, 0.9789], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3665, 0.6335], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1885, 0.8115], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0740, 0.9260], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1827, 0.8173], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0388, 0.9612], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0133, 0.9867], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0223, 0.9777], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0058, 0.9942], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0148, 0.9852], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0499, 0.9501], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0103, 0.9897], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0095, 0.9905], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7633, 0.2367], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0054, 0.9946], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0086, 0.9914], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9480, 0.0520], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0175, 0.9825], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1304, 0.8696], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9978, 0.0022], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0115, 0.9885], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0589, 0.9411], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1725, 0.8275], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 95.833% (loss: 0.102) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0143, 0.9857], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0204, 0.9796], device='cuda:0')
Training Output torch.Size([2]) tensor([3.4464e-04, 9.9966e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0097, 0.9903], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 9.8568e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9960, 0.0040], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8559, 0.1441], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9306, 0.0694], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9275, 0.0725], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0275, 0.9725], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0339, 0.9661], device='cuda:0')
Training Output torch.Size([2]) tensor([5.7703e-04, 9.9942e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.8462e-04, 9.9972e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0103, 0.9897], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0391, 0.9609], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9851, 0.0149], device='cuda:0')
Training Output torch.Size([2]) tensor([8.7961e-04, 9.9912e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0256, 0.9744], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9955, 0.0045], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0231, 0.9769], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9988, 0.0012], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3967, 0.6033], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0170, 0.9830], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1342, 0.8658], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1879, 0.8121], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4336, 0.5664], device='cuda:0')
Training Output torch.Size([2]) tensor([5.7479e-04, 9.9943e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3612, 0.6388], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0150, 0.9850], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4456, 0.5544], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6985, 0.3015], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0166, 0.9834], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3074, 0.6926], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5245, 0.4755], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0976, 0.9024], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3993, 0.6007], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3905, 0.6095], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5660, 0.4340], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0480, 0.9520], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0515, 0.9485], device='cuda:0')
Training Output torch.Size([2]) tensor([3.8831e-05, 9.9996e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0159, 0.9841], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0276, 0.9724], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3999, 0.6001], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0138, 0.9862], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0703, 0.9297], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0314, 0.9686], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0131, 0.9869], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0092, 0.9908], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4625, 0.5375], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9997e-01, 2.9426e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9925e-01, 7.5246e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0689, 0.9311], device='cuda:0')
Training Output torch.Size([2]) tensor([4.8596e-04, 9.9951e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0238, 0.9762], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0230, 0.9770], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0192, 0.9808], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2438, 0.7562], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9997e-01, 2.9197e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9990e-01, 1.0230e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0030, 0.9970], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9608, 0.0392], device='cuda:0')
Training Output torch.Size([2]) tensor([4.2388e-04, 9.9958e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1901, 0.8099], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9666, 0.0334], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0672, 0.9328], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0608, 0.9392], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0046, 0.9954], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0603, 0.9397], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9981e-01, 1.8814e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9965e-01, 3.5281e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0489, 0.9511], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0172, 0.9828], device='cuda:0')
Training Output torch.Size([2]) tensor([3.1442e-04, 9.9969e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0106, 0.9894], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1469, 0.8531], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 5.1537e-06], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 23, Training ones: 69 / 82
outputs torch.Size([24]) tensor([0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9486, 0.0514], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9987, 0.0013], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9241, 0.0759], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7373, 0.2627], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9950e-01, 5.0137e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6571, 0.3429], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1163, 0.8837], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0051, 0.9949], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9801, 0.0199], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9803, 0.0197], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7436, 0.2564], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0785, 0.9215], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1694, 0.8306], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0443, 0.9557], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0540, 0.9460], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9999e-01, 7.0719e-06], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9976, 0.0024], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9993e-01, 7.0038e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0193, 0.9807], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9596, 0.0404], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8744, 0.1256], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0090, 0.9910], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8581, 0.1419], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4316, 0.5684], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 58.333% (loss: 2.227) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0408, 0.9592], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1545, 0.8455], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 15, Training ones: 16 / 11
INFO:root:[   99] train: 87.500% test: 54.167%
INFO:root:Accuracy: 0.85714, Precision: 0.82927, Recall: 0.98551, F1: 0.90066
INFO:root:Val Accuracy: 0.57692, Precision: 0.72727, Recall: 0.50000, F1: 0.59259
INFO:root:F1: 0.59259 did not improve from 0.800000011920929
INFO:root:Epoch 100
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0328, 0.9672], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 2.1698e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0349, 0.9651], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0609, 0.9391], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6106, 0.3894], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2482, 0.7518], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0898, 0.9102], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0536, 0.9464], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0188, 0.9812], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0159, 0.9841], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9272, 0.0728], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0090, 0.9910], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1308, 0.8692], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0152, 0.9848], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9989, 0.0011], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0038, 0.9962], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0680, 0.9320], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9902e-01, 9.7735e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1362, 0.8638], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0076, 0.9924], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 1.0910e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0408, 0.9592], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2487, 0.7513], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3151, 0.6849], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 91.667% (loss: 0.219) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0308, 0.9692], device='cuda:0')
Training Output torch.Size([2]) tensor([7.6580e-04, 9.9923e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0078, 0.9922], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9947e-01, 5.2645e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9993e-01, 7.3113e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 2.4728e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9915, 0.0085], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9928e-01, 7.1943e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1317, 0.8683], device='cuda:0')
Training Output torch.Size([2]) tensor([5.1326e-04, 9.9949e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6360, 0.3640], device='cuda:0')
Training Output torch.Size([2]) tensor([3.7924e-04, 9.9962e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.4848e-04, 9.9945e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0208, 0.9792], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4309, 0.5691], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9554, 0.0446], device='cuda:0')
Training Output torch.Size([2]) tensor([9.2178e-04, 9.9908e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1755, 0.8245], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9985, 0.0015], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0635, 0.9365], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9892, 0.0108], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0091, 0.9909], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0588, 0.9412], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0560, 0.9440], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1193, 0.8807], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0122, 0.9878], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2050, 0.7950], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0160, 0.9840], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8339, 0.1661], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1061, 0.8939], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2336, 0.7664], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5836, 0.4164], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0079, 0.9921], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0564, 0.9436], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8103, 0.1897], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0791, 0.9209], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2761, 0.7239], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2671, 0.7329], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9725, 0.0275], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0083, 0.9917], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4761, 0.5239], device='cuda:0')
Training Output torch.Size([2]) tensor([3.1324e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1603, 0.8397], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1011, 0.8989], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8722, 0.1278], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6780, 0.3220], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0293, 0.9707], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2949, 0.7051], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0203, 0.9797], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0363, 0.9637], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7959, 0.2041], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7727, 0.2273], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 2.4780e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7659, 0.2341], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0034, 0.9966], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1974, 0.8026], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0285, 0.9715], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 3.5283e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9985e-01, 1.4653e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9967, 0.0033], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0803, 0.9197], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9913e-01, 8.6937e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0035, 0.9965], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0281, 0.9719], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8385, 0.1615], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9970, 0.0030], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0043, 0.9957], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2504, 0.7496], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0058, 0.9942], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9976, 0.0024], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9964e-01, 3.6472e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0245, 0.9755], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Training Output torch.Size([2]) tensor([1.8164e-04, 9.9982e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1178, 0.8822], device='cuda:0')
Training Output torch.Size([2]) tensor([2.0744e-04, 9.9979e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7097, 0.2903], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 34, Training ones: 69 / 71
outputs torch.Size([24]) tensor([1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4789, 0.5211], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9773, 0.0227], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2520, 0.7480], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1598, 0.8402], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9769, 0.0231], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2086, 0.7914], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0254, 0.9746], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.5287e-04, 9.9905e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7336, 0.2664], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5213, 0.4787], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2195, 0.7805], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0272, 0.9728], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0401, 0.9599], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0137, 0.9863], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0535, 0.9465], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9996e-01, 4.0854e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9477, 0.0523], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9930e-01, 7.0415e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0060, 0.9940], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5351, 0.4649], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2848, 0.7152], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4221, 0.5779], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1403, 0.8597], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 54.167% (loss: 1.795) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0118, 0.9882], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0370, 0.9630], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 8, Training ones: 16 / 18
INFO:root:[  100] train: 86.667% test: 52.083%
INFO:root:Accuracy: 0.84762, Precision: 0.87324, Recall: 0.89855, F1: 0.88571
INFO:root:Val Accuracy: 0.53846, Precision: 0.61111, Recall: 0.68750, F1: 0.64706
INFO:root:F1: 0.64706 did not improve from 0.800000011920929
INFO:root:Epoch 101
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0268, 0.9732], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9974e-01, 2.6375e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4156, 0.5844], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0820, 0.9180], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0807, 0.9193], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0082, 0.9918], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0276, 0.9724], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0155, 0.9845], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0238, 0.9762], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0322, 0.9678], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9971, 0.0029], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0044, 0.9956], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9925e-01, 7.4953e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0240, 0.9760], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2397, 0.7603], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9990, 0.0010], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0270, 0.9730], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0222, 0.9778], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8378, 0.1622], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 95.833% (loss: 0.126) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0045, 0.9955], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0049, 0.9951], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9994e-01, 5.7164e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3194, 0.6806], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5068, 0.4932], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9653, 0.0347], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7863, 0.2137], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0239, 0.9761], device='cuda:0')
Training Output torch.Size([2]) tensor([4.7101e-04, 9.9953e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0200, 0.9800], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0083, 0.9917], device='cuda:0')
Training Output torch.Size([2]) tensor([1.4341e-05, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0027, 0.9973], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0264, 0.9736], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9923e-01, 7.6580e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0795, 0.9205], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9554, 0.0446], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0147, 0.9853], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1907, 0.8093], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1160, 0.8840], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0169, 0.9831], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7984, 0.2016], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5112, 0.4888], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2429, 0.7571], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0141, 0.9859], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1517, 0.8483], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0250, 0.9750], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0486, 0.9514], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0737, 0.9263], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0211, 0.9789], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1623, 0.8377], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3683, 0.6317], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0302, 0.9698], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1446, 0.8554], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0161, 0.9839], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2267, 0.7733], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0046, 0.9954], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0098, 0.9902], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0419, 0.9581], device='cuda:0')
Training Output torch.Size([2]) tensor([5.5603e-04, 9.9944e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0111, 0.9889], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0915, 0.9085], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0692, 0.9308], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0108, 0.9892], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0169, 0.9831], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0783e-05, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.6800e-04, 9.9983e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0141, 0.9859], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0035, 0.9965], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9971, 0.0029], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9977e-01, 2.3277e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0074, 0.9926], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0216, 0.9784], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5464, 0.4536], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0036, 0.9964], device='cuda:0')
Training Output torch.Size([2]) tensor([2.0184e-04, 9.9980e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9981, 0.0019], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 2.1069e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9768, 0.0232], device='cuda:0')
Training Output torch.Size([2]) tensor([4.5576e-05, 9.9995e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2981, 0.7019], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0069, 0.9931], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8149, 0.1851], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9984e-01, 1.6188e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0168, 0.9832], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0047, 0.9953], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0120, 0.9880], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9955, 0.0045], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 9.3322e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0051, 0.9949], device='cuda:0')
Training Output torch.Size([2]) tensor([9.5728e-05, 9.9990e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0020, 0.9980], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0027, 0.9973], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9868, 0.0132], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 24, Training ones: 69 / 81
outputs torch.Size([24]) tensor([0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5481, 0.4519], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9859, 0.0141], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2592, 0.7408], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1452, 0.8548], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8863, 0.1137], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2354, 0.7646], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0281, 0.9719], device='cuda:0')
Validation Output torch.Size([2]) tensor([8.8650e-04, 9.9911e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7563, 0.2437], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4503, 0.5497], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2813, 0.7187], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0215, 0.9785], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0497, 0.9503], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0130, 0.9870], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0894, 0.9106], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9995e-01, 4.5754e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9531, 0.0469], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9947e-01, 5.2851e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4759, 0.5241], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2992, 0.7008], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2835, 0.7165], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1033, 0.8967], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 50.000% (loss: 1.820) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0147, 0.9853], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0415, 0.9585], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 7, Training ones: 16 / 19
INFO:root:[  101] train: 86.667% test: 50.000%
INFO:root:Accuracy: 0.84762, Precision: 0.82716, Recall: 0.97101, F1: 0.89333
INFO:root:Val Accuracy: 0.50000, Precision: 0.57895, Recall: 0.68750, F1: 0.62857
INFO:root:F1: 0.62857 did not improve from 0.800000011920929
INFO:root:Epoch 102
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0287, 0.9713], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9963, 0.0037], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0782, 0.9218], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0034, 0.9966], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0051, 0.9949], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0201, 0.9799], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0134, 0.9866], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0888, 0.9112], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3839, 0.6161], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0077, 0.9923], device='cuda:0')
Training Output torch.Size([2]) tensor([7.9783e-04, 9.9920e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0035, 0.9965], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0332, 0.9668], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9737, 0.0263], device='cuda:0')
Training Output torch.Size([2]) tensor([6.4020e-05, 9.9994e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0730, 0.9270], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9965e-01, 3.5007e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.7926e-04, 9.9902e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5960, 0.4040], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0065, 0.9935], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0663, 0.9337], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1585, 0.8415], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.069) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0094, 0.9906], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0077, 0.9923], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0972, 0.9028], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9983, 0.0017], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9924, 0.0076], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9905e-01, 9.4916e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9977, 0.0023], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1356, 0.8644], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0031, 0.9969], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0042, 0.9958], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0114, 0.9886], device='cuda:0')
Training Output torch.Size([2]) tensor([5.1442e-05, 9.9995e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.5840e-05, 9.9994e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0280, 0.9720], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9809, 0.0191], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0173, 0.9827], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9954e-01, 4.6191e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2000, 0.8000], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9965, 0.0035], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0175, 0.9825], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4059, 0.5941], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0593, 0.9407], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1730, 0.8270], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1389, 0.8611], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8820, 0.1180], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0095, 0.9905], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9205, 0.0795], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5953, 0.4047], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6392, 0.3608], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1308, 0.8692], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0150, 0.9850], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8651, 0.1349], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9465, 0.0535], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0709, 0.9291], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0195, 0.9805], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4253, 0.5747], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1648, 0.8352], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0154, 0.9846], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2955, 0.7045], device='cuda:0')
Training Output torch.Size([2]) tensor([7.4661e-04, 9.9925e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0386, 0.9614], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0056, 0.9944], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2554, 0.7446], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5640, 0.4360], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4765, 0.5235], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0170, 0.9830], device='cuda:0')
Training Output torch.Size([2]) tensor([4.5838e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0315, 0.9685], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0197, 0.9803], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1190, 0.8810], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 4.0452e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 3.1259e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4958, 0.5042], device='cuda:0')
Training Output torch.Size([2]) tensor([7.3792e-04, 9.9926e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0067, 0.9933], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0161, 0.9839], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0023, 0.9977], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9988, 0.0012], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 3.9055e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9982, 0.0018], device='cuda:0')
Training Output torch.Size([2]) tensor([2.0947e-04, 9.9979e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6728, 0.3272], device='cuda:0')
Training Output torch.Size([2]) tensor([8.4925e-04, 9.9915e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0631, 0.9369], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9953, 0.0047], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9971e-01, 2.8685e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0461, 0.9539], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0564, 0.9436], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0726, 0.9274], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9949e-01, 5.0827e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.1772e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0044, 0.9956], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1637e-04, 9.9988e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([3.9977e-04, 9.9960e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0071, 0.9929], device='cuda:0')
Training Output torch.Size([2]) tensor([1.2831e-04, 9.9987e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9601, 0.0399], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 29, Training ones: 69 / 76
outputs torch.Size([24]) tensor([0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7759, 0.2241], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9980, 0.0020], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4965, 0.5035], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2614, 0.7386], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9988e-01, 1.1592e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3801, 0.6199], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0467, 0.9533], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8988, 0.1012], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7145, 0.2855], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5217, 0.4783], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0231, 0.9769], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1075, 0.8925], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0195, 0.9805], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0165, 0.9835], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9998e-01, 2.1529e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9858, 0.0142], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9985e-01, 1.4596e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0082, 0.9918], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5366, 0.4634], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4998, 0.5002], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0058, 0.9942], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3180, 0.6820], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1251, 0.8749], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 54.167% (loss: 1.960) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0289, 0.9711], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0824, 0.9176], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 10, Training ones: 16 / 16
INFO:root:[  102] train: 87.500% test: 52.083%
INFO:root:Accuracy: 0.85714, Precision: 0.85526, Recall: 0.94203, F1: 0.89655
INFO:root:Val Accuracy: 0.53846, Precision: 0.62500, Recall: 0.62500, F1: 0.62500
INFO:root:F1: 0.62500 did not improve from 0.800000011920929
INFO:root:Epoch 103
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8845, 0.1155], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1063, 0.8937], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0834, 0.9166], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0501, 0.9499], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0073, 0.9927], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0601, 0.9399], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0052, 0.9948], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0020, 0.9980], device='cuda:0')
Training Output torch.Size([2]) tensor([9.7735e-04, 9.9902e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0187, 0.9813], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9636, 0.0364], device='cuda:0')
Training Output torch.Size([2]) tensor([4.3309e-04, 9.9957e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0160, 0.9840], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9987e-01, 1.2831e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0077, 0.9923], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3313, 0.6687], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8919, 0.1081], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0768, 0.9232], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0275, 0.9725], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0248, 0.9752], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.050) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0154, 0.9846], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0138, 0.9862], device='cuda:0')
Training Output torch.Size([2]) tensor([4.1174e-05, 9.9996e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0034, 0.9966], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9971e-01, 2.8741e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9559, 0.0441], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 2.4111e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9959, 0.0041], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9988, 0.0012], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1196, 0.8804], device='cuda:0')
Training Output torch.Size([2]) tensor([4.5209e-04, 9.9955e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0130, 0.9870], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0560, 0.9440], device='cuda:0')
Training Output torch.Size([2]) tensor([8.1244e-05, 9.9992e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.8786e-04, 9.9951e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0125, 0.9875], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9917e-01, 8.2959e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0094, 0.9906], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0155, 0.9845], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9993e-01, 6.6311e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9101, 0.0899], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9899, 0.0101], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0103, 0.9897], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1992, 0.8008], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0068, 0.9932], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5444, 0.4556], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1104, 0.8896], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9941, 0.0059], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0036, 0.9964], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9927e-01, 7.3361e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0127, 0.9873], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3488, 0.6512], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2070, 0.7930], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0489, 0.9511], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0604, 0.9396], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9862, 0.0138], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2301, 0.7699], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0258, 0.9742], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0209, 0.9791], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0060, 0.9940], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0404, 0.9596], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0047, 0.9953], device='cuda:0')
Training Output torch.Size([2]) tensor([7.4516e-04, 9.9925e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0620, 0.9380], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0140, 0.9860], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0334, 0.9666], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1374, 0.8626], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0612, 0.9388], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0055, 0.9945], device='cuda:0')
Training Output torch.Size([2]) tensor([5.6603e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.5423e-04, 9.9915e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0532, 0.9468], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0100, 0.9900], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9962e-01, 3.7556e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9975e-01, 2.5464e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0979, 0.9021], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0432e-04, 9.9990e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0059, 0.9941], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3765e-04, 9.9986e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 4.9370e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9977e-01, 2.3322e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9927e-01, 7.2791e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0451, 0.9549], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8103, 0.1897], device='cuda:0')
Training Output torch.Size([2]) tensor([8.0095e-04, 9.9920e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0051, 0.9949], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8981, 0.1019], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3186, 0.6814], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0028, 0.9972], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0233, 0.9767], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0069, 0.9931], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9977e-01, 2.2605e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9096, 0.0904], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0054, 0.9946], device='cuda:0')
Training Output torch.Size([2]) tensor([6.6831e-05, 9.9993e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0054, 0.9946], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0045, 0.9955], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0455, 0.9545], device='cuda:0')
Training Output torch.Size([2]) tensor([3.3930e-04, 9.9966e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9929e-01, 7.1384e-04], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 27, Training ones: 69 / 78
outputs torch.Size([24]) tensor([0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.6858, 0.3142], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9986, 0.0014], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5857, 0.4143], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2154, 0.7846], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9921e-01, 7.9473e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3704, 0.6296], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0328, 0.9672], device='cuda:0')
Validation Output torch.Size([2]) tensor([6.9460e-04, 9.9931e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9453, 0.0547], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7341, 0.2659], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5298, 0.4702], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0186, 0.9814], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1074, 0.8926], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0168, 0.9832], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1966, 0.8034], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9998e-01, 1.9148e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9882, 0.0118], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9994e-01, 6.0377e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0068, 0.9932], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4966, 0.5034], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5637, 0.4363], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0029, 0.9971], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3198, 0.6802], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1055, 0.8945], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 50.000% (loss: 2.074) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0258, 0.9742], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0692, 0.9308], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 11, Training ones: 16 / 15
INFO:root:[  103] train: 90.833% test: 50.000%
INFO:root:Accuracy: 0.89524, Precision: 0.87179, Recall: 0.98551, F1: 0.92517
INFO:root:Val Accuracy: 0.50000, Precision: 0.60000, Recall: 0.56250, F1: 0.58065
INFO:root:F1: 0.58065 did not improve from 0.800000011920929
INFO:root:Epoch 104
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0048, 0.9952], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9905, 0.0095], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1285, 0.8715], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1091, 0.8909], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0339, 0.9661], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0042, 0.9958], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6434, 0.3566], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1326, 0.8674], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0263, 0.9737], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0052, 0.9948], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0108, 0.9892], device='cuda:0')
Training Output torch.Size([2]) tensor([6.0118e-04, 9.9940e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0102, 0.9898], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0052, 0.9948], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9988, 0.0012], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0035, 0.9965], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9923, 0.0077], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0383, 0.9617], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1468, 0.8532], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9953e-01, 4.7285e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0377, 0.9623], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0218, 0.9782], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1852, 0.8148], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 95.833% (loss: 0.084) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.1303e-04, 9.9939e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0127, 0.9873], device='cuda:0')
Training Output torch.Size([2]) tensor([7.0038e-05, 9.9993e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0811, 0.9189], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9924e-01, 7.5984e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9904e-01, 9.5660e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9995e-01, 5.1442e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9988, 0.0012], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4753, 0.5247], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3216, 0.6784], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0158, 0.9842], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0351, 0.9649], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0041, 0.9959], device='cuda:0')
Training Output torch.Size([2]) tensor([5.5292e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.3936e-04, 9.9916e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0895, 0.9105], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 3.5283e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0150, 0.9850], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0350, 0.9650], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 2.3187e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0383, 0.9617], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8405, 0.1595], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1836, 0.8164], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0289, 0.9711], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7445, 0.2555], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7687, 0.2313], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9849, 0.0151], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1088, 0.8912], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0222, 0.9778], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0329, 0.9671], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1336, 0.8664], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0083, 0.9917], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0331, 0.9669], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0031, 0.9969], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9987, 0.0013], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0072, 0.9928], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0035, 0.9965], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5493, 0.4507], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0734, 0.9266], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0151, 0.9849], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2537, 0.7463], device='cuda:0')
Training Output torch.Size([2]) tensor([5.8978e-05, 9.9994e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1035, 0.8965], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0297, 0.9703], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0920, 0.9080], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0034, 0.9966], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0253, 0.9747], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0213, 0.9787], device='cuda:0')
Training Output torch.Size([2]) tensor([5.1337e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.9308e-04, 9.9971e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0090, 0.9910], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0146, 0.9854], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9986, 0.0014], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9989e-01, 1.1457e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0099, 0.9901], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0516, 0.9484], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0097, 0.9903], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 1.4913e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 2.0025e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9988e-01, 1.1660e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9963, 0.0037], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3578e-05, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0677, 0.9323], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9785, 0.0215], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9976e-01, 2.4016e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0207, 0.9793], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0075, 0.9925], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0062, 0.9938], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9968e-01, 3.1875e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9959e-01, 4.1085e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.1819e-04, 9.9908e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3033e-04, 9.9987e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.3144e-04, 9.9967e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.6931e-04, 9.9933e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0592, 0.9408], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1279e-04, 9.9989e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 7.3824e-06], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 28, Training ones: 69 / 77
outputs torch.Size([24]) tensor([0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7224, 0.2776], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9954e-01, 4.6371e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7906, 0.2094], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2302, 0.7698], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9999e-01, 5.4434e-06], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3885, 0.6115], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0219, 0.9781], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.8685e-04, 9.9971e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9891, 0.0109], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8035, 0.1965], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5420, 0.4580], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0146, 0.9854], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1074, 0.8926], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0127, 0.9873], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0074, 0.9926], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9999e-01, 6.3145e-06], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9961, 0.0039], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9999e-01, 8.7326e-06], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0046, 0.9954], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6695, 0.3305], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7803, 0.2197], device='cuda:0')
Validation Output torch.Size([2]) tensor([7.2933e-04, 9.9927e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5521, 0.4479], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1390, 0.8610], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 58.333% (loss: 2.354) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0206, 0.9794], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0463, 0.9537], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 13, Training ones: 16 / 13
INFO:root:[  104] train: 91.667% test: 54.167%
INFO:root:Accuracy: 0.90476, Precision: 0.88312, Recall: 0.98551, F1: 0.93151
INFO:root:Val Accuracy: 0.57692, Precision: 0.69231, Recall: 0.56250, F1: 0.62069
INFO:root:F1: 0.62069 did not improve from 0.800000011920929
INFO:root:Epoch 105
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0150, 0.9850], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6775, 0.3225], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0285, 0.9715], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0333, 0.9667], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0236, 0.9764], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0137, 0.9863], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0293, 0.9707], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0658, 0.9342], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0078, 0.9922], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0481, 0.9519], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6947, 0.3053], device='cuda:0')
Training Output torch.Size([2]) tensor([2.4299e-04, 9.9976e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0225, 0.9775], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0354, 0.9646], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9896, 0.0104], device='cuda:0')
Training Output torch.Size([2]) tensor([8.0612e-05, 9.9992e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0060, 0.9940], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9974e-01, 2.6017e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.8309e-04, 9.9902e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1518, 0.8482], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.0349e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0085, 0.9915], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0240, 0.9760], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1487, 0.8513], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 95.833% (loss: 0.095) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.6427e-04, 9.9974e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0216, 0.9784], device='cuda:0')
Training Output torch.Size([2]) tensor([2.5767e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0647, 0.9353], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9980e-01, 1.9910e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9991e-01, 9.3510e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9982e-01, 1.8271e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.0761e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9961e-01, 3.8672e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0451, 0.9549], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0055, 0.9945], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0023, 0.9977], device='cuda:0')
Training Output torch.Size([2]) tensor([1.9794e-04, 9.9980e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.8970e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0138, 0.9862], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0188, 0.9812], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1313, 0.8687], device='cuda:0')
Training Output torch.Size([2]) tensor([5.5405e-05, 9.9994e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0106, 0.9894], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9926e-01, 7.3792e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0236, 0.9764], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 2.9944e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2224, 0.7776], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0687, 0.9313], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0086, 0.9914], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0631, 0.9369], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9988e-01, 1.1867e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9920, 0.0080], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0049, 0.9951], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9959, 0.0041], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1440, 0.8560], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0782, 0.9218], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9270, 0.0730], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6756, 0.3244], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 1.5937e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9121, 0.0879], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0204, 0.9796], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2872, 0.7128], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8943, 0.1057], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1005, 0.8995], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0133, 0.9867], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0682, 0.9318], device='cuda:0')
Training Output torch.Size([2]) tensor([3.6686e-04, 9.9963e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0049, 0.9951], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2247, 0.7753], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0082, 0.9918], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0167, 0.9833], device='cuda:0')
Training Output torch.Size([2]) tensor([2.3459e-04, 9.9977e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.7092e-05, 9.9993e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0380, 0.9620], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0040, 0.9960], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 2.3781e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9997e-01, 2.7003e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0321, 0.9679], device='cuda:0')
Training Output torch.Size([2]) tensor([2.3969e-04, 9.9976e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3148, 0.6852], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Training Output torch.Size([2]) tensor([2.0027e-04, 9.9980e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9991e-01, 8.6822e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 9.8746e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 1.8129e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0432e-04, 9.9990e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9987, 0.0013], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0770, 0.9230], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0227, 0.9773], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8015, 0.1985], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 5.4434e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([2.4633e-04, 9.9975e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0119, 0.9881], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0049, 0.9951], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9952e-01, 4.8312e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 3.3860e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0101, 0.9899], device='cuda:0')
Training Output torch.Size([2]) tensor([2.1613e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.3171e-05, 9.9992e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.3737e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0292, 0.9708], device='cuda:0')
Training Output torch.Size([2]) tensor([1.4710e-04, 9.9985e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9994e-01, 5.7612e-05], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 31, Training ones: 69 / 74
outputs torch.Size([24]) tensor([1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4461, 0.5539], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9944e-01, 5.5820e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4261, 0.5739], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1664, 0.8336], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9885, 0.0115], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3583, 0.6417], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0089, 0.9911], device='cuda:0')
Validation Output torch.Size([2]) tensor([8.5811e-05, 9.9991e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9778, 0.0222], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3028, 0.6972], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3103, 0.6897], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0067, 0.9933], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0488, 0.9512], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0047, 0.9953], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1616, 0.8384], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9999e-01, 7.3824e-06], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9931, 0.0069], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0000e+00, 4.6925e-06], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4849, 0.5151], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7796, 0.2204], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6469, 0.3531], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1531, 0.8469], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 62.500% (loss: 2.283) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0092, 0.9908], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0224, 0.9776], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 8, Training ones: 16 / 18
INFO:root:[  105] train: 89.167% test: 56.250%
INFO:root:Accuracy: 0.87619, Precision: 0.87838, Recall: 0.94203, F1: 0.90909
INFO:root:Val Accuracy: 0.61538, Precision: 0.66667, Recall: 0.75000, F1: 0.70588
INFO:root:F1: 0.70588 did not improve from 0.800000011920929
INFO:root:Epoch 106
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0074, 0.9926], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9963, 0.0037], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0078, 0.9922], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0072, 0.9928], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1545, 0.8455], device='cuda:0')
Training Output torch.Size([2]) tensor([4.8977e-04, 9.9951e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0060, 0.9940], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0085, 0.9915], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Output torch.Size([2]) tensor([8.1039e-04, 9.9919e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.5913e-05, 9.9996e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0023, 0.9977], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0425, 0.9575], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 5.4418e-08], device='cuda:0')
Training Output torch.Size([2]) tensor([1.6093e-04, 9.9984e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0044, 0.9956], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.9561e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0084, 0.9916], device='cuda:0')
Training Output torch.Size([2]) tensor([9.3994e-04, 9.9906e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 5.1337e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0872, 0.9128], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0052, 0.9948], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.015) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([2.3461e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.8841e-04, 9.9941e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 3.2759e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9948, 0.0052], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9079, 0.0921], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9933, 0.0067], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3435, 0.6565], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9184, 0.0816], device='cuda:0')
Training Output torch.Size([2]) tensor([7.6322e-05, 9.9992e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.4362e-04, 9.9906e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0085, 0.9915], device='cuda:0')
Training Output torch.Size([2]) tensor([5.5840e-05, 9.9994e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0038, 0.9962], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0048, 0.9952], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 2.5459e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([7.0004e-04, 9.9930e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0042, 0.9958], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9901, 0.0099], device='cuda:0')
Training Output torch.Size([2]) tensor([6.0235e-04, 9.9940e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9980e-01, 2.0343e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Training Output torch.Size([2]) tensor([3.0895e-04, 9.9969e-01], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9427, 0.0573], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9562, 0.0438], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5274, 0.4726], device='cuda:0')
Training Output torch.Size([2]) tensor([6.0826e-04, 9.9939e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1859, 0.8141], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0124, 0.9876], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1330, 0.8670], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2717, 0.7283], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0154, 0.9846], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0635, 0.9365], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9978, 0.0022], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0437, 0.9563], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1493, 0.8507], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0095, 0.9905], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0205, 0.9795], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0110, 0.9890], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1821e-04, 9.9988e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.9942e-04, 9.9950e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.5541e-04, 9.9924e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1681, 0.8319], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0115, 0.9885], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1599, 0.8401], device='cuda:0')
Training Output torch.Size([2]) tensor([4.6018e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.8596e-04, 9.9951e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 1.3738e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9997e-01, 2.6070e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0038, 0.9962], device='cuda:0')
Training Output torch.Size([2]) tensor([7.7524e-05, 9.9992e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3499e-04, 9.9986e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 2.8462e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 7.0296e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9988, 0.0012], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0145, 0.9855], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9961, 0.0039], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0047, 0.9953], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0170, 0.9830], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2916, 0.7084], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 3.9897e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0174, 0.9826], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0040, 0.9960], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0248, 0.9752], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0035, 0.9965], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 5.8172e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([3.3666e-04, 9.9966e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.1137e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.3969e-04, 9.9976e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.5773e-05, 9.9996e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.1570e-04, 9.9978e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.5773e-05, 9.9996e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2637, 0.7363], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 24, Training ones: 69 / 81
outputs torch.Size([24]) tensor([0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7649, 0.2351], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9986e-01, 1.3982e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7075, 0.2925], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3942, 0.6058], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9976e-01, 2.4157e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7531, 0.2469], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0126, 0.9874], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.5355e-05, 9.9990e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9941, 0.0059], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6117, 0.3883], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6923, 0.3077], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0089, 0.9911], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0757, 0.9243], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0080, 0.9920], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2337, 0.7663], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9999e-01, 5.7494e-06], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9982, 0.0018], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0000e+00, 1.0761e-06], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0035, 0.9965], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7617, 0.2383], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9756, 0.0244], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0023, 0.9977], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9213, 0.0787], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4274, 0.5726], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 54.167% (loss: 2.462) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0159, 0.9841], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0438, 0.9562], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 14, Training ones: 16 / 12
INFO:root:[  106] train: 85.556% test: 52.083%
INFO:root:Accuracy: 0.86667, Precision: 0.83951, Recall: 0.98551, F1: 0.90667
INFO:root:Val Accuracy: 0.53846, Precision: 0.66667, Recall: 0.50000, F1: 0.57143
INFO:root:F1: 0.57143 did not improve from 0.800000011920929
INFO:root:Epoch 107
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0023, 0.9977], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9988e-01, 1.2124e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0910, 0.9090], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0380, 0.9620], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0058, 0.9942], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0053, 0.9947], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1594, 0.8406], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0088, 0.9912], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0310, 0.9690], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3342e-04, 9.9987e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0193, 0.9807], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0152, 0.9848], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2345, 0.7655], device='cuda:0')
Training Output torch.Size([2]) tensor([2.5566e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.6918e-04, 9.9953e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 8.4309e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0040, 0.9960], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1015, 0.8985], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9992e-01, 8.1562e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0028, 0.9972], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0380, 0.9620], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1272, 0.8728], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 95.833% (loss: 0.089) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.4516e-04, 9.9925e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0071, 0.9929], device='cuda:0')
Training Output torch.Size([2]) tensor([1.2681e-04, 9.9987e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0096, 0.9904], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9722, 0.0278], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9994e-01, 5.6719e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9338, 0.0662], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 9.2235e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9699, 0.0301], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0655, 0.9345], device='cuda:0')
Training Output torch.Size([2]) tensor([7.0004e-04, 9.9930e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0255, 0.9745], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0085, 0.9915], device='cuda:0')
Training Output torch.Size([2]) tensor([1.4510e-05, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2912, 0.7088], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0134, 0.9866], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 2.1189e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([5.6058e-05, 9.9994e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0334, 0.9666], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9926, 0.0074], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0343, 0.9657], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 5.7719e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0045, 0.9955], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0796, 0.9204], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0577, 0.9423], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3053, 0.6947], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1977, 0.8023], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9837, 0.0163], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0191, 0.9809], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 1.7367e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0411, 0.9589], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1918, 0.8082], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0205, 0.9795], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0127, 0.9873], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 2.8737e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0281, 0.9719], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1859, 0.8141], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6199, 0.3801], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2867, 0.7133], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2551, 0.7449], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8419, 0.1581], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0381, 0.9619], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9685, 0.0315], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5551, 0.4449], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0301, 0.9699], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0081, 0.9919], device='cuda:0')
Training Output torch.Size([2]) tensor([1.7466e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([5.6258e-04, 9.9944e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0243, 0.9757], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5263, 0.4737], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 3.2632e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 5.0830e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0288, 0.9712], device='cuda:0')
Training Output torch.Size([2]) tensor([6.4522e-05, 9.9994e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9816, 0.0184], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0592, 0.9408], device='cuda:0')
Training Output torch.Size([2]) tensor([2.8910e-04, 9.9971e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 8.7484e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.4708e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.0225e-08], device='cuda:0')
Training Output torch.Size([2]) tensor([2.4778e-04, 9.9975e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 7.7974e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0121, 0.9879], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0522, 0.9478], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 1.0051e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.0822e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0400, 0.9600], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0077, 0.9923], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1025, 0.8975], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9994e-01, 6.1089e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 1.1660e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0344, 0.9656], device='cuda:0')
Training Output torch.Size([2]) tensor([3.6765e-05, 9.9996e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0041, 0.9959], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0025, 0.9975], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0090, 0.9910], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1637e-04, 9.9988e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.1122e-07], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 31, Training ones: 69 / 74
outputs torch.Size([24]) tensor([0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9911, 0.0089], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9999e-01, 1.1169e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9893, 0.0107], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9739, 0.0261], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9999e-01, 6.9351e-06], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9937, 0.0063], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0374, 0.9626], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.1486e-04, 9.9979e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9966e-01, 3.3732e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9833, 0.0167], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9736, 0.0264], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0261, 0.9739], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3192, 0.6808], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0301, 0.9699], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3143, 0.6857], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0000e+00, 1.6732e-06], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9990e-01, 1.0310e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0000e+00, 1.8994e-07], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0130, 0.9870], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9801, 0.0199], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9934e-01, 6.5637e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0077, 0.9923], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9985, 0.0015], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9776, 0.0224], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 54.167% (loss: 3.360) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0562, 0.9438], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2058, 0.7942], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 16, Training ones: 16 / 10
INFO:root:[  107] train: 90.833% test: 52.083%
INFO:root:Accuracy: 0.89524, Precision: 0.89189, Recall: 0.95652, F1: 0.92308
INFO:root:Val Accuracy: 0.53846, Precision: 0.70000, Recall: 0.43750, F1: 0.53846
INFO:root:F1: 0.53846 did not improve from 0.800000011920929
INFO:root:Epoch 108
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9989e-01, 1.1279e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0116, 0.9884], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0996, 0.9004], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1642, 0.8358], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8896, 0.1104], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0572, 0.9428], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1513, 0.8487], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0116, 0.9884], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0027, 0.9973], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([5.0843e-05, 9.9995e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0035, 0.9965], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0126, 0.9874], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9934e-01, 6.6281e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9855e-04, 9.9900e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1736, 0.8264], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9997e-01, 2.5466e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0412, 0.9588], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2252, 0.7748], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0279, 0.9721], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0786, 0.9214], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9941, 0.0059], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 87.500% (loss: 0.406) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0262, 0.9738], device='cuda:0')
Training Output torch.Size([2]) tensor([8.6429e-04, 9.9914e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0123, 0.9877], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.0386e-08], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9984, 0.0016], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 2.6737e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9987, 0.0013], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9981e-01, 1.9411e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0103, 0.9897], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0144, 0.9856], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0311, 0.9689], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0196, 0.9804], device='cuda:0')
Training Output torch.Size([2]) tensor([6.8811e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1003, 0.8997], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0130, 0.9870], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.9751e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0621, 0.9379], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9872, 0.0128], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1592, 0.8408], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6852, 0.3148], device='cuda:0')
Training Output torch.Size([2]) tensor([4.4945e-04, 9.9955e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1317, 0.8683], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0745, 0.9255], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9975, 0.0025], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9987e-01, 1.2881e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9974e-01, 2.6375e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0121, 0.9879], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9989e-01, 1.0805e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0362, 0.9638], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8081, 0.1919], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8977, 0.1023], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0055, 0.9945], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0204, 0.9796], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.2216e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0296, 0.9704], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0323, 0.9677], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8326, 0.1674], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0046, 0.9954], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0217, 0.9783], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0267, 0.9733], device='cuda:0')
Training Output torch.Size([2]) tensor([3.0297e-04, 9.9970e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2650, 0.7350], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0367, 0.9633], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0825, 0.9175], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0126, 0.9874], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0126, 0.9874], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0530, 0.9470], device='cuda:0')
Training Output torch.Size([2]) tensor([1.8059e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0240, 0.9760], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8258, 0.1742], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.1865e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 1.1936e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0327, 0.9673], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1412e-04, 9.9989e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1471, 0.8529], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0144, 0.9856], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 3.9125e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4373, 0.5627], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9994e-01, 6.4522e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0378, 0.9622], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9893, 0.0107], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0126, 0.9874], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0163, 0.9837], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 1.0699e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 9.9521e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2109, 0.7891], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0259, 0.9741], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8412, 0.1588], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9743, 0.0257], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 2.4676e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([2.0263e-04, 9.9980e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.1335e-05, 9.9996e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Output torch.Size([2]) tensor([2.9083e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.0448e-04, 9.9960e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.3683e-04, 9.9946e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.3574e-07], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 33, Training ones: 69 / 72
outputs torch.Size([24]) tensor([0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9470, 0.0530], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9990e-01, 1.0111e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7667, 0.2333], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7717, 0.2283], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9996e-01, 3.8983e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9552, 0.0448], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0259, 0.9741], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.2339e-04, 9.9988e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9962, 0.0038], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7034, 0.2966], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8367, 0.1633], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0137, 0.9863], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1148, 0.8852], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0111, 0.9889], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0102, 0.9898], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9999e-01, 1.0741e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9988, 0.0012], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0000e+00, 1.8666e-06], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0078, 0.9922], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8357, 0.1643], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9942, 0.0058], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9799, 0.0201], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9189, 0.0811], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 54.167% (loss: 2.596) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0305, 0.9695], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1073, 0.8927], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 16, Training ones: 16 / 10
INFO:root:[  108] train: 89.167% test: 52.083%
INFO:root:Accuracy: 0.87619, Precision: 0.88889, Recall: 0.92754, F1: 0.90780
INFO:root:Val Accuracy: 0.53846, Precision: 0.70000, Recall: 0.43750, F1: 0.53846
INFO:root:F1: 0.53846 did not improve from 0.800000011920929
INFO:root:Epoch 109
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.6830e-04, 9.9963e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9620, 0.0380], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0227, 0.9773], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1833, 0.8167], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9860, 0.0140], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0023, 0.9977], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0357, 0.9643], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0044, 0.9956], device='cuda:0')
Training Output torch.Size([2]) tensor([4.5209e-04, 9.9955e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0126, 0.9874], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([1.6219e-04, 9.9984e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.7435e-04, 9.9983e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0173, 0.9827], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 3.4601e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([1.4426e-04, 9.9986e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0042, 0.9958], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9977, 0.0023], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0351, 0.9649], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0031, 0.9969], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9982e-01, 1.7988e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0418, 0.9582], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0215, 0.9785], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4509, 0.5491], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 95.833% (loss: 0.221) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0507, 0.9493], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9729e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0041, 0.9959], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 4.9370e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 5.4011e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8220, 0.1780], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9996e-01, 3.9443e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0435, 0.9565], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0989, 0.9011], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1320, 0.8680], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1039e-05, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0039, 0.9961], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0087, 0.9913], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9219, 0.0781], device='cuda:0')
Training Output torch.Size([2]) tensor([3.6830e-04, 9.9963e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0823, 0.9177], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9964, 0.0036], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0559, 0.9441], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 4.9757e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0316, 0.9684], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0351, 0.9649], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0519, 0.9481], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9950, 0.0050], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3179, 0.6821], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7278, 0.2722], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0129, 0.9871], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9902, 0.0098], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0907, 0.9093], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0495, 0.9505], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3183, 0.6817], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0112, 0.9888], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9997e-01, 2.8079e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1821e-04, 9.9988e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0068, 0.9932], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0953, 0.9047], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0059, 0.9941], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0033, 0.9967], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0251, 0.9749], device='cuda:0')
Training Output torch.Size([2]) tensor([1.9564e-04, 9.9980e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0148, 0.9852], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0042, 0.9958], device='cuda:0')
Training Output torch.Size([2]) tensor([8.2797e-04, 9.9917e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.6644e-04, 9.9953e-01], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0164, 0.9836], device='cuda:0')
Training Output torch.Size([2]) tensor([5.5176e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.4944e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0221, 0.9779], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0102, 0.9898], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8182, 0.1818], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9987, 0.0013], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0036, 0.9964], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0030, 0.9970], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0524, 0.9476], device='cuda:0')
Training Output torch.Size([2]) tensor([3.3015e-04, 9.9967e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8458, 0.1542], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 6.3145e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 4.1900e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9866, 0.0134], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0038, 0.9962], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0046, 0.9954], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7111, 0.2889], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9974e-01, 2.6170e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0141, 0.9859], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0268, 0.9732], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9334, 0.0666], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9945, 0.0055], device='cuda:0')
Training Output torch.Size([2]) tensor([3.9977e-04, 9.9960e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.5446e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([3.6259e-04, 9.9964e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0039, 0.9961], device='cuda:0')
Training Output torch.Size([2]) tensor([3.4397e-04, 9.9966e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9993e-01, 6.6052e-05], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 27, Training ones: 69 / 78
outputs torch.Size([24]) tensor([0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.8645, 0.1355], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9936e-01, 6.3619e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3107, 0.6893], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5193, 0.4807], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9951e-01, 4.8977e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8103, 0.1897], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0366, 0.9634], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.2731e-04, 9.9987e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9771, 0.0229], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3800, 0.6200], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7894, 0.2106], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0092, 0.9908], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0905, 0.9095], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0099, 0.9901], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2105, 0.7895], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9996e-01, 3.9136e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9902, 0.0098], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9999e-01, 1.2656e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0076, 0.9924], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5284, 0.4716], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9757, 0.0243], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0045, 0.9955], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7881, 0.2119], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6652, 0.3348], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 62.500% (loss: 2.080) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0339, 0.9661], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1376, 0.8624], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 14, Training ones: 16 / 12
INFO:root:[  109] train: 90.833% test: 56.250%
INFO:root:Accuracy: 0.89524, Precision: 0.87179, Recall: 0.98551, F1: 0.92517
INFO:root:Val Accuracy: 0.61538, Precision: 0.75000, Recall: 0.56250, F1: 0.64286
INFO:root:F1: 0.64286 did not improve from 0.800000011920929
INFO:root:Epoch 110
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9951e-01, 4.9168e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0099, 0.9901], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0246, 0.9754], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0174, 0.9826], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1146e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0535, 0.9465], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0273, 0.9727], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0060, 0.9940], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0380, 0.9620], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([2.2605e-04, 9.9977e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0201, 0.9799], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0047, 0.9953], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9967e-01, 3.2631e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([3.0959e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.5246e-04, 9.9925e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2975, 0.7025], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3128, 0.6872], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0328, 0.9672], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9945e-01, 5.4741e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2113, 0.7887], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0028, 0.9972], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0849, 0.9151], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 95.833% (loss: 0.090) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.5728e-05, 9.9992e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.8312e-04, 9.9952e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.5062e-04, 9.9945e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2915, 0.7085], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9989e-01, 1.0975e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9981e-01, 1.8814e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9912e-01, 8.7961e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9977, 0.0023], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6757, 0.3243], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0020, 0.9980], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0055, 0.9945], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0096, 0.9904], device='cuda:0')
Training Output torch.Size([2]) tensor([2.1445e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.5773e-05, 9.9996e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0308, 0.9692], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0149, 0.9851], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 2.3553e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0034, 0.9966], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0284, 0.9716], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9928e-01, 7.2366e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0103, 0.9897], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9982e-01, 1.7606e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0234, 0.9766], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0402, 0.9598], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1048, 0.8952], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1666, 0.8334], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9934, 0.0066], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4825, 0.5175], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0281, 0.9719], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8870, 0.1130], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9045, 0.0955], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9560, 0.0440], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9834, 0.0166], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0697, 0.9303], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 2.7371e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0123, 0.9877], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0688, 0.9312], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5244, 0.4756], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9045, 0.0955], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0184, 0.9816], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0117, 0.9883], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Training Output torch.Size([2]) tensor([5.7591e-04, 9.9942e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9666, 0.0334], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0155, 0.9845], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0112, 0.9888], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1352, 0.8648], device='cuda:0')
Training Output torch.Size([2]) tensor([2.0500e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4265, 0.5735], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4165, 0.5835], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9991e-01, 8.5476e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9979, 0.0021], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0535, 0.9465], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0190, 0.9810], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0041, 0.9959], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0030, 0.9970], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9963e-01, 3.6686e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 9.2402e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 1.6251e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([5.7255e-04, 9.9943e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9876, 0.0124], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0101, 0.9899], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0373, 0.9627], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9997e-01, 2.5566e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8625, 0.1375], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0092, 0.9908], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0260, 0.9740], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0156, 0.9844], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9897, 0.0103], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9986e-01, 1.4258e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0150, 0.9850], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0652, 0.9348], device='cuda:0')
Training Output torch.Size([2]) tensor([7.4264e-05, 9.9993e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0038, 0.9962], device='cuda:0')
Training Output torch.Size([2]) tensor([1.5118e-04, 9.9985e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 3.3466e-07], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 31, Training ones: 69 / 74
outputs torch.Size([24]) tensor([0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9719, 0.0281], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9972e-01, 2.7587e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4446, 0.5554], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7627, 0.2373], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9974e-01, 2.6427e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8547, 0.1453], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0668, 0.9332], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.7883e-04, 9.9982e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9882, 0.0118], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6200, 0.3800], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9571, 0.0429], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0060, 0.9940], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1451, 0.8549], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0105, 0.9895], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0459, 0.9541], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9999e-01, 1.3007e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9968, 0.0032], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9999e-01, 6.2654e-06], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0093, 0.9907], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7762, 0.2238], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9916, 0.0084], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0042, 0.9958], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5305, 0.4695], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6849, 0.3151], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 58.333% (loss: 2.293) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0506, 0.9494], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3489, 0.6511], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 15, Training ones: 16 / 11
INFO:root:[  110] train: 90.833% test: 54.167%
INFO:root:Accuracy: 0.89524, Precision: 0.89189, Recall: 0.95652, F1: 0.92308
INFO:root:Val Accuracy: 0.57692, Precision: 0.72727, Recall: 0.50000, F1: 0.59259
INFO:root:F1: 0.59259 did not improve from 0.800000011920929
INFO:root:Epoch 111
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0117, 0.9883], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9997e-01, 3.0718e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6863, 0.3137], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0431, 0.9569], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7622, 0.2378], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0052, 0.9948], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0045, 0.9955], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0570, 0.9430], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2930, 0.7070], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0023, 0.9977], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0230, 0.9770], device='cuda:0')
Training Output torch.Size([2]) tensor([3.2192e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0144, 0.9856], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0294, 0.9706], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 2.2917e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0343, 0.9657], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9988, 0.0012], device='cuda:0')
Training Output torch.Size([2]) tensor([2.2517e-04, 9.9977e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1667, 0.8333], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9961e-01, 3.9434e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0976, 0.9024], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5810, 0.4190], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6454, 0.3546], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 83.333% (loss: 0.224) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.5100e-04, 9.9925e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0221, 0.9779], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Output torch.Size([2]) tensor([3.0003e-04, 9.9970e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.3681e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9992e-01, 8.3496e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9911e-01, 8.8823e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9997e-01, 3.4135e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9845, 0.0155], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0897, 0.9103], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0084, 0.9916], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0234, 0.9766], device='cuda:0')
Training Output torch.Size([2]) tensor([5.5386e-04, 9.9945e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.7299e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0113, 0.9887], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9919e-01, 8.1039e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([2.9194e-04, 9.9971e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0408, 0.9592], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6034, 0.3966], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0127, 0.9873], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 2.7265e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1102, 0.8898], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9818, 0.0182], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0757, 0.9243], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0282, 0.9718], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9734, 0.0266], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1942, 0.8058], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0129, 0.9871], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9868, 0.0132], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0462, 0.9538], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0106, 0.9894], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0023, 0.9977], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0118, 0.9882], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0127, 0.9873], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9933, 0.0067], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0996, 0.9004], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7263, 0.2737], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0472, 0.9528], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0244, 0.9756], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0590, 0.9410], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0181, 0.9819], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0190, 0.9810], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9788, 0.0212], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0034, 0.9966], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0125, 0.9875], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0342, 0.9658], device='cuda:0')
Training Output torch.Size([2]) tensor([4.7101e-04, 9.9953e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.5921e-04, 9.9954e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0165, 0.9835], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0062, 0.9938], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0695, 0.9305], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9966e-01, 3.3798e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0425, 0.9575], device='cuda:0')
Training Output torch.Size([2]) tensor([1.5148e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0452, 0.9548], device='cuda:0')
Training Output torch.Size([2]) tensor([6.7719e-04, 9.9932e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9784, 0.0216], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 2.9365e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9914, 0.0086], device='cuda:0')
Training Output torch.Size([2]) tensor([4.9650e-04, 9.9950e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9349, 0.0651], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0030, 0.9970], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0175, 0.9825], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4324, 0.5676], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9924e-01, 7.6281e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0194, 0.9806], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0508, 0.9492], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0038, 0.9962], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9985, 0.0015], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9991e-01, 9.0988e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([5.4434e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.0906e-04, 9.9979e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.9908e-05, 9.9996e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.0303e-04, 9.9980e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.1881e-05, 9.9992e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 7.2396e-06], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 31, Training ones: 69 / 74
outputs torch.Size([24]) tensor([0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5121, 0.4879], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9693, 0.0307], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0633, 0.9367], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3129, 0.6871], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9574, 0.0426], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1788, 0.8212], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0287, 0.9713], device='cuda:0')
Validation Output torch.Size([2]) tensor([5.3075e-05, 9.9995e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8218, 0.1782], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0462, 0.9538], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4192, 0.5808], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0390, 0.9610], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0020, 0.9980], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0273, 0.9727], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9987e-01, 1.2982e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8801, 0.1199], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9989e-01, 1.1235e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0035, 0.9965], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2632, 0.7368], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6743, 0.3257], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0446, 0.9554], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1024, 0.8976], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 54.167% (loss: 1.750) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0128, 0.9872], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1109, 0.8891], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 8, Training ones: 16 / 18
INFO:root:[  111] train: 87.500% test: 52.083%
INFO:root:Accuracy: 0.85714, Precision: 0.86486, Recall: 0.92754, F1: 0.89510
INFO:root:Val Accuracy: 0.53846, Precision: 0.61111, Recall: 0.68750, F1: 0.64706
INFO:root:F1: 0.64706 did not improve from 0.800000011920929
INFO:root:Epoch 112
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.6767e-04, 9.9913e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2123, 0.7877], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0060, 0.9940], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0074, 0.9926], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1266, 0.8734], device='cuda:0')
Training Output torch.Size([2]) tensor([6.3274e-05, 9.9994e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0048, 0.9952], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0121, 0.9879], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0315, 0.9685], device='cuda:0')
Training Output torch.Size([2]) tensor([2.0027e-04, 9.9980e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.6368e-04, 9.9944e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.6498e-05, 9.9994e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0150, 0.9850], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0155, 0.9845], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9771, 0.0229], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0149, 0.9851], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9889, 0.0111], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0055, 0.9945], device='cuda:0')
Training Output torch.Size([2]) tensor([1.2681e-04, 9.9987e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9526, 0.0474], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0141, 0.9859], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0040, 0.9960], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7717, 0.2283], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 91.667% (loss: 0.141) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2006, 0.7994], device='cuda:0')
Training Output torch.Size([2]) tensor([3.0360e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.0062e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([8.8997e-04, 9.9911e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9989e-01, 1.1170e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3537, 0.6463], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9926e-01, 7.4225e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9796, 0.0204], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8017, 0.1983], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1726, 0.8274], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([1.6281e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0512, 0.9488], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 7.1833e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([2.8574e-04, 9.9971e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0268, 0.9732], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9864, 0.0136], device='cuda:0')
Training Output torch.Size([2]) tensor([3.7337e-04, 9.9963e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9991e-01, 9.1702e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0121, 0.9879], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0496, 0.9504], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0776, 0.9224], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0927, 0.9073], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9918, 0.0082], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0226, 0.9774], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7967, 0.2033], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0035, 0.9965], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0221, 0.9779], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6359, 0.3641], device='cuda:0')
Training Output torch.Size([2]) tensor([8.5423e-04, 9.9915e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.1904e-04, 9.9938e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9987, 0.0013], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0295, 0.9705], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2343, 0.7657], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4235, 0.5765], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4340, 0.5660], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0928, 0.9072], device='cuda:0')
Training Output torch.Size([2]) tensor([2.7321e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0066, 0.9934], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3028, 0.6972], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.4346e-05, 9.9996e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.5100e-04, 9.9925e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.6430e-04, 9.9924e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0445, 0.9555], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1190, 0.8810], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9514, 0.0486], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 2.4300e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1400, 0.8600], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1938, 0.8062], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1290, 0.8710], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9945e-01, 5.5386e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9769, 0.0231], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9989, 0.0011], device='cuda:0')
Training Output torch.Size([2]) tensor([9.0573e-04, 9.9909e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9276, 0.0724], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0737, 0.9263], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0319, 0.9681], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9124, 0.0876], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9958e-01, 4.1813e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([4.4945e-04, 9.9955e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.0728e-04, 9.9949e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0041, 0.9959], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8839, 0.1161], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9994e-01, 5.9674e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([3.2567e-04, 9.9967e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.1562e-05, 9.9992e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.6729e-04, 9.9923e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0124, 0.9876], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0387, 0.9613], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0043, 0.9957], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 8.2506e-07], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 26, Training ones: 69 / 79
outputs torch.Size([24]) tensor([0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.6331, 0.3669], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9507, 0.0493], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1162, 0.8838], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4335, 0.5665], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9991e-01, 9.2421e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2307, 0.7693], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0441, 0.9559], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.1821e-04, 9.9988e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8595, 0.1405], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1073, 0.8927], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5167, 0.4833], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0049, 0.9951], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0621, 0.9379], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0047, 0.9953], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0108, 0.9892], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9990e-01, 1.0432e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9008, 0.0992], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9986e-01, 1.3873e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0074, 0.9926], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3394, 0.6606], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6028, 0.3972], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0036, 0.9964], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0561, 0.9439], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1698, 0.8302], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 58.333% (loss: 1.668) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0266, 0.9734], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1265, 0.8735], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 9, Training ones: 16 / 17
INFO:root:[  112] train: 90.000% test: 54.167%
INFO:root:Accuracy: 0.88571, Precision: 0.86076, Recall: 0.98551, F1: 0.91892
INFO:root:Val Accuracy: 0.57692, Precision: 0.64706, Recall: 0.68750, F1: 0.66667
INFO:root:F1: 0.66667 did not improve from 0.800000011920929
INFO:root:Epoch 113
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.4770e-04, 9.9955e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9952, 0.0048], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0043, 0.9957], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0121, 0.9879], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0209, 0.9791], device='cuda:0')
Training Output torch.Size([2]) tensor([6.6152e-04, 9.9934e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0134, 0.9866], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0066, 0.9934], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1037, 0.8963], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0378, 0.9622], device='cuda:0')
Training Output torch.Size([2]) tensor([4.0369e-04, 9.9960e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.4682e-05, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0734, 0.9266], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0519, 0.9481], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9974e-01, 2.5865e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([6.4139e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0437, 0.9563], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9997e-01, 2.9657e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([7.3075e-04, 9.9927e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0048, 0.9952], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9850, 0.0150], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0094, 0.9906], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0229, 0.9771], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1406, 0.8594], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.025) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3420, 0.6580], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0205, 0.9795], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9954, 0.0046], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9483, 0.0517], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9915, 0.0085], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9976, 0.0024], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8871, 0.1129], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0090, 0.9910], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0222, 0.9778], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Training Output torch.Size([2]) tensor([6.1183e-04, 9.9939e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0066, 0.9934], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9990e-01, 1.0091e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([8.7618e-04, 9.9912e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0485, 0.9515], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9907, 0.0093], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2970, 0.7030], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9157, 0.0843], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0065, 0.9935], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0096, 0.9904], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0671, 0.9329], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0336, 0.9664], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0283, 0.9717], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9838, 0.0162], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0263, 0.9737], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4937, 0.5063], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0831, 0.9169], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8490, 0.1510], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3198, 0.6802], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0168, 0.9832], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1487, 0.8513], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4997, 0.5003], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9859, 0.0141], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0742, 0.9258], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8250, 0.1750], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3180, 0.6820], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0635, 0.9365], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9851, 0.0149], device='cuda:0')
Training Output torch.Size([2]) tensor([2.2255e-04, 9.9978e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0313, 0.9687], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9004, 0.0996], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9988, 0.0012], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0038, 0.9962], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([4.4952e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([5.1527e-04, 9.9948e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0461, 0.9539], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0654, 0.9346], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9984, 0.0016], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9995e-01, 5.2049e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0059, 0.9941], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0042, 0.9958], device='cuda:0')
Training Output torch.Size([2]) tensor([4.2223e-04, 9.9958e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0191, 0.9809], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0039, 0.9961], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9991e-01, 8.9578e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9946e-01, 5.4421e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9963e-01, 3.6902e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0123, 0.9877], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9357, 0.0643], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0079, 0.9921], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9904, 0.0096], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9978e-01, 2.1824e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0231, 0.9769], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0135, 0.9865], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5699, 0.4301], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 1.3368e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0038, 0.9962], device='cuda:0')
Training Output torch.Size([2]) tensor([1.7537e-04, 9.9982e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.0718e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0302, 0.9698], device='cuda:0')
Training Output torch.Size([2]) tensor([3.4939e-04, 9.9965e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 2.0304e-05], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 30, Training ones: 69 / 75
outputs torch.Size([24]) tensor([0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.8377, 0.1623], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9733, 0.0267], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1405, 0.8595], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5297, 0.4703], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9986, 0.0014], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3241, 0.6759], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0443, 0.9557], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.6734e-04, 9.9983e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9145, 0.0855], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1505, 0.8495], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7300, 0.2700], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0067, 0.9933], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0663, 0.9337], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0056, 0.9944], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0491, 0.9509], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9996e-01, 3.5634e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9580, 0.0420], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9994e-01, 6.4020e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0078, 0.9922], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4194, 0.5806], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6444, 0.3556], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0038, 0.9962], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0517, 0.9483], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1992, 0.8008], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 62.500% (loss: 1.815) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0302, 0.9698], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1379, 0.8621], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 10, Training ones: 16 / 16
INFO:root:[  113] train: 90.000% test: 56.250%
INFO:root:Accuracy: 0.88571, Precision: 0.88000, Recall: 0.95652, F1: 0.91667
INFO:root:Val Accuracy: 0.61538, Precision: 0.68750, Recall: 0.68750, F1: 0.68750
INFO:root:F1: 0.68750 did not improve from 0.800000011920929
INFO:root:Epoch 114
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.2507e-04, 9.9927e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9984e-01, 1.6346e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0173, 0.9827], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0532, 0.9468], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3166, 0.6834], device='cuda:0')
Training Output torch.Size([2]) tensor([2.3782e-04, 9.9976e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0358, 0.9642], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0293, 0.9707], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1705, 0.8295], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0157, 0.9843], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0208, 0.9792], device='cuda:0')
Training Output torch.Size([2]) tensor([2.9480e-04, 9.9971e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0479, 0.9521], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0095, 0.9905], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9980, 0.0020], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0596e-04, 9.9989e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0961, 0.9039], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9997e-01, 2.8299e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0087, 0.9913], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0197, 0.9803], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9921e-01, 7.8547e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0175, 0.9825], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1007, 0.8993], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3408, 0.6592], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.061) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1278, 0.8722], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0056, 0.9944], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0059, 0.9941], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.8376e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9996e-01, 3.8080e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9953e-01, 4.6826e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9932, 0.0068], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9975e-01, 2.4681e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0127, 0.9873], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0631, 0.9369], device='cuda:0')
Training Output torch.Size([2]) tensor([4.9554e-04, 9.9950e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.0611e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0025, 0.9975], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0103, 0.9897], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8126, 0.1874], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5457, 0.4543], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9991e-01, 8.8881e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1217, 0.8783], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9986e-01, 1.3658e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0104, 0.9896], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1915, 0.8085], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0367, 0.9633], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7405, 0.2595], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2592, 0.7408], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8331, 0.1669], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5835, 0.4165], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6717, 0.3283], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0069, 0.9931], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9728, 0.0272], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8716, 0.1284], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0211, 0.9789], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9182, 0.0818], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6415, 0.3585], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0285, 0.9715], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3364, 0.6636], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0582, 0.9418], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0200, 0.9800], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1347, 0.8653], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3744, 0.6256], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0618, 0.9382], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0820, 0.9180], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6135, 0.3865], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9709, 0.0291], device='cuda:0')
Training Output torch.Size([2]) tensor([3.1813e-04, 9.9968e-01], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0238, 0.9762], device='cuda:0')
Training Output torch.Size([2]) tensor([3.5081e-05, 9.9996e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.0927e-04, 9.9949e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0132, 0.9868], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5009, 0.4991], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9996e-01, 3.7784e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9989, 0.0011], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0685, 0.9315], device='cuda:0')
Training Output torch.Size([2]) tensor([5.2966e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0317, 0.9683], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0167, 0.9833], device='cuda:0')
Training Output torch.Size([2]) tensor([8.8997e-04, 9.9911e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9649, 0.0351], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9987, 0.0013], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9939, 0.0061], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0067, 0.9933], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9187, 0.0813], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0649, 0.9351], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0489, 0.9511], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9968, 0.0032], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9951, 0.0049], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1027, 0.8973], device='cuda:0')
Training Output torch.Size([2]) tensor([3.6615e-04, 9.9963e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4125, 0.5875], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8733, 0.1267], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9997e-01, 2.5170e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1646, 0.8354], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0071, 0.9929], device='cuda:0')
Training Output torch.Size([2]) tensor([9.2900e-04, 9.9907e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.8823e-04, 9.9961e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0575, 0.9425], device='cuda:0')
Training Output torch.Size([2]) tensor([2.3782e-04, 9.9976e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9997e-01, 3.3344e-05], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 35, Training ones: 69 / 70
outputs torch.Size([24]) tensor([0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5383, 0.4617], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8531, 0.1469], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0437, 0.9563], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2169, 0.7831], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9244, 0.0756], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1347, 0.8653], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0173, 0.9827], device='cuda:0')
Validation Output torch.Size([2]) tensor([6.5028e-05, 9.9993e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7521, 0.2479], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0349, 0.9651], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4193, 0.5807], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0226, 0.9774], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0184, 0.9816], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9994e-01, 6.3028e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8225, 0.1775], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9983e-01, 1.6701e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0028, 0.9972], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2146, 0.7854], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2784, 0.7216], device='cuda:0')
Validation Output torch.Size([2]) tensor([7.3936e-04, 9.9926e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0133, 0.9867], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0577, 0.9423], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 50.000% (loss: 1.845) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0101, 0.9899], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0533, 0.9467], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 7, Training ones: 16 / 19
INFO:root:[  114] train: 89.167% test: 50.000%
INFO:root:Accuracy: 0.87619, Precision: 0.90000, Recall: 0.91304, F1: 0.90647
INFO:root:Val Accuracy: 0.50000, Precision: 0.57895, Recall: 0.68750, F1: 0.62857
INFO:root:F1: 0.62857 did not improve from 0.800000011920929
INFO:root:Epoch 115
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.6221e-04, 9.9974e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9978, 0.0022], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0336, 0.9664], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0581, 0.9419], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0025, 0.9975], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0036, 0.9964], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0040, 0.9960], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0030, 0.9970], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0069, 0.9931], device='cuda:0')
Training Output torch.Size([2]) tensor([4.2647e-05, 9.9996e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.2893e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0081, 0.9919], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0096, 0.9904], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7723, 0.2277], device='cuda:0')
Training Output torch.Size([2]) tensor([3.9666e-04, 9.9960e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.6429e-04, 9.9914e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9551, 0.0449], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0065, 0.9935], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0349, 0.9651], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9980e-01, 1.9717e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0153, 0.9847], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0074, 0.9926], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.021) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.8477e-04, 9.9912e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.5100e-04, 9.9925e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.3737e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9997e-01, 3.1080e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9909e-01, 9.1105e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5876, 0.4124], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1793, 0.8207], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9734, 0.0266], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0574, 0.9426], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0038, 0.9962], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0038, 0.9962], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Output torch.Size([2]) tensor([1.2434e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([6.8250e-04, 9.9932e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9996e-01, 3.8983e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([4.7378e-04, 9.9953e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1051, 0.8949], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9747, 0.0253], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0344, 0.9656], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9992e-01, 7.5139e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0126, 0.9874], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1461, 0.8539], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9914, 0.0086], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9561, 0.0439], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9678, 0.0322], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0025, 0.9975], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0110, 0.9890], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4935, 0.5065], device='cuda:0')
Training Output torch.Size([2]) tensor([9.1640e-04, 9.9908e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0169, 0.9831], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3342, 0.6658], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2756, 0.7244], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0178, 0.9822], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2608, 0.7392], device='cuda:0')
Training Output torch.Size([2]) tensor([9.3510e-05, 9.9991e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8915, 0.1085], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0158, 0.9842], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0078, 0.9922], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0300, 0.9700], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2667, 0.7333], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0191, 0.9809], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.9942e-04, 9.9950e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.5742e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0028, 0.9972], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0036, 0.9964], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3614, 0.6386], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9994e-01, 6.0142e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9948e-01, 5.2134e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0040, 0.9960], device='cuda:0')
Training Output torch.Size([2]) tensor([3.3085e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5813, 0.4187], device='cuda:0')
Training Output torch.Size([2]) tensor([8.5090e-04, 9.9915e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0432e-04, 9.9990e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9929e-01, 7.1245e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 7.4113e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9987e-01, 1.2731e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([2.9137e-04, 9.9971e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9854, 0.0146], device='cuda:0')
Training Output torch.Size([2]) tensor([6.9054e-04, 9.9931e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0717, 0.9283], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9728, 0.0272], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9981, 0.0019], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0058, 0.9942], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0253, 0.9747], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0247, 0.9753], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9976e-01, 2.4110e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9992e-01, 8.4480e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Training Output torch.Size([2]) tensor([1.5089e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.4870e-04, 9.9965e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.8633e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.5386e-04, 9.9945e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0040, 0.9960], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 6.7867e-07], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 27, Training ones: 69 / 78
outputs torch.Size([24]) tensor([0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.6084, 0.3916], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8678, 0.1322], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0317, 0.9683], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2261, 0.7739], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9784, 0.0216], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1127, 0.8873], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0130, 0.9870], device='cuda:0')
Validation Output torch.Size([2]) tensor([4.2151e-05, 9.9996e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7204, 0.2796], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0234, 0.9766], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3671, 0.6329], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0160, 0.9840], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0115, 0.9885], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9996e-01, 3.5081e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8598, 0.1402], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9989e-01, 1.0721e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0020, 0.9980], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1806, 0.8194], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2327, 0.7673], device='cuda:0')
Validation Output torch.Size([2]) tensor([4.3990e-04, 9.9956e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0084, 0.9916], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0458, 0.9542], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 50.000% (loss: 1.977) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0073, 0.9927], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0392, 0.9608], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 7, Training ones: 16 / 19
INFO:root:[  115] train: 90.833% test: 50.000%
INFO:root:Accuracy: 0.89524, Precision: 0.87179, Recall: 0.98551, F1: 0.92517
INFO:root:Val Accuracy: 0.50000, Precision: 0.57895, Recall: 0.68750, F1: 0.62857
INFO:root:F1: 0.62857 did not improve from 0.800000011920929
INFO:root:Epoch 116
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.4464e-04, 9.9966e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9995e-01, 5.1846e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0105, 0.9895], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([3.7784e-05, 9.9996e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0040, 0.9960], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2234, 0.7766], device='cuda:0')
Training Output torch.Size([2]) tensor([2.5217e-04, 9.9975e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Training Output torch.Size([2]) tensor([4.4596e-04, 9.9955e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.2421e-05, 9.9991e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([8.1197e-04, 9.9919e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9809, 0.0191], device='cuda:0')
Training Output torch.Size([2]) tensor([1.5751e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0031, 0.9969], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9995e-01, 5.0055e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([3.3798e-04, 9.9966e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9911e-01, 8.8650e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([2.8854e-04, 9.9971e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0428, 0.9572], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.015) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0144, 0.9856], device='cuda:0')
Training Output torch.Size([2]) tensor([2.0106e-04, 9.9980e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0033, 0.9967], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 1.5507e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9988, 0.0012], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9407, 0.0593], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2018, 0.7982], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9964e-01, 3.5767e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([2.8131e-04, 9.9972e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0158, 0.9842], device='cuda:0')
Training Output torch.Size([2]) tensor([8.1244e-05, 9.9992e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0637e-04, 9.9989e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.0334e-04, 9.9950e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0148, 0.9852], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9986e-01, 1.4010e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0067, 0.9933], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0369, 0.9631], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7046, 0.2954], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0349, 0.9651], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9929, 0.0071], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0210, 0.9790], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0073, 0.9927], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0418, 0.9582], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0543, 0.9457], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1403, 0.8597], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7806, 0.2194], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0510, 0.9490], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1111, 0.8889], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0789, 0.9211], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0512, 0.9488], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9982, 0.0018], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0129, 0.9871], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3541, 0.6459], device='cuda:0')
Training Output torch.Size([2]) tensor([2.1153e-04, 9.9979e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0159, 0.9841], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5297, 0.4703], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([1.5598e-04, 9.9984e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1484, 0.8516], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0028, 0.9972], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0215, 0.9785], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0374, 0.9626], device='cuda:0')
Training Output torch.Size([2]) tensor([9.3876e-05, 9.9991e-01], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0953e-05, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.2893e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0113, 0.9887], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0444, 0.9556], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9961e-01, 3.9358e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9990, 0.0010], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0224, 0.9776], device='cuda:0')
Training Output torch.Size([2]) tensor([3.6543e-04, 9.9963e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2409, 0.7591], device='cuda:0')
Training Output torch.Size([2]) tensor([1.9336e-04, 9.9981e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0086, 0.9914], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9933e-01, 6.6800e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9989e-01, 1.1368e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9885, 0.0115], device='cuda:0')
Training Output torch.Size([2]) tensor([4.5045e-05, 9.9995e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9941e-01, 5.8612e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([1.6636e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0135, 0.9865], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9976, 0.0024], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9902e-01, 9.7735e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0156, 0.9844], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0514e-04, 9.9989e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.3140e-04, 9.9957e-01], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9905e-01, 9.4731e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9853, 0.0147], device='cuda:0')
Training Output torch.Size([2]) tensor([2.9023e-04, 9.9971e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.8518e-04, 9.9971e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0085, 0.9915], device='cuda:0')
Training Output torch.Size([2]) tensor([3.1875e-04, 9.9968e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1961, 0.8039], device='cuda:0')
Training Output torch.Size([2]) tensor([3.5634e-05, 9.9996e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9971, 0.0029], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 25, Training ones: 69 / 80
outputs torch.Size([24]) tensor([0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.8858, 0.1142], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9663, 0.0337], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0514, 0.9486], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4236, 0.5764], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9969e-01, 3.1137e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1962, 0.8038], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0176, 0.9824], device='cuda:0')
Validation Output torch.Size([2]) tensor([6.0142e-05, 9.9994e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8563, 0.1437], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0405, 0.9595], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6162, 0.3838], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0237, 0.9763], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0234, 0.9766], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9999e-01, 9.5535e-06], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9668, 0.0332], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9997e-01, 2.8410e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0027, 0.9973], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2543, 0.7457], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3572, 0.6428], device='cuda:0')
Validation Output torch.Size([2]) tensor([7.3075e-04, 9.9927e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0089, 0.9911], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0639, 0.9361], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 54.167% (loss: 2.138) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0112, 0.9888], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0516, 0.9484], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 8, Training ones: 16 / 18
INFO:root:[  116] train: 90.833% test: 52.083%
INFO:root:Accuracy: 0.89524, Precision: 0.86250, Recall: 1.00000, F1: 0.92617
INFO:root:Val Accuracy: 0.53846, Precision: 0.61111, Recall: 0.68750, F1: 0.64706
INFO:root:F1: 0.64706 did not improve from 0.800000011920929
INFO:root:Epoch 117
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.2567e-04, 9.9967e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9995e-01, 5.2457e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0062, 0.9938], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0309, 0.9691], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0852, 0.9148], device='cuda:0')
Training Output torch.Size([2]) tensor([3.2758e-04, 9.9967e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0078, 0.9922], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0596, 0.9404], device='cuda:0')
Training Output torch.Size([2]) tensor([3.3798e-04, 9.9966e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0114, 0.9886], device='cuda:0')
Training Output torch.Size([2]) tensor([6.4775e-05, 9.9994e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.6955e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0073, 0.9927], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 4.5304e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([5.0541e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.3504e-04, 9.9926e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9975e-01, 2.5070e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0023, 0.9977], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0309, 0.9691], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9993e-01, 7.0038e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1609, 0.8391], device='cuda:0')
Training Output torch.Size([2]) tensor([5.0843e-05, 9.9995e-01], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.018) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Output torch.Size([2]) tensor([1.4710e-04, 9.9985e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3222, 0.6778], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 7.2114e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7817, 0.2183], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9997e-01, 2.9773e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9984e-01, 1.6283e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9969e-01, 3.0774e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0058, 0.9942], device='cuda:0')
Training Output torch.Size([2]) tensor([9.1998e-04, 9.9908e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0261, 0.9739], device='cuda:0')
Training Output torch.Size([2]) tensor([9.3264e-04, 9.9907e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.4206e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0084, 0.9916], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0058, 0.9942], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6623, 0.3377], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0506, 0.9494], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9361, 0.0639], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0280, 0.9720], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 5.9319e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0025, 0.9975], device='cuda:0')
Training Output torch.Size([2]) tensor([6.9595e-04, 9.9930e-01], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0498, 0.9502], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0025, 0.9975], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1849, 0.8151], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9772, 0.0228], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0323, 0.9677], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0034, 0.9966], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0983, 0.9017], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3063, 0.6937], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5155, 0.4845], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0225, 0.9775], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0820, 0.9180], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9771, 0.0229], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0059, 0.9941], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3334, 0.6666], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0089, 0.9911], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0193, 0.9807], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0265, 0.9735], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0573, 0.9427], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0051, 0.9949], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0508, 0.9492], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0223, 0.9777], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0194, 0.9806], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([3.7046e-04, 9.9963e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.2342e-04, 9.9978e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0111, 0.9889], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1798, 0.8202], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9805, 0.0195], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 7.3536e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0292, 0.9708], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0056, 0.9944], device='cuda:0')
Training Output torch.Size([2]) tensor([3.7556e-04, 9.9962e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9280, 0.0720], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9997e-01, 2.9197e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9990e-01, 9.9541e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0168, 0.9832], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9989, 0.0011], device='cuda:0')
Training Output torch.Size([2]) tensor([2.8131e-04, 9.9972e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0285, 0.9715], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9970e-01, 2.9596e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9985e-01, 1.4971e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0045, 0.9955], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9983, 0.0017], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9994e-01, 6.3028e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0046, 0.9954], device='cuda:0')
Training Output torch.Size([2]) tensor([7.8893e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.4426e-04, 9.9986e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.2440e-04, 9.9948e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0020, 0.9980], device='cuda:0')
Training Output torch.Size([2]) tensor([4.6474e-05, 9.9995e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9987e-01, 1.2881e-04], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 26, Training ones: 69 / 79
outputs torch.Size([24]) tensor([0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9630, 0.0370], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9936, 0.0064], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0624, 0.9376], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5441, 0.4559], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9989, 0.0011], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3682, 0.6318], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0190, 0.9810], device='cuda:0')
Validation Output torch.Size([2]) tensor([8.0612e-05, 9.9992e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8755, 0.1245], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0462, 0.9538], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7747, 0.2253], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0281, 0.9719], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0060, 0.9940], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0000e+00, 2.8351e-06], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9910, 0.0090], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9999e-01, 9.8568e-06], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2593, 0.7407], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4087, 0.5913], device='cuda:0')
Validation Output torch.Size([2]) tensor([8.3772e-04, 9.9916e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0094, 0.9906], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0717, 0.9283], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 58.333% (loss: 2.375) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0144, 0.9856], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0538, 0.9462], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 9, Training ones: 16 / 17
INFO:root:[  117] train: 91.667% test: 54.167%
INFO:root:Accuracy: 0.90476, Precision: 0.87342, Recall: 1.00000, F1: 0.93243
INFO:root:Val Accuracy: 0.57692, Precision: 0.64706, Recall: 0.68750, F1: 0.66667
INFO:root:F1: 0.66667 did not improve from 0.800000011920929
INFO:root:Epoch 118
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.5414e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9996e-01, 3.6909e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0286, 0.9714], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0185, 0.9815], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0441, 0.9559], device='cuda:0')
Training Output torch.Size([2]) tensor([4.9665e-05, 9.9995e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0053, 0.9947], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0095, 0.9905], device='cuda:0')
Training Output torch.Size([2]) tensor([8.2314e-04, 9.9918e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0366, 0.9634], device='cuda:0')
Training Output torch.Size([2]) tensor([2.8910e-04, 9.9971e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.6070e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0119, 0.9881], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9986e-01, 1.3605e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([1.5326e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0063, 0.9937], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3522, 0.6478], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0034, 0.9966], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0250, 0.9750], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8329, 0.1671], device='cuda:0')
Training Output torch.Size([2]) tensor([7.6133e-04, 9.9924e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0330, 0.9670], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0192, 0.9808], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 95.833% (loss: 0.062) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0116, 0.9884], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1320, 0.8680], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0169, 0.9831], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9867, 0.0133], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9907, 0.0093], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9976e-01, 2.4441e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9954e-01, 4.5653e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 1.5446e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0042, 0.9958], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0374, 0.9626], device='cuda:0')
Training Output torch.Size([2]) tensor([5.4334e-05, 9.9995e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.2632e-04, 9.9987e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0130, 0.9870], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0053, 0.9947], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 1.8271e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1250, 0.8750], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9990e-01, 9.6479e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2236, 0.7764], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9971, 0.0029], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0074, 0.9926], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0605, 0.9395], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0582, 0.9418], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9784, 0.0216], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6172, 0.3828], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9067, 0.0933], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2618, 0.7382], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0577, 0.9423], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1055, 0.8945], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1348, 0.8652], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9983, 0.0017], device='cuda:0')
Training Output torch.Size([2]) tensor([7.8547e-04, 9.9921e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 3.8751e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([7.6921e-05, 9.9992e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0880, 0.9120], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0127, 0.9873], device='cuda:0')
Training Output torch.Size([2]) tensor([6.1783e-04, 9.9938e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0103, 0.9897], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1081, 0.8919], device='cuda:0')
Training Output torch.Size([2]) tensor([2.7969e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0086, 0.9914], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0034, 0.9966], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1566, 0.8434], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8690, 0.1310], device='cuda:0')
Training Output torch.Size([2]) tensor([6.0001e-04, 9.9940e-01], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Output torch.Size([2]) tensor([1.8378e-04, 9.9982e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.8189e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0156, 0.9844], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0107, 0.9893], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 6.8276e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 4.3477e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3316e-05, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.5968e-04, 9.9984e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.8156e-04, 9.9942e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.8149e-05, 9.9993e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 1.7918e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 5.5826e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 8.3981e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0071, 0.9929], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9985e-01, 1.5118e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9925e-01, 7.4516e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 1.4739e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9994e-01, 6.3522e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0038, 0.9962], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0147, 0.9853], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9992e-01, 7.9673e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.2653e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0452e-05, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.4884e-04, 9.9985e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2203, 0.7797], device='cuda:0')
Training Output torch.Size([2]) tensor([4.8881e-04, 9.9951e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0385, 0.9615], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 28, Training ones: 69 / 77
outputs torch.Size([24]) tensor([0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9758, 0.0242], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9974, 0.0026], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0819, 0.9181], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6651, 0.3349], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9978, 0.0022], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4351, 0.5649], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0216, 0.9784], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0071e-04, 9.9990e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8844, 0.1156], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0531, 0.9469], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8272, 0.1728], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0329, 0.9671], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0041, 0.9959], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.0000e+00, 1.7881e-06], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9953, 0.0047], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9999e-01, 6.5660e-06], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0043, 0.9957], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2878, 0.7122], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4870, 0.5130], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.7165e-04, 9.9903e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0135, 0.9865], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0955, 0.9045], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 58.333% (loss: 2.452) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0187, 0.9813], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0620, 0.9380], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 9, Training ones: 16 / 17
INFO:root:[  118] train: 88.611% test: 54.167%
INFO:root:Accuracy: 0.88571, Precision: 0.87013, Recall: 0.97101, F1: 0.91781
INFO:root:Val Accuracy: 0.57692, Precision: 0.64706, Recall: 0.68750, F1: 0.66667
INFO:root:F1: 0.66667 did not improve from 0.800000011920929
INFO:root:Epoch 119
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.5773e-05, 9.9996e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9944e-01, 5.5711e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0219, 0.9781], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6696, 0.3304], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0916, 0.9084], device='cuda:0')
Training Output torch.Size([2]) tensor([1.2632e-04, 9.9987e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0027, 0.9973], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0147, 0.9853], device='cuda:0')
Training Output torch.Size([2]) tensor([7.1663e-04, 9.9928e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0061, 0.9939], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0027, 0.9973], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 2.3645e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([3.1442e-04, 9.9969e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0171, 0.9829], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 5.5943e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([4.2814e-05, 9.9996e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0219, 0.9781], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 2.0225e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0124, 0.9876], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0431, 0.9569], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4792, 0.5208], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 95.833% (loss: 0.084) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.6597e-04, 9.9903e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1516, 0.8484], device='cuda:0')
Training Output torch.Size([2]) tensor([4.4596e-04, 9.9955e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0116, 0.9884], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9992e-01, 7.7524e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 4.0843e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9967, 0.0033], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9666, 0.0334], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9992e-01, 8.2202e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0028, 0.9972], device='cuda:0')
Training Output torch.Size([2]) tensor([5.7479e-04, 9.9943e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0046, 0.9954], device='cuda:0')
Training Output torch.Size([2]) tensor([3.5218e-05, 9.9996e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.8573e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0100, 0.9900], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.4035e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([5.9767e-04, 9.9940e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0103, 0.9897], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9942, 0.0058], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1890, 0.8110], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9841, 0.0159], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0755, 0.9245], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0058, 0.9942], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1253, 0.8747], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0152, 0.9848], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9800, 0.0200], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9966e-01, 3.3996e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0715, 0.9285], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2790, 0.7210], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0023, 0.9977], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0867, 0.9133], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9836, 0.0164], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0049, 0.9951], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0659, 0.9341], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9636, 0.0364], device='cuda:0')
Training Output torch.Size([2]) tensor([9.8309e-04, 9.9902e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0182, 0.9818], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9948, 0.0052], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0065, 0.9935], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2161, 0.7839], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0066, 0.9934], device='cuda:0')
Training Output torch.Size([2]) tensor([2.6843e-04, 9.9973e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0597, 0.9403], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1056, 0.8944], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1729, 0.8271], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0202, 0.9798], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0183, 0.9817], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.0723e-04, 9.9919e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.5416e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([5.6058e-05, 9.9994e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0126, 0.9874], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1184, 0.8816], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9941e-01, 5.8956e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 9.1160e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0309, 0.9691], device='cuda:0')
Training Output torch.Size([2]) tensor([1.2339e-04, 9.9988e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Output torch.Size([2]) tensor([8.5757e-04, 9.9914e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.5021e-04, 9.9975e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1010, 0.8990], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 1.3525e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 2.4345e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0083, 0.9917], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9980, 0.0020], device='cuda:0')
Training Output torch.Size([2]) tensor([6.4747e-04, 9.9935e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0343, 0.9657], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9930e-01, 7.0141e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 1.2756e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1691, 0.8309], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0200, 0.9800], device='cuda:0')
Training Output torch.Size([2]) tensor([5.6478e-04, 9.9944e-01], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9987e-01, 1.3058e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9986e-01, 1.3552e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([4.8415e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0195, 0.9805], device='cuda:0')
Training Output torch.Size([2]) tensor([8.0135e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.1565e-04, 9.9968e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.1977e-04, 9.9958e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 1.0290e-05], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 28, Training ones: 69 / 77
outputs torch.Size([24]) tensor([0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.8354, 0.1646], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9887, 0.0113], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0671, 0.9329], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4642, 0.5358], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9938e-01, 6.1783e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2205, 0.7795], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0207, 0.9793], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.2061e-05, 9.9991e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7710, 0.2290], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0334, 0.9666], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5724, 0.4276], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0023, 0.9977], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0302, 0.9698], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0027, 0.9973], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0029, 0.9971], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9999e-01, 6.6175e-06], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9779, 0.0221], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9998e-01, 1.9989e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0047, 0.9953], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2031, 0.7969], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3537, 0.6463], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0125, 0.9875], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0543, 0.9457], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 54.167% (loss: 2.191) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0167, 0.9833], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0547, 0.9453], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 8, Training ones: 16 / 18
INFO:root:[  119] train: 91.667% test: 52.083%
INFO:root:Accuracy: 0.90476, Precision: 0.88312, Recall: 0.98551, F1: 0.93151
INFO:root:Val Accuracy: 0.53846, Precision: 0.61111, Recall: 0.68750, F1: 0.64706
INFO:root:F1: 0.64706 did not improve from 0.800000011920929
INFO:root:Epoch 120
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.8291e-05, 9.9994e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7980, 0.2020], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0126, 0.9874], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5141, 0.4859], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0152, 0.9848], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0349, 0.9651], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0279, 0.9721], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0116, 0.9884], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0086, 0.9914], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0291, 0.9709], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1606, 0.8394], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0041, 0.9959], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0109, 0.9891], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9889, 0.0111], device='cuda:0')
Training Output torch.Size([2]) tensor([7.9362e-05, 9.9992e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 2.4017e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([6.5637e-04, 9.9934e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0457, 0.9543], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0660, 0.9340], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0073, 0.9927], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0193, 0.9807], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 91.667% (loss: 0.170) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0596e-04, 9.9989e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0123, 0.9877], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9975e-01, 2.5070e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9982e-01, 1.8023e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9903, 0.0097], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9967e-01, 3.2951e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9823, 0.0177], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0538, 0.9462], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0074, 0.9926], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0472, 0.9528], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0184, 0.9816], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3925e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0271, 0.9729], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0038, 0.9962], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9991e-01, 9.3510e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([5.9302e-04, 9.9941e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0208, 0.9792], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9980, 0.0020], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0283, 0.9717], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9995e-01, 5.3491e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0107, 0.9893], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0076, 0.9924], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0283, 0.9717], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1455, 0.8545], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9895, 0.0105], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9982, 0.0018], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0133, 0.9867], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1042, 0.8958], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0536, 0.9464], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1353, 0.8647], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6233, 0.3767], device='cuda:0')
Training Output torch.Size([2]) tensor([2.8857e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0060, 0.9940], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9980e-01, 2.0145e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([4.7656e-04, 9.9952e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2592, 0.7408], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0147, 0.9853], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0476, 0.9524], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0048, 0.9952], device='cuda:0')
Training Output torch.Size([2]) tensor([2.9480e-04, 9.9971e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0028, 0.9972], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0097, 0.9903], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0413, 0.9587], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0143, 0.9857], device='cuda:0')
Training Output torch.Size([2]) tensor([2.3597e-04, 9.9976e-01], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.2631e-04, 9.9967e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0043, 0.9957], device='cuda:0')
Training Output torch.Size([2]) tensor([9.7926e-04, 9.9902e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1079, 0.8921], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0578, 0.9422], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 2.4111e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.9870e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0231, 0.9769], device='cuda:0')
Training Output torch.Size([2]) tensor([1.9036e-04, 9.9981e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.5000e-04, 9.9935e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0093, 0.9907], device='cuda:0')
Training Output torch.Size([2]) tensor([4.5742e-04, 9.9954e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 2.9023e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.4506e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9979, 0.0021], device='cuda:0')
Training Output torch.Size([2]) tensor([4.3648e-04, 9.9956e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9555, 0.0445], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3447e-04, 9.9987e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0525, 0.9475], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9972, 0.0028], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3387, 0.6613], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([3.9051e-04, 9.9961e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0031, 0.9969], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9172, 0.0828], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.5294e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Training Output torch.Size([2]) tensor([6.2409e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0317, 0.9683], device='cuda:0')
Training Output torch.Size([2]) tensor([2.2253e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0343, 0.9657], device='cuda:0')
Training Output torch.Size([2]) tensor([9.4983e-05, 9.9990e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 3.5283e-06], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 26, Training ones: 69 / 79
outputs torch.Size([24]) tensor([0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7265, 0.2735], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9875, 0.0125], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0985, 0.9015], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4670, 0.5330], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9973, 0.0027], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2203, 0.7797], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0301, 0.9699], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.4370e-04, 9.9986e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8030, 0.1970], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0404, 0.9596], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5618, 0.4382], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0034, 0.9966], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0448, 0.9552], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0043, 0.9957], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0070, 0.9930], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9999e-01, 8.6309e-06], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9702, 0.0298], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9998e-01, 2.3553e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0083, 0.9917], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2494, 0.7506], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4057, 0.5943], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0167, 0.9833], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0461, 0.9539], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 54.167% (loss: 2.073) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0245, 0.9755], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0711, 0.9289], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 8, Training ones: 16 / 18
INFO:root:[  120] train: 90.000% test: 52.083%
INFO:root:Accuracy: 0.88571, Precision: 0.86076, Recall: 0.98551, F1: 0.91892
INFO:root:Val Accuracy: 0.53846, Precision: 0.61111, Recall: 0.68750, F1: 0.64706
INFO:root:F1: 0.64706 did not improve from 0.800000011920929
INFO:root:Epoch 121
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.0212e-04, 9.9960e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9942e-01, 5.7816e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1358, 0.8642], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0273, 0.9727], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0241, 0.9759], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0212, 0.9788], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0278, 0.9722], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0585, 0.9415], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0459, 0.9541], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Training Output torch.Size([2]) tensor([5.0432e-04, 9.9950e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0212, 0.9788], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9855e-04, 9.9900e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9986, 0.0014], device='cuda:0')
Training Output torch.Size([2]) tensor([1.7606e-04, 9.9982e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0197, 0.9803], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 2.0948e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6481, 0.3519], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0413, 0.9587], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9969e-01, 3.0834e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0049, 0.9951], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0408, 0.9592], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 95.833% (loss: 0.064) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.6948e-04, 9.9973e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1247, 0.8753], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0082, 0.9918], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 1.1126e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9988e-01, 1.1502e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9558, 0.0442], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9995e-01, 4.9279e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0936, 0.9064], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0190, 0.9810], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0084, 0.9916], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0129, 0.9871], device='cuda:0')
Training Output torch.Size([2]) tensor([9.3510e-05, 9.9991e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3082e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0117, 0.9883], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0211, 0.9789], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9955, 0.0045], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0447, 0.9553], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2032, 0.7968], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9969, 0.0031], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0661, 0.9339], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9876, 0.0124], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1922, 0.8078], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0330, 0.9670], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0280, 0.9720], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1517, 0.8483], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3875, 0.6125], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9915e-01, 8.4759e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0272, 0.9728], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9922, 0.0078], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1422, 0.8578], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0589, 0.9411], device='cuda:0')
Training Output torch.Size([2]) tensor([3.3404e-04, 9.9967e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0499, 0.9501], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9975, 0.0025], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0295, 0.9705], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0137, 0.9863], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0627, 0.9373], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7101, 0.2899], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0111, 0.9889], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0111, 0.9889], device='cuda:0')
Training Output torch.Size([2]) tensor([8.0566e-04, 9.9919e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0846, 0.9154], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1427, 0.8573], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4329, 0.5671], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5393, 0.4607], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0150, 0.9850], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([2.2739e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0048, 0.9952], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0210, 0.9790], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2556, 0.7444], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 2.3139e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 5.0344e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0084, 0.9916], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0397, 0.9603], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1109, 0.8891], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0020, 0.9980], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 2.0986e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9993e-01, 6.8149e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9969, 0.0031], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0186, 0.9814], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9986, 0.0014], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0181, 0.9819], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9981, 0.0019], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9958, 0.0042], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0053, 0.9947], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0820, 0.9180], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9984e-01, 1.5999e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 2.6323e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0054, 0.9946], device='cuda:0')
Training Output torch.Size([2]) tensor([2.6070e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.7719e-04, 9.9932e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0447, 0.9553], device='cuda:0')
Training Output torch.Size([2]) tensor([3.9128e-04, 9.9961e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9937e-01, 6.3248e-04], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 28, Training ones: 69 / 77
outputs torch.Size([24]) tensor([0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7174, 0.2826], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9889, 0.0111], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1120, 0.8880], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4970, 0.5030], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9835, 0.0165], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2210, 0.7790], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0381, 0.9619], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.9110e-04, 9.9981e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8130, 0.1870], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0503, 0.9497], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5997, 0.4003], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0038, 0.9962], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0580, 0.9420], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0054, 0.9946], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0166, 0.9834], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9999e-01, 8.3002e-06], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9657, 0.0343], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9998e-01, 2.4683e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0105, 0.9895], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2909, 0.7091], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4848, 0.5152], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0020, 0.9980], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0159, 0.9841], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0365, 0.9635], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 54.167% (loss: 2.043) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0312, 0.9688], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0997, 0.9003], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 8, Training ones: 16 / 18
INFO:root:[  121] train: 88.333% test: 52.083%
INFO:root:Accuracy: 0.86667, Precision: 0.85714, Recall: 0.95652, F1: 0.90411
INFO:root:Val Accuracy: 0.53846, Precision: 0.61111, Recall: 0.68750, F1: 0.64706
INFO:root:F1: 0.64706 did not improve from 0.800000011920929
INFO:root:Epoch 122
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.6188e-04, 9.9964e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 1.8129e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0151, 0.9849], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0218, 0.9782], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6318, 0.3682], device='cuda:0')
Training Output torch.Size([2]) tensor([2.5316e-04, 9.9975e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0229, 0.9771], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0232, 0.9768], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0190, 0.9810], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0732, 0.9268], device='cuda:0')
Training Output torch.Size([2]) tensor([5.3701e-05, 9.9995e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0105, 0.9895], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0127, 0.9873], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9903e-01, 9.6975e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([4.3830e-05, 9.9996e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6466, 0.3534], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9194, 0.0806], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0652, 0.9348], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0526, 0.9474], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9991e-01, 8.9229e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0148, 0.9852], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0154, 0.9846], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0373, 0.9627], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 91.667% (loss: 0.105) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.5213e-04, 9.9965e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0042, 0.9958], device='cuda:0')
Training Output torch.Size([2]) tensor([1.2196e-04, 9.9988e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0053, 0.9947], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9957, 0.0043], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 5.8400e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9606, 0.0394], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9982, 0.0018], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9951e-01, 4.8786e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9864, 0.0136], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0044, 0.9956], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0063, 0.9937], device='cuda:0')
Training Output torch.Size([2]) tensor([8.0298e-05, 9.9992e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.5283e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0233, 0.9767], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0089, 0.9911], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9996e-01, 4.0854e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0025, 0.9975], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0526, 0.9474], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9715, 0.0285], device='cuda:0')
Training Output torch.Size([2]) tensor([8.5757e-04, 9.9914e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9997e-01, 2.9312e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0185, 0.9815], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0479, 0.9521], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0478, 0.9522], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1217, 0.8783], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9569, 0.0431], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9475, 0.0525], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0330, 0.9670], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8272, 0.1728], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0030, 0.9970], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4050, 0.5950], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3197, 0.6803], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0976, 0.9024], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8926, 0.1074], device='cuda:0')
Training Output torch.Size([2]) tensor([4.3830e-05, 9.9996e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1201, 0.8799], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2585, 0.7415], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0132, 0.9868], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1158, 0.8842], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0563, 0.9437], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0020, 0.9980], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0291, 0.9709], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0039, 0.9961], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3547, 0.6453], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0163, 0.9837], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0054, 0.9946], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0042, 0.9958], device='cuda:0')
Training Output torch.Size([2]) tensor([3.1570e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0071, 0.9929], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0760, 0.9240], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0083, 0.9917], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9206, 0.0794], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9969, 0.0031], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0092, 0.9908], device='cuda:0')
Training Output torch.Size([2]) tensor([5.8291e-05, 9.9994e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0843, 0.9157], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0062, 0.9938], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0055, 0.9945], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9939e-01, 6.1423e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9835, 0.0165], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9965e-01, 3.5350e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0031, 0.9969], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9979e-01, 2.1319e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0330, 0.9670], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9819, 0.0181], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8793, 0.1207], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0123, 0.9877], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0111, 0.9889], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0151, 0.9849], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9989e-01, 1.1148e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9993e-01, 6.6311e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([4.0055e-04, 9.9960e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.0447e-05, 9.9995e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0160, 0.9840], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0035, 0.9965], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0047, 0.9953], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0051, 0.9949], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9511, 0.0489], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 30, Training ones: 69 / 75
outputs torch.Size([24]) tensor([1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4142, 0.5858], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9439, 0.0561], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0581, 0.9419], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3185, 0.6815], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9312, 0.0688], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1182, 0.8818], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0293, 0.9707], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.2982e-04, 9.9987e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6425, 0.3575], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0269, 0.9731], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3396, 0.6604], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0399, 0.9601], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0035, 0.9965], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0499, 0.9501], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9997e-01, 2.6275e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8507, 0.1493], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9991e-01, 8.6147e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0071, 0.9929], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2347, 0.7653], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3714, 0.6286], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0098, 0.9902], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0187, 0.9813], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 54.167% (loss: 1.875) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0205, 0.9795], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0865, 0.9135], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 6, Training ones: 16 / 20
INFO:root:[  122] train: 90.000% test: 52.083%
INFO:root:Accuracy: 0.88571, Precision: 0.88000, Recall: 0.95652, F1: 0.91667
INFO:root:Val Accuracy: 0.53846, Precision: 0.60000, Recall: 0.75000, F1: 0.66667
INFO:root:F1: 0.66667 did not improve from 0.800000011920929
INFO:root:Epoch 123
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.8326e-05, 9.9995e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9996e-01, 4.4346e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0066, 0.9934], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0261, 0.9739], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0215, 0.9785], device='cuda:0')
Training Output torch.Size([2]) tensor([2.5614e-04, 9.9974e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0165, 0.9835], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0281, 0.9719], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0062, 0.9938], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0063, 0.9937], device='cuda:0')
Training Output torch.Size([2]) tensor([4.9177e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0341, 0.9659], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9741, 0.0259], device='cuda:0')
Training Output torch.Size([2]) tensor([8.3823e-05, 9.9992e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0088, 0.9912], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9931e-01, 6.8651e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([4.0212e-04, 9.9960e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0062, 0.9938], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9980e-01, 2.0462e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0094, 0.9906], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2208, 0.7792], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.019) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1303, 0.8697], device='cuda:0')
Training Output torch.Size([2]) tensor([5.3491e-05, 9.9995e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0116, 0.9884], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0041, 0.9959], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.8520e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 5.0344e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0109, 0.9891], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6305, 0.3695], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9977e-01, 2.2649e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0044, 0.9956], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0104, 0.9896], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0060, 0.9940], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0055, 0.9945], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0073, 0.9927], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0051, 0.9949], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0048, 0.9952], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 1.6571e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0035, 0.9965], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1347, 0.8653], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9992e-01, 7.6621e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.5846e-04, 9.9904e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 2.3830e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0096, 0.9904], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0196, 0.9804], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1792, 0.8208], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0129, 0.9871], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9900, 0.0100], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9474, 0.0526], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0474, 0.9526], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9585, 0.0415], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1370, 0.8630], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7223, 0.2777], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8486, 0.1514], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0383, 0.9617], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0413, 0.9587], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1810, 0.8190], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0255, 0.9745], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0033, 0.9967], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9740, 0.0260], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0027, 0.9973], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0109, 0.9891], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0178, 0.9822], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0055, 0.9945], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0182, 0.9818], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1415, 0.8585], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0060, 0.9940], device='cuda:0')
Training Output torch.Size([2]) tensor([6.0235e-04, 9.9940e-01], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0724, 0.9276], device='cuda:0')
Training Output torch.Size([2]) tensor([6.6295e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1502e-04, 9.9988e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0149, 0.9851], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0040, 0.9960], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9981, 0.0019], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9985, 0.0015], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0412, 0.9588], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([6.8384e-04, 9.9932e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0495, 0.9505], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0048, 0.9952], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 1.4009e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 2.2603e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9983, 0.0017], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0061, 0.9939], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9982, 0.0018], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0046, 0.9954], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0337, 0.9663], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9911, 0.0089], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2248, 0.7752], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0264, 0.9736], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0497, 0.9503], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9970e-01, 3.0120e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9990e-01, 9.7998e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0091, 0.9909], device='cuda:0')
Training Output torch.Size([2]) tensor([2.7536e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.1326e-04, 9.9959e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0375, 0.9625], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0104, 0.9896], device='cuda:0')
Training Output torch.Size([2]) tensor([1.9872e-04, 9.9980e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9994e-01, 5.7838e-05], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 27, Training ones: 69 / 78
outputs torch.Size([24]) tensor([1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4766, 0.5234], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9563, 0.0437], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1078, 0.8922], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3658, 0.6342], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9982, 0.0018], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1368, 0.8632], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0348, 0.9652], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.8668e-04, 9.9981e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7705, 0.2295], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0735, 0.9265], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3824, 0.6176], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0051, 0.9949], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0500, 0.9500], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0072, 0.9928], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0600, 0.9400], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9997e-01, 2.9657e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8814, 0.1186], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9992e-01, 8.1562e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0103, 0.9897], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2820, 0.7180], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4322, 0.5678], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0027, 0.9973], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0418, 0.9582], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0615, 0.9385], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 54.167% (loss: 1.794) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0298, 0.9702], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1017, 0.8983], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 6, Training ones: 16 / 20
INFO:root:[  123] train: 90.833% test: 52.083%
INFO:root:Accuracy: 0.89524, Precision: 0.87179, Recall: 0.98551, F1: 0.92517
INFO:root:Val Accuracy: 0.53846, Precision: 0.60000, Recall: 0.75000, F1: 0.66667
INFO:root:F1: 0.66667 did not improve from 0.800000011920929
INFO:root:Epoch 124
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0088, 0.9912], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9414, 0.0586], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0144, 0.9856], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0315, 0.9685], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0375, 0.9625], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1803, 0.8197], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0029, 0.9971], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0106, 0.9894], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0198, 0.9802], device='cuda:0')
Training Output torch.Size([2]) tensor([6.7193e-04, 9.9933e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.4895e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2087, 0.7913], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0100, 0.9900], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9747, 0.0253], device='cuda:0')
Training Output torch.Size([2]) tensor([4.5475e-04, 9.9955e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9968, 0.0032], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0108, 0.9892], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0090, 0.9910], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9539, 0.0461], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0036, 0.9964], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0683, 0.9317], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0123, 0.9877], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.034) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0473, 0.9527], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3765e-04, 9.9986e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.4653e-04, 9.9985e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9962, 0.0038], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9942, 0.0058], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6572, 0.3428], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9982, 0.0018], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9783, 0.0217], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0359, 0.9641], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0264, 0.9736], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0320, 0.9680], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0383, 0.9617], device='cuda:0')
Training Output torch.Size([2]) tensor([8.0252e-04, 9.9920e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0113, 0.9887], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0309, 0.9691], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 1.9298e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([1.9717e-04, 9.9980e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1177, 0.8823], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3039, 0.6961], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0451, 0.9549], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9992e-01, 7.5433e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0481, 0.9519], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0336, 0.9664], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1948, 0.8052], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0817, 0.9183], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9799, 0.0201], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4489, 0.5511], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0257, 0.9743], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9810, 0.0190], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0711, 0.9289], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0503, 0.9497], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3395, 0.6605], device='cuda:0')
Training Output torch.Size([2]) tensor([3.0062e-04, 9.9970e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0060, 0.9940], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0566, 0.9434], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0178, 0.9822], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0065, 0.9935], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0984, 0.9016], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2616, 0.7384], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0340, 0.9660], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0391, 0.9609], device='cuda:0')
Training Output torch.Size([2]) tensor([8.5476e-05, 9.9991e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0236, 0.9764], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0447, 0.9553], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0203, 0.9797], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0262, 0.9738], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0049, 0.9951], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0044, 0.9956], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0169, 0.9831], device='cuda:0')
Training Output torch.Size([2]) tensor([5.2542e-04, 9.9947e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0067, 0.9933], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0246, 0.9754], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9986, 0.0014], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9994e-01, 6.0850e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0158, 0.9842], device='cuda:0')
Training Output torch.Size([2]) tensor([9.1461e-04, 9.9909e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1709, 0.8291], device='cuda:0')
Training Output torch.Size([2]) tensor([5.8841e-04, 9.9941e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0354, 0.9646], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9574, 0.0426], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9977e-01, 2.2738e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9978e-01, 2.1528e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1420, 0.8580], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0081, 0.9919], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0481, 0.9519], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8438, 0.1562], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9950e-01, 4.9747e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0067, 0.9933], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0189, 0.9811], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3586, 0.6414], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9983e-01, 1.6767e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 4.3569e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0463, 0.9537], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1008, 0.8992], device='cuda:0')
Training Output torch.Size([2]) tensor([5.7143e-04, 9.9943e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0069, 0.9931], device='cuda:0')
Training Output torch.Size([2]) tensor([6.2511e-04, 9.9937e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9989e-01, 1.0637e-04], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 23, Training ones: 69 / 82
outputs torch.Size([24]) tensor([0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7342, 0.2658], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9881, 0.0119], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2105, 0.7895], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5322, 0.4678], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9975, 0.0025], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2122, 0.7878], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0489, 0.9511], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.3470e-04, 9.9967e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8981, 0.1019], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1999, 0.8001], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6439, 0.3561], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0113, 0.9887], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0781, 0.9219], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0143, 0.9857], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0363, 0.9637], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9999e-01, 1.3631e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9621, 0.0379], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9996e-01, 3.6054e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0156, 0.9844], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4146, 0.5854], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6031, 0.3969], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0023, 0.9977], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1444, 0.8556], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1683, 0.8317], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 62.500% (loss: 1.879) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0455, 0.9545], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1473, 0.8527], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 10, Training ones: 16 / 16
INFO:root:[  124] train: 89.167% test: 56.250%
INFO:root:Accuracy: 0.87619, Precision: 0.84146, Recall: 1.00000, F1: 0.91391
INFO:root:Val Accuracy: 0.61538, Precision: 0.68750, Recall: 0.68750, F1: 0.68750
INFO:root:F1: 0.68750 did not improve from 0.800000011920929
INFO:root:Epoch 125
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0068, 0.9932], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9957, 0.0043], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0279, 0.9721], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0140, 0.9860], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1368, 0.8632], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1061e-04, 9.9989e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0062, 0.9938], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0598, 0.9402], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0435, 0.9565], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0404, 0.9596], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5385, 0.4615], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([3.7264e-04, 9.9963e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0238, 0.9762], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9982e-01, 1.7953e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0064, 0.9936], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9910e-01, 9.0221e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0289, 0.9711], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1200, 0.8800], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 8.4639e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0528, 0.9472], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7382, 0.2618], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 91.667% (loss: 0.113) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0081, 0.9919], device='cuda:0')
Training Output torch.Size([2]) tensor([8.3283e-04, 9.9917e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0035, 0.9965], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.2679e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 9.1517e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9977, 0.0023], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8245, 0.1755], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9974, 0.0026], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7695, 0.2305], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0242, 0.9758], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0370, 0.9630], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0237, 0.9763], device='cuda:0')
Training Output torch.Size([2]) tensor([3.5146e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0113, 0.9887], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9929e-01, 7.0553e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0053, 0.9947], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0780, 0.9220], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9955e-01, 4.5475e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0150, 0.9850], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9994e-01, 5.6941e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2175, 0.7825], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0850, 0.9150], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0157, 0.9843], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8901, 0.1099], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9955, 0.0045], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4579, 0.5421], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7061, 0.2939], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5037, 0.4963], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1603, 0.8397], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3715, 0.6285], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6941, 0.3059], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0060, 0.9940], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0347, 0.9653], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9996e-01, 3.9752e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0038, 0.9962], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4442, 0.5558], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6045, 0.3955], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0238, 0.9762], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7981, 0.2019], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0306, 0.9694], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0126, 0.9874], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0890, 0.9110], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7250, 0.2750], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9916, 0.0084], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0225, 0.9775], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1331, 0.8669], device='cuda:0')
Training Output torch.Size([2]) tensor([1.4768e-04, 9.9985e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.0765e-04, 9.9959e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0445, 0.9555], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0642, 0.9358], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9996e-01, 3.5913e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9992e-01, 7.9673e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0082, 0.9918], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0417, 0.9583], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6411, 0.3589], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0049, 0.9951], device='cuda:0')
Training Output torch.Size([2]) tensor([7.8089e-04, 9.9922e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9933e-01, 6.7193e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 2.8573e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9985e-01, 1.5326e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2419, 0.7581], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9305, 0.0695], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0049, 0.9951], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0304, 0.9696], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9983e-01, 1.7435e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0124, 0.9876], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0783, 0.9217], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0358, 0.9642], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0129, 0.9871], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9984e-01, 1.5937e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 1.0170e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([7.5688e-04, 9.9924e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.5795e-05, 9.9993e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0056, 0.9944], device='cuda:0')
Training Output torch.Size([2]) tensor([9.2178e-04, 9.9908e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0034, 0.9966], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6004, 0.3996], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 36, Training ones: 69 / 69
outputs torch.Size([24]) tensor([0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.6703, 0.3297], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9796, 0.0204], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1883, 0.8117], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4731, 0.5269], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9979, 0.0021], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1836, 0.8164], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0428, 0.9572], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.2062e-04, 9.9968e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8886, 0.1114], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1930, 0.8070], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5523, 0.4477], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0126, 0.9874], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0682, 0.9318], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0140, 0.9860], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0472, 0.9528], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9998e-01, 2.2299e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9426, 0.0574], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9995e-01, 5.1242e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0142, 0.9858], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3913, 0.6087], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5608, 0.4392], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0034, 0.9966], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2070, 0.7930], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1945, 0.8055], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 58.333% (loss: 1.785) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0398, 0.9602], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1309, 0.8691], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 9, Training ones: 16 / 17
INFO:root:[  125] train: 90.000% test: 54.167%
INFO:root:Accuracy: 0.88571, Precision: 0.91304, Recall: 0.91304, F1: 0.91304
INFO:root:Val Accuracy: 0.57692, Precision: 0.64706, Recall: 0.68750, F1: 0.66667
INFO:root:F1: 0.66667 did not improve from 0.800000011920929
INFO:root:Epoch 126
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0034, 0.9966], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9980e-01, 1.9525e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0202, 0.9798], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0094, 0.9906], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0290, 0.9710], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0087, 0.9913], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0344, 0.9656], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0543, 0.9457], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0064, 0.9936], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0060, 0.9940], device='cuda:0')
Training Output torch.Size([2]) tensor([1.8668e-04, 9.9981e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0195, 0.9805], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1663, 0.8337], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0051, 0.9949], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9943, 0.0057], device='cuda:0')
Training Output torch.Size([2]) tensor([4.1977e-04, 9.9958e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0094, 0.9906], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8953, 0.1047], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0048, 0.9952], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0170, 0.9830], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9994e-01, 6.3274e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0247, 0.9753], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0334, 0.9666], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0209, 0.9791], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.025) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.1039e-04, 9.9919e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1955, 0.8045], device='cuda:0')
Training Output torch.Size([2]) tensor([6.3868e-04, 9.9936e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0257, 0.9743], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 8.8355e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 3.4872e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9692, 0.0308], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9988, 0.0012], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9995e-01, 4.7206e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1159, 0.8841], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0035, 0.9965], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0185, 0.9815], device='cuda:0')
Training Output torch.Size([2]) tensor([3.5419e-04, 9.9965e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.6474e-05, 9.9995e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0199, 0.9801], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0162, 0.9838], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9941, 0.0059], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0020, 0.9980], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0287, 0.9713], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9668, 0.0332], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0295, 0.9705], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9927e-01, 7.3361e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0136, 0.9864], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0047, 0.9953], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0304, 0.9696], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4345, 0.5655], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4311, 0.5689], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9524, 0.0476], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2568, 0.7432], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9961, 0.0039], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0200, 0.9800], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2302, 0.7698], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5888, 0.4112], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0549, 0.9451], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0063, 0.9937], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8594, 0.1406], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0715, 0.9285], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1499, 0.8501], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0843, 0.9157], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2895, 0.7105], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0069, 0.9931], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0238, 0.9762], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0210, 0.9790], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1582, 0.8418], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0967, 0.9033], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0366, 0.9634], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0246, 0.9754], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0793, 0.9207], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0180, 0.9820], device='cuda:0')
Training Output torch.Size([2]) tensor([1.5059e-04, 9.9985e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0173, 0.9827], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1139, 0.8861], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1103, 0.8897], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9977e-01, 2.2961e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9979e-01, 2.1112e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0251, 0.9749], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0034, 0.9966], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0076, 0.9924], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1604, 0.8396], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0029, 0.9971], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9098, 0.0902], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 1.5999e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9991e-01, 9.0634e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0334, 0.9666], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9995e-01, 4.9279e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0101, 0.9899], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1960, 0.8040], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9968e-01, 3.1504e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3451, 0.6549], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0222, 0.9778], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0028, 0.9972], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0108, 0.9892], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0436, 0.9564], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9907e-01, 9.3082e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0081, 0.9919], device='cuda:0')
Training Output torch.Size([2]) tensor([3.6479e-05, 9.9996e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.2959e-04, 9.9917e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.0629e-04, 9.9949e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0478, 0.9522], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0078, 0.9922], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9987e-01, 1.2831e-04], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 25, Training ones: 69 / 80
outputs torch.Size([24]) tensor([0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7729, 0.2271], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9859, 0.0141], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2378, 0.7622], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5381, 0.4619], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9921e-01, 7.8855e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2149, 0.7851], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0457, 0.9543], device='cuda:0')
Validation Output torch.Size([2]) tensor([4.0134e-04, 9.9960e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9287, 0.0713], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2468, 0.7532], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6765, 0.3235], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0183, 0.9817], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0755, 0.9245], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0180, 0.9820], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0212, 0.9788], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9998e-01, 1.7918e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9639, 0.0360], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9997e-01, 3.2067e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0163, 0.9837], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4787, 0.5213], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6441, 0.3559], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3531, 0.6469], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2886, 0.7114], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 62.500% (loss: 1.839) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0435, 0.9565], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1479, 0.8521], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 10, Training ones: 16 / 16
INFO:root:[  126] train: 89.444% test: 56.250%
INFO:root:Accuracy: 0.89524, Precision: 0.86250, Recall: 1.00000, F1: 0.92617
INFO:root:Val Accuracy: 0.61538, Precision: 0.68750, Recall: 0.68750, F1: 0.68750
INFO:root:F1: 0.68750 did not improve from 0.800000011920929
INFO:root:Epoch 127
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0102, 0.9898], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9990e-01, 9.7616e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0234, 0.9766], device='cuda:0')
Training Output torch.Size([2]) tensor([8.2475e-04, 9.9918e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0075, 0.9925], device='cuda:0')
Training Output torch.Size([2]) tensor([7.7331e-04, 9.9923e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0472, 0.9528], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0619, 0.9381], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0490, 0.9510], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0147, 0.9853], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Output torch.Size([2]) tensor([9.4244e-05, 9.9991e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0144, 0.9856], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0045, 0.9955], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9991e-01, 9.1702e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0043, 0.9957], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1138, 0.8862], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9968, 0.0032], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0143, 0.9857], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0432, 0.9568], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9978, 0.0022], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0053, 0.9947], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0077, 0.9923], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5593, 0.4407], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 95.833% (loss: 0.053) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.0137e-04, 9.9950e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0651, 0.9349], device='cuda:0')
Training Output torch.Size([2]) tensor([2.3969e-04, 9.9976e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0041, 0.9959], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 4.9370e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9630, 0.0370], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9864, 0.0136], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9980e-01, 2.0422e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9987, 0.0013], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0167, 0.9833], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0283, 0.9717], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0310, 0.9690], device='cuda:0')
Training Output torch.Size([2]) tensor([9.2421e-05, 9.9991e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.8132e-05, 9.9992e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0427, 0.9573], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9723, 0.0277], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0043, 0.9957], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0503, 0.9497], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9971, 0.0029], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0123, 0.9877], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9988e-01, 1.2291e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1044, 0.8956], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0184, 0.9816], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0314, 0.9686], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4372, 0.5628], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9841, 0.0159], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9706, 0.0294], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0114, 0.9886], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9986, 0.0014], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0226, 0.9774], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0319, 0.9681], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7120, 0.2880], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0604, 0.9396], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0410, 0.9590], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9661, 0.0339], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9864, 0.0136], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0228, 0.9772], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1809, 0.8191], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0210, 0.9790], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0414, 0.9586], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0894, 0.9106], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0020, 0.9980], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1382, 0.8618], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0081, 0.9919], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2007, 0.7993], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2285, 0.7715], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0075, 0.9925], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0197, 0.9803], device='cuda:0')
Training Output torch.Size([2]) tensor([1.2243e-04, 9.9988e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0104, 0.9896], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0156, 0.9844], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9938, 0.0062], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9996e-01, 3.9443e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0078, 0.9922], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2603, 0.7397], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7072, 0.2928], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0247, 0.9753], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0052, 0.9948], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 1.2607e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9987, 0.0013], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9941e-01, 5.9186e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0049, 0.9951], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9979e-01, 2.1402e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([5.6038e-04, 9.9944e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0165, 0.9835], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9977, 0.0023], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 4.1574e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0138, 0.9862], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0113, 0.9887], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0197, 0.9803], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9981e-01, 1.9110e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 5.2239e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([7.7331e-04, 9.9923e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0053, 0.9947], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0071, 0.9929], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 7.7065e-06], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 31, Training ones: 69 / 74
outputs torch.Size([24]) tensor([0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7216, 0.2784], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9805, 0.0195], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2084, 0.7916], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4775, 0.5225], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9949, 0.0051], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1971, 0.8029], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0404, 0.9596], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.5144e-04, 9.9965e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9220, 0.0780], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2078, 0.7922], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6281, 0.3719], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0171, 0.9829], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0628, 0.9372], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0161, 0.9839], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0265, 0.9735], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9998e-01, 2.1698e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9532, 0.0468], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9996e-01, 3.5081e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0148, 0.9852], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4577, 0.5423], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6009, 0.3991], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0034, 0.9966], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3607, 0.6393], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2824, 0.7176], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 58.333% (loss: 1.789) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0382, 0.9618], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1314, 0.8686], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 9, Training ones: 16 / 17
INFO:root:[  127] train: 90.833% test: 54.167%
INFO:root:Accuracy: 0.89524, Precision: 0.89189, Recall: 0.95652, F1: 0.92308
INFO:root:Val Accuracy: 0.57692, Precision: 0.64706, Recall: 0.68750, F1: 0.66667
INFO:root:F1: 0.66667 did not improve from 0.800000011920929
INFO:root:Epoch 128
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0090, 0.9910], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9993e-01, 7.0312e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0106, 0.9894], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0745, 0.9255], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0074, 0.9926], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2921, 0.7079], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0295, 0.9705], device='cuda:0')
Training Output torch.Size([2]) tensor([4.0369e-04, 9.9960e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0359, 0.9641], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0196, 0.9804], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0805e-04, 9.9989e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0330, 0.9670], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0304, 0.9696], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9848, 0.0152], device='cuda:0')
Training Output torch.Size([2]) tensor([3.4263e-04, 9.9966e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0067, 0.9933], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 2.3369e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0052, 0.9948], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0047, 0.9953], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7885, 0.2115], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0569, 0.9431], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0255, 0.9745], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1916, 0.8084], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.049) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0096, 0.9904], device='cuda:0')
Training Output torch.Size([2]) tensor([8.4429e-04, 9.9916e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3873e-04, 9.9986e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0067, 0.9933], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.0655e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9532, 0.0468], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9959, 0.0041], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9995e-01, 5.4334e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6857, 0.3143], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0786, 0.9214], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0051, 0.9949], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0457, 0.9543], device='cuda:0')
Training Output torch.Size([2]) tensor([4.0606e-04, 9.9959e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.7912e-04, 9.9972e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0724, 0.9276], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0231, 0.9769], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3254, 0.6746], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0155, 0.9845], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0276, 0.9724], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9563, 0.0437], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0061, 0.9939], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9971, 0.0029], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0071, 0.9929], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3986, 0.6014], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1874, 0.8126], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5580, 0.4420], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1585, 0.8415], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0533, 0.9467], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2277, 0.7723], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1773, 0.8227], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2903, 0.7097], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3508, 0.6492], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0599, 0.9401], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0092, 0.9908], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5833, 0.4167], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0130, 0.9870], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3743, 0.6257], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3940, 0.6060], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0070, 0.9930], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0726, 0.9274], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0295, 0.9705], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0323, 0.9677], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0156, 0.9844], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0063, 0.9937], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1419, 0.8581], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0208, 0.9792], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0412, 0.9588], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0077, 0.9923], device='cuda:0')
Training Output torch.Size([2]) tensor([7.6133e-04, 9.9924e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.8462e-04, 9.9972e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1449, 0.8551], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0271, 0.9729], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.1016e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9965e-01, 3.4599e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1517, 0.8483], device='cuda:0')
Training Output torch.Size([2]) tensor([7.7828e-05, 9.9992e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0046, 0.9954], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0120, 0.9880], device='cuda:0')
Training Output torch.Size([2]) tensor([2.9083e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 7.4113e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9987, 0.0013], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9839, 0.0161], device='cuda:0')
Training Output torch.Size([2]) tensor([2.8076e-04, 9.9972e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9482, 0.0518], device='cuda:0')
Training Output torch.Size([2]) tensor([6.8651e-04, 9.9931e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0628, 0.9372], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9842, 0.0158], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 2.1568e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0031, 0.9969], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0790, 0.9210], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9902e-01, 9.7545e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9982e-01, 1.7571e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0039, 0.9961], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0038, 0.9962], device='cuda:0')
Training Output torch.Size([2]) tensor([6.2025e-04, 9.9938e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0093, 0.9907], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 8.0763e-06], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 24, Training ones: 69 / 81
outputs torch.Size([24]) tensor([0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7417, 0.2583], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9837, 0.0163], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2006, 0.7994], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4727, 0.5273], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9801, 0.0199], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2014, 0.7986], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0373, 0.9627], device='cuda:0')
Validation Output torch.Size([2]) tensor([3.0297e-04, 9.9970e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9291, 0.0709], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1963, 0.8037], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6793, 0.3207], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0155, 0.9845], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0571, 0.9429], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0149, 0.9851], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0137, 0.9863], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9998e-01, 1.7918e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9563, 0.0437], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9997e-01, 2.7109e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0139, 0.9861], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4966, 0.5034], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6301, 0.3699], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3607, 0.6393], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2870, 0.7130], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 58.333% (loss: 1.844) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0367, 0.9633], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1354, 0.8646], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 9, Training ones: 16 / 17
INFO:root:[  128] train: 90.000% test: 54.167%
INFO:root:Accuracy: 0.88571, Precision: 0.85185, Recall: 1.00000, F1: 0.92000
INFO:root:Val Accuracy: 0.57692, Precision: 0.64706, Recall: 0.68750, F1: 0.66667
INFO:root:F1: 0.66667 did not improve from 0.800000011920929
INFO:root:Epoch 129
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0090, 0.9910], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8244, 0.1756], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0390, 0.9610], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0210, 0.9790], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0149, 0.9851], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2107, 0.7893], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0088, 0.9912], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0123, 0.9877], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0107, 0.9893], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0049, 0.9951], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0533, 0.9467], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0073, 0.9927], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0296, 0.9704], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0248, 0.9752], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9989e-01, 1.1279e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9467e-04, 9.9901e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1619, 0.8381], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9573, 0.0427], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0216, 0.9784], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0728, 0.9272], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9993e-01, 6.8415e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0235, 0.9765], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0333, 0.9667], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0747, 0.9253], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.047) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0104, 0.9896], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1916, 0.8084], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1547e-04, 9.9988e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3120, 0.6880], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9997e-01, 2.6584e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9935e-01, 6.4620e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9988e-01, 1.1547e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8847, 0.1153], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9763, 0.0237], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9475, 0.0525], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0105, 0.9895], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0028, 0.9972], device='cuda:0')
Training Output torch.Size([2]) tensor([7.4516e-04, 9.9925e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.7853e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0085, 0.9915], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0086, 0.9914], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9941, 0.0059], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0061, 0.9939], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0887, 0.9113], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9977e-01, 2.2961e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0185, 0.9815], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 7.4986e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0298, 0.9702], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0734, 0.9266], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2245, 0.7755], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7765, 0.2235], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2275, 0.7725], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9093, 0.0907], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3528, 0.6472], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0712, 0.9288], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3445, 0.6555], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0753, 0.9247], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3552, 0.6448], device='cuda:0')
Training Output torch.Size([2]) tensor([3.7556e-04, 9.9962e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0127, 0.9873], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6511, 0.3489], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0270, 0.9730], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2805, 0.7195], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2426, 0.7574], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0226, 0.9774], device='cuda:0')
Training Output torch.Size([2]) tensor([8.5590e-04, 9.9914e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0276, 0.9724], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0104, 0.9896], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1546, 0.8454], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0190, 0.9810], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0129, 0.9871], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2762, 0.7238], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3605e-04, 9.9986e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0080, 0.9920], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3978, 0.6022], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 5.6603e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9965e-01, 3.5075e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0055, 0.9945], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0093, 0.9907], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0566, 0.9434], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0141, 0.9859], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0090, 0.9910], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 1.7367e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 7.5870e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 2.0304e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9955e-01, 4.4509e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([4.2804e-04, 9.9957e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0183, 0.9817], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9978e-01, 2.2255e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 3.7121e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0138, 0.9862], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0064, 0.9936], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0117, 0.9883], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9654, 0.0346], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9923e-01, 7.6580e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([2.7003e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.8438e-05, 9.9992e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0031, 0.9969], device='cuda:0')
Training Output torch.Size([2]) tensor([2.2871e-04, 9.9977e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 1.3525e-05], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 27, Training ones: 69 / 78
outputs torch.Size([24]) tensor([0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.6527, 0.3473], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9764, 0.0236], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1447, 0.8553], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3734, 0.6266], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9985e-01, 1.4596e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1674, 0.8326], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0295, 0.9705], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.1070e-04, 9.9979e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9040, 0.0960], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1382, 0.8618], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6300, 0.3700], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0108, 0.9892], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0429, 0.9571], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0107, 0.9893], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0208, 0.9792], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9998e-01, 2.0948e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9343, 0.0657], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9997e-01, 3.1202e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0107, 0.9893], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4437, 0.5563], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5658, 0.4342], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2593, 0.7407], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2165, 0.7835], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 58.333% (loss: 1.835) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0293, 0.9707], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1170, 0.8830], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 9, Training ones: 16 / 17
INFO:root:[  129] train: 90.833% test: 54.167%
INFO:root:Accuracy: 0.89524, Precision: 0.87179, Recall: 0.98551, F1: 0.92517
INFO:root:Val Accuracy: 0.57692, Precision: 0.64706, Recall: 0.68750, F1: 0.66667
INFO:root:F1: 0.66667 did not improve from 0.800000011920929
INFO:root:Epoch 130
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0093, 0.9907], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9914e-01, 8.6429e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0071, 0.9929], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0269, 0.9731], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0147, 0.9853], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0983, 0.9017], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0257, 0.9743], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0462, 0.9538], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0098, 0.9902], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0236, 0.9764], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0056, 0.9944], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1063, 0.8937], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0349, 0.9651], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8817, 0.1183], device='cuda:0')
Training Output torch.Size([2]) tensor([3.9666e-04, 9.9960e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0074, 0.9926], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9983e-01, 1.6507e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0330, 0.9670], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0525, 0.9475], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4463, 0.5537], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0358, 0.9642], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0199, 0.9801], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0067, 0.9933], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 95.833% (loss: 0.063) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.7165e-04, 9.9903e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0165, 0.9835], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0705, 0.9295], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0448, 0.9552], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 1.0411e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9949e-01, 5.1126e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9821, 0.0179], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9996e-01, 4.4001e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9942, 0.0058], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8804, 0.1196], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0033, 0.9967], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0143, 0.9857], device='cuda:0')
Training Output torch.Size([2]) tensor([1.2681e-04, 9.9987e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.9473e-04, 9.9921e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0123, 0.9877], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0216, 0.9784], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9123, 0.0877], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0061, 0.9939], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0240, 0.9760], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9959, 0.0041], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1158, 0.8842], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 1.5567e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0268, 0.9732], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0296, 0.9704], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1448, 0.8552], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9904, 0.0096], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9809, 0.0191], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9612, 0.0388], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0227, 0.9773], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8423, 0.1577], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0474, 0.9526], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2343, 0.7657], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8948, 0.1052], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0837, 0.9163], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0549, 0.9451], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8784, 0.1216], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0183, 0.9817], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0104, 0.9896], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7541, 0.2459], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0977, 0.9023], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3642, 0.6358], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0525, 0.9475], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3605e-04, 9.9986e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0045, 0.9955], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0100, 0.9900], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1481, 0.8519], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0052, 0.9948], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1572, 0.8428], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1049, 0.8951], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3982e-04, 9.9986e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.6998e-04, 9.9983e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0063, 0.9937], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1167, 0.8833], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9971e-01, 2.9251e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9982e-01, 1.7988e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Training Output torch.Size([2]) tensor([1.7606e-04, 9.9982e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0137, 0.9863], device='cuda:0')
Training Output torch.Size([2]) tensor([9.3994e-04, 9.9906e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9890, 0.0110], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 2.4111e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9985e-01, 1.5118e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0136, 0.9864], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8459, 0.1541], device='cuda:0')
Training Output torch.Size([2]) tensor([1.7367e-04, 9.9983e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0144, 0.9856], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9961e-01, 3.8748e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9371, 0.0629], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0164, 0.9836], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0083, 0.9917], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0188, 0.9812], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9951e-01, 4.8977e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9993e-01, 7.2261e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0224, 0.9776], device='cuda:0')
Training Output torch.Size([2]) tensor([3.1324e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1750, 0.8250], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0056, 0.9944], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Training Output torch.Size([2]) tensor([8.6937e-04, 9.9913e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.9561e-06], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 30, Training ones: 69 / 75
outputs torch.Size([24]) tensor([0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5523, 0.4477], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9687, 0.0313], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1012, 0.8988], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2791, 0.7209], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9966, 0.0034], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1435, 0.8565], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0231, 0.9769], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.5356e-04, 9.9985e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8700, 0.1300], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0965, 0.9035], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5773, 0.4227], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0076, 0.9924], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0328, 0.9672], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0077, 0.9923], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0095, 0.9905], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9997e-01, 2.5566e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9010, 0.0990], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9996e-01, 3.6621e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0082, 0.9918], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3808, 0.6192], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5013, 0.4987], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1904, 0.8096], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1599, 0.8401], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 58.333% (loss: 1.806) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0232, 0.9768], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1044, 0.8956], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 9, Training ones: 16 / 17
INFO:root:[  130] train: 93.333% test: 54.167%
INFO:root:Accuracy: 0.92381, Precision: 0.90667, Recall: 0.98551, F1: 0.94444
INFO:root:Val Accuracy: 0.57692, Precision: 0.64706, Recall: 0.68750, F1: 0.66667
INFO:root:F1: 0.66667 did not improve from 0.800000011920929
INFO:root:Epoch 131
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.0415e-04, 9.9930e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9872, 0.0128], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0257, 0.9743], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1459, 0.8541], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9843, 0.0157], device='cuda:0')
Training Output torch.Size([2]) tensor([2.9194e-04, 9.9971e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0188, 0.9812], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1175, 0.8825], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0033, 0.9967], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0148, 0.9852], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0025, 0.9975], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0154, 0.9846], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0027, 0.9973], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9939, 0.0061], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0979, 0.9021], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2346, 0.7654], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0088, 0.9912], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0128, 0.9872], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9989e-01, 1.1323e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0227, 0.9773], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0627, 0.9373], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 91.667% (loss: 0.259) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0045, 0.9955], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0394, 0.9606], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0192, 0.9808], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0083, 0.9917], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9995e-01, 4.8705e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9986, 0.0014], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9951e-01, 4.8786e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9867, 0.0133], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9960, 0.0040], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0603, 0.9397], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0256, 0.9744], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0142, 0.9858], device='cuda:0')
Training Output torch.Size([2]) tensor([1.9298e-04, 9.9981e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.4255e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0116, 0.9884], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0048, 0.9952], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 2.5613e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0029, 0.9971], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0136, 0.9864], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9857, 0.0143], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0143, 0.9857], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 1.5751e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0027, 0.9973], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0075, 0.9925], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0398, 0.9602], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8305, 0.1695], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0853, 0.9147], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9497, 0.0503], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0749, 0.9251], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6515, 0.3485], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0242, 0.9758], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0496, 0.9504], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9083, 0.0917], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0258, 0.9742], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9994e-01, 6.2537e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0047, 0.9953], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1116, 0.8884], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9675, 0.0325], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0083, 0.9917], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0180, 0.9820], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0373, 0.9627], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0791, 0.9209], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0031, 0.9969], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3643, 0.6357], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0583, 0.9417], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0074, 0.9926], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0178, 0.9822], device='cuda:0')
Training Output torch.Size([2]) tensor([7.5728e-05, 9.9992e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0114, 0.9886], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0142, 0.9858], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0513, 0.9487], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9952, 0.0048], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9996e-01, 3.5634e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0073, 0.9927], device='cuda:0')
Training Output torch.Size([2]) tensor([3.5281e-04, 9.9965e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0665, 0.9335], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0235, 0.9765], device='cuda:0')
Training Output torch.Size([2]) tensor([1.9872e-04, 9.9980e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9949, 0.0051], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1040, 0.8960], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9681, 0.0319], device='cuda:0')
Training Output torch.Size([2]) tensor([5.2032e-04, 9.9948e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9982, 0.0018], device='cuda:0')
Training Output torch.Size([2]) tensor([5.3683e-04, 9.9946e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0039, 0.9961], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2226, 0.7774], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 1.9911e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0962, 0.9038], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1859, 0.8141], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7875, 0.2125], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 3.1876e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([1.7537e-04, 9.9982e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.4398e-05, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.6767e-04, 9.9913e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1604, 0.8396], device='cuda:0')
Training Output torch.Size([2]) tensor([3.8296e-04, 9.9962e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 1.8129e-05], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 27, Training ones: 69 / 78
outputs torch.Size([24]) tensor([1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5000, 0.5000], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9657, 0.0343], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0789, 0.9211], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2310, 0.7690], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9960, 0.0040], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1332, 0.8668], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0207, 0.9793], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.3552e-04, 9.9986e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8363, 0.1637], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0786, 0.9214], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6006, 0.3994], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0060, 0.9940], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0288, 0.9712], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0066, 0.9934], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0211, 0.9789], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9997e-01, 2.9890e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8703, 0.1297], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9996e-01, 4.1986e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0071, 0.9929], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3368, 0.6632], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4697, 0.5303], device='cuda:0')
Validation Output torch.Size([2]) tensor([8.2636e-04, 9.9917e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1478, 0.8522], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1281, 0.8719], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 58.333% (loss: 1.834) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0213, 0.9787], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1093, 0.8907], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 7, Training ones: 16 / 19
INFO:root:[  131] train: 90.833% test: 54.167%
INFO:root:Accuracy: 0.89524, Precision: 0.87179, Recall: 0.98551, F1: 0.92517
INFO:root:Val Accuracy: 0.57692, Precision: 0.63158, Recall: 0.75000, F1: 0.68571
INFO:root:F1: 0.68571 did not improve from 0.800000011920929
INFO:root:Epoch 132
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8090, 0.1910], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0071, 0.9929], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0490, 0.9510], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0042, 0.9958], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0228, 0.9772], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0374, 0.9626], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1734, 0.8266], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0158, 0.9842], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0081, 0.9919], device='cuda:0')
Training Output torch.Size([2]) tensor([3.6118e-04, 9.9964e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0084, 0.9916], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0318, 0.9682], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2382, 0.7618], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3552e-04, 9.9986e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0074, 0.9926], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9940, 0.0060], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0048, 0.9952], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0168, 0.9832], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9949e-01, 5.0530e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0134, 0.9866], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0134, 0.9866], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0237, 0.9763], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 95.833% (loss: 0.088) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.7062e-04, 9.9933e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0043, 0.9957], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0038, 0.9962], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0044, 0.9956], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 2.1529e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9827, 0.0173], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9958e-01, 4.1977e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9928e-01, 7.2225e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8442, 0.1558], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0242, 0.9758], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0065, 0.9935], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3172, 0.6828], device='cuda:0')
Training Output torch.Size([2]) tensor([4.9360e-04, 9.9951e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0029, 0.9971], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0094, 0.9906], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 6.7745e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([9.6597e-04, 9.9903e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0815, 0.9185], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9988, 0.0012], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2140, 0.7860], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 1.0370e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0257, 0.9743], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0870, 0.9130], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5200, 0.4800], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1388, 0.8612], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4164, 0.5836], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9786, 0.0214], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0433, 0.9567], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4853, 0.5147], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1687, 0.8313], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0241, 0.9759], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3082, 0.6918], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6644, 0.3356], device='cuda:0')
Training Output torch.Size([2]) tensor([8.8305e-04, 9.9912e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1332, 0.8668], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2198, 0.7802], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0168, 0.9832], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0181, 0.9819], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1386, 0.8614], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0118, 0.9882], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0104, 0.9896], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0042, 0.9958], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0061, 0.9939], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0437, 0.9563], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2529, 0.7471], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0517, 0.9483], device='cuda:0')
Training Output torch.Size([2]) tensor([1.9717e-04, 9.9980e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.7447e-04, 9.9913e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0078, 0.9922], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0286, 0.9714], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9938, 0.0062], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 2.2039e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9274, 0.0726], device='cuda:0')
Training Output torch.Size([2]) tensor([6.9189e-04, 9.9931e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0116, 0.9884], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0482, 0.9518], device='cuda:0')
Training Output torch.Size([2]) tensor([4.2804e-04, 9.9957e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9975, 0.0025], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9925e-01, 7.5100e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9993e-01, 6.8415e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9417, 0.0583], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0092, 0.9908], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0547, 0.9453], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9983, 0.0017], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3193, 0.6807], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0035, 0.9965], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0217, 0.9783], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9993e-01, 7.0587e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9974e-01, 2.5714e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0039, 0.9961], device='cuda:0')
Training Output torch.Size([2]) tensor([8.6822e-05, 9.9991e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2945, 0.7055], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0096, 0.9904], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 5.3800e-06], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 25, Training ones: 69 / 80
outputs torch.Size([24]) tensor([0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.6234, 0.3766], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9824, 0.0176], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0927, 0.9073], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2778, 0.7222], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9979e-01, 2.1444e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1642, 0.8358], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0237, 0.9763], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.6219e-04, 9.9984e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8829, 0.1171], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1001, 0.8999], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7792, 0.2208], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0062, 0.9938], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0340, 0.9660], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0074, 0.9926], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0221, 0.9779], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9998e-01, 1.7988e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9195, 0.0805], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9997e-01, 2.5268e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0076, 0.9924], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3913, 0.6087], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5632, 0.4368], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1523, 0.8477], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1427, 0.8573], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 58.333% (loss: 1.888) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0249, 0.9751], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1505, 0.8495], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 9, Training ones: 16 / 17
INFO:root:[  132] train: 89.167% test: 54.167%
INFO:root:Accuracy: 0.87619, Precision: 0.85000, Recall: 0.98551, F1: 0.91275
INFO:root:Val Accuracy: 0.57692, Precision: 0.64706, Recall: 0.68750, F1: 0.66667
INFO:root:F1: 0.66667 did not improve from 0.800000011920929
INFO:root:Epoch 133
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9994e-01, 5.7612e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0097, 0.9903], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0538, 0.9462], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0578, 0.9422], device='cuda:0')
Training Output torch.Size([2]) tensor([7.5246e-04, 9.9925e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1746, 0.8254], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0061, 0.9939], device='cuda:0')
Training Output torch.Size([2]) tensor([8.5590e-04, 9.9914e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0073, 0.9927], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0025, 0.9975], device='cuda:0')
Training Output torch.Size([2]) tensor([5.8726e-04, 9.9941e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0414, 0.9586], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0200, 0.9800], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8097, 0.1903], device='cuda:0')
Training Output torch.Size([2]) tensor([4.5209e-04, 9.9955e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0519, 0.9481], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9948e-01, 5.2134e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0119, 0.9881], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1353, 0.8647], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 2.2650e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0061, 0.9939], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0025, 0.9975], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.035) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0027, 0.9973], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0038, 0.9962], device='cuda:0')
Training Output torch.Size([2]) tensor([2.6689e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0075, 0.9925], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9478, 0.0522], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9481, 0.0519], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9989, 0.0011], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8374, 0.1626], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9991e-01, 8.9229e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0768, 0.9232], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0074, 0.9926], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2916, 0.7084], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0212, 0.9788], device='cuda:0')
Training Output torch.Size([2]) tensor([4.3393e-04, 9.9957e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0076, 0.9924], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0036, 0.9964], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.4998e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([7.8241e-04, 9.9922e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0801, 0.9199], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4695, 0.5305], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4796, 0.5204], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9957e-01, 4.2888e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0692, 0.9308], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0075, 0.9925], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0343, 0.9657], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0328, 0.9672], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9646, 0.0354], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9864, 0.0136], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0589, 0.9411], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9866, 0.0134], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0167, 0.9833], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1277, 0.8723], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1323, 0.8677], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0549, 0.9451], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0263, 0.9737], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9994e-01, 6.0850e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0080, 0.9920], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0089, 0.9911], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7390, 0.2610], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1426, 0.8574], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0485, 0.9515], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0240, 0.9760], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0127, 0.9873], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1434, 0.8566], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0156, 0.9844], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4828, 0.5172], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0079, 0.9921], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3936, 0.6064], device='cuda:0')
Training Output torch.Size([2]) tensor([9.6284e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0545, 0.9455], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0364, 0.9636], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9432, 0.0568], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9996e-01, 4.0536e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0218, 0.9782], device='cuda:0')
Training Output torch.Size([2]) tensor([3.5767e-04, 9.9964e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0146, 0.9854], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0040, 0.9960], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9969e-01, 3.0955e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.6217e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9917e-01, 8.2636e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9573, 0.0427], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9786, 0.0214], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0376, 0.9624], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9965e-01, 3.5144e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9993e-01, 6.5028e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([6.5028e-05, 9.9993e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0039, 0.9961], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0039, 0.9961], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9994e-01, 6.3522e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.7398e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0137, 0.9863], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3658e-04, 9.9986e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0649, 0.9351], device='cuda:0')
Training Output torch.Size([2]) tensor([2.0825e-04, 9.9979e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0070, 0.9930], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 2.2644e-07], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 28, Training ones: 69 / 77
outputs torch.Size([24]) tensor([0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.6655, 0.3345], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9866, 0.0134], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0961, 0.9039], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2946, 0.7054], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9395, 0.0605], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1734, 0.8266], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0230, 0.9770], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.5968e-04, 9.9984e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8995, 0.1005], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1050, 0.8950], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8307, 0.1693], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0059, 0.9941], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0336, 0.9664], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0072, 0.9928], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0398, 0.9602], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9999e-01, 1.3846e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9342, 0.0658], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9998e-01, 1.9148e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0072, 0.9928], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4231, 0.5769], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6002, 0.3998], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0023, 0.9977], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1446, 0.8554], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1451, 0.8549], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 58.333% (loss: 1.898) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0247, 0.9753], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1607, 0.8393], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 9, Training ones: 16 / 17
INFO:root:[  133] train: 91.667% test: 54.167%
INFO:root:Accuracy: 0.90476, Precision: 0.88312, Recall: 0.98551, F1: 0.93151
INFO:root:Val Accuracy: 0.57692, Precision: 0.64706, Recall: 0.68750, F1: 0.66667
INFO:root:F1: 0.66667 did not improve from 0.800000011920929
INFO:root:Epoch 134
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0030, 0.9970], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9861, 0.0139], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0162, 0.9838], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0051, 0.9949], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0499, 0.9501], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0090, 0.9910], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0075, 0.9925], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9450, 0.0550], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4024, 0.5976], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0123, 0.9877], device='cuda:0')
Training Output torch.Size([2]) tensor([6.7062e-04, 9.9933e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.1242e-05, 9.9995e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0148, 0.9852], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0033, 0.9967], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9973e-01, 2.7372e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1125, 0.8875], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0704, 0.9296], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9996e-01, 3.9136e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0172, 0.9828], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0058, 0.9942], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8376, 0.1624], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0034, 0.9966], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0190, 0.9810], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0711, 0.9289], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 95.833% (loss: 0.168) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0174, 0.9826], device='cuda:0')
Training Output torch.Size([2]) tensor([1.4230e-05, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0512, 0.9488], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9787, 0.0213], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9983e-01, 1.6898e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6240, 0.3760], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9915, 0.0085], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9993e-01, 7.3686e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0092, 0.9908], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0310, 0.9690], device='cuda:0')
Training Output torch.Size([2]) tensor([9.8886e-04, 9.9901e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.9125e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0038, 0.9962], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0040, 0.9960], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9996e-01, 3.8680e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0169, 0.9831], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0223, 0.9777], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9980, 0.0020], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2145, 0.7855], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 8.2679e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0759, 0.9241], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0406, 0.9594], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0709, 0.9291], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9987, 0.0013], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9686, 0.0314], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9994e-01, 6.1328e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0448, 0.9552], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6355, 0.3645], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0299, 0.9701], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0300, 0.9700], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0462, 0.9538], device='cuda:0')
Training Output torch.Size([2]) tensor([8.1674e-04, 9.9918e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0704, 0.9296], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7229, 0.2771], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4777, 0.5223], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0419, 0.9581], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0031, 0.9969], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8944, 0.1056], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0336, 0.9664], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0277, 0.9723], device='cuda:0')
Training Output torch.Size([2]) tensor([4.1497e-05, 9.9996e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0283, 0.9717], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0069, 0.9931], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2362, 0.7638], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0552, 0.9448], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0061, 0.9939], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0347, 0.9653], device='cuda:0')
Training Output torch.Size([2]) tensor([5.6382e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0473e-04, 9.9990e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0381, 0.9619], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9879, 0.0121], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9987, 0.0013], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0196, 0.9804], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0125, 0.9875], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0327, 0.9673], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9983e-01, 1.6898e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.2005e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9941e-01, 5.9186e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1192, 0.8808], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7791, 0.2209], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0300, 0.9700], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9992e-01, 8.2847e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9985, 0.0015], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0063, 0.9937], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0082, 0.9918], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9983, 0.0017], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 1.2607e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([1.4653e-04, 9.9985e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.4092e-04, 9.9986e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([3.0714e-04, 9.9969e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([5.8726e-04, 9.9941e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.1726e-06], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 30, Training ones: 69 / 75
outputs torch.Size([24]) tensor([0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.6351, 0.3649], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9853, 0.0147], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0891, 0.9109], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2704, 0.7296], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9851, 0.0149], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1605, 0.8395], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0210, 0.9790], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.4653e-04, 9.9985e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8911, 0.1089], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0948, 0.9052], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8062, 0.1938], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0054, 0.9946], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0304, 0.9696], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0066, 0.9934], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9998e-01, 1.5148e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9261, 0.0739], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9998e-01, 2.1030e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0066, 0.9934], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4057, 0.5943], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5738, 0.4262], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1280, 0.8720], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1354, 0.8646], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 58.333% (loss: 1.899) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0230, 0.9770], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1468, 0.8532], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 9, Training ones: 16 / 17
INFO:root:[  134] train: 91.667% test: 54.167%
INFO:root:Accuracy: 0.90476, Precision: 0.89333, Recall: 0.97101, F1: 0.93056
INFO:root:Val Accuracy: 0.57692, Precision: 0.64706, Recall: 0.68750, F1: 0.66667
INFO:root:F1: 0.66667 did not improve from 0.800000011920929
INFO:root:Epoch 135
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.1104e-04, 9.9989e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9965e-01, 3.5075e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0853, 0.9147], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0625, 0.9375], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0114, 0.9886], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0035, 0.9965], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0094, 0.9906], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0127, 0.9873], device='cuda:0')
Training Output torch.Size([2]) tensor([9.4362e-04, 9.9906e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.9054e-04, 9.9931e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0837, 0.9163], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0041, 0.9959], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0146, 0.9854], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9741, 0.0259], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0671, 0.9329], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 1.8059e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0196, 0.9804], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9993e-01, 7.4846e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0036, 0.9964], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0887, 0.9113], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1119, 0.8881], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.027) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0035, 0.9965], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0070, 0.9930], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0038, 0.9962], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5365, 0.4635], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9989e-01, 1.0637e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9916, 0.0084], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9848, 0.0152], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9982e-01, 1.8450e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6119, 0.3881], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0126, 0.9874], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0177, 0.9823], device='cuda:0')
Training Output torch.Size([2]) tensor([7.2544e-05, 9.9993e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.6661e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0194, 0.9806], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0054, 0.9946], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 2.5065e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([4.3478e-04, 9.9957e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1538, 0.8462], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9913e-01, 8.6937e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0078, 0.9922], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 5.7945e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0156, 0.9844], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0563, 0.9437], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2562, 0.7438], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6965, 0.3035], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1104, 0.8896], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0492, 0.9508], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0111, 0.9889], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9965, 0.0035], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1342, 0.8658], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0831, 0.9169], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9764, 0.0236], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0044, 0.9956], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0497, 0.9503], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0036, 0.9964], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0081, 0.9919], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1403, 0.8597], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2469, 0.7531], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0086, 0.9914], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0290, 0.9710], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0077, 0.9923], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0128, 0.9872], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4091, 0.5909], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0373, 0.9627], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0048, 0.9952], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2793, 0.7207], device='cuda:0')
Training Output torch.Size([2]) tensor([3.8983e-05, 9.9996e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0851, 0.9149], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3631, 0.6369], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 5.9195e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9923e-01, 7.6729e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([7.3218e-04, 9.9927e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0033, 0.9967], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0716, 0.9284], device='cuda:0')
Training Output torch.Size([2]) tensor([2.5217e-04, 9.9975e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9984, 0.0016], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9607, 0.0393], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9930, 0.0070], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0072, 0.9928], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 7.4403e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0096, 0.9904], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0049, 0.9951], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9395, 0.0605], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9951, 0.0049], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0987, 0.9013], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1083, 0.8917], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0390, 0.9610], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9998e-01, 1.9526e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 1.4797e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0040, 0.9960], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0423, 0.9577], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0074, 0.9926], device='cuda:0')
Training Output torch.Size([2]) tensor([6.5894e-04, 9.9934e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0088, 0.9912], device='cuda:0')
Training Output torch.Size([2]) tensor([1.2054e-04, 9.9988e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 4.9074e-07], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 27, Training ones: 69 / 78
outputs torch.Size([24]) tensor([0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5838, 0.4162], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9828, 0.0172], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0788, 0.9212], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2367, 0.7633], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9220, 0.0780], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1422, 0.8578], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0185, 0.9815], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.2781e-04, 9.9987e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8769, 0.1231], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0825, 0.9175], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7718, 0.2282], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0048, 0.9952], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0268, 0.9732], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0058, 0.9942], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0308, 0.9692], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9998e-01, 1.6378e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9122, 0.0878], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9998e-01, 2.2917e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3715, 0.6285], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5326, 0.4674], device='cuda:0')
Validation Output torch.Size([2]) tensor([8.6937e-04, 9.9913e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1112, 0.8888], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1210, 0.8790], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 58.333% (loss: 1.933) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0205, 0.9795], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1308, 0.8692], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 9, Training ones: 16 / 17
INFO:root:[  135] train: 90.833% test: 54.167%
INFO:root:Accuracy: 0.89524, Precision: 0.87179, Recall: 0.98551, F1: 0.92517
INFO:root:Val Accuracy: 0.57692, Precision: 0.64706, Recall: 0.68750, F1: 0.66667
INFO:root:F1: 0.66667 did not improve from 0.800000011920929
INFO:root:Epoch 136
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9995e-01, 4.9665e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0064, 0.9936], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0138, 0.9862], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0041, 0.9959], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0046, 0.9954], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0065, 0.9935], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0118, 0.9882], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0025, 0.9975], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8905, 0.1095], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9541e-05, 9.9990e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 5.4861e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([2.2126e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1137, 0.8863], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 8.9048e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0512, 0.9488], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0865, 0.9135], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9968, 0.0032], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0027, 0.9973], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0216, 0.9784], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0376, 0.9624], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 95.833% (loss: 0.108) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0041, 0.9959], device='cuda:0')
Training Output torch.Size([2]) tensor([5.8497e-04, 9.9942e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.1993e-04, 9.9918e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0042, 0.9958], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 8.2035e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9980e-01, 2.0067e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9941, 0.0059], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9529, 0.0471], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9984, 0.0016], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0078, 0.9922], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0040, 0.9960], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0047, 0.9953], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0067, 0.9933], device='cuda:0')
Training Output torch.Size([2]) tensor([1.9602e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0263, 0.9737], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 6.1553e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0058, 0.9942], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6135, 0.3865], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9897, 0.0103], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0152, 0.9848], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 2.8797e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0267, 0.9733], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0111, 0.9889], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0650, 0.9350], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8799, 0.1201], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9427, 0.0573], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9894, 0.0106], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0111, 0.9889], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9697, 0.0303], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1881, 0.8119], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2892, 0.7108], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4954, 0.5046], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0596, 0.9404], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9527, 0.0473], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0059, 0.9941], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0583, 0.9417], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0680, 0.9320], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0264, 0.9736], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0668, 0.9332], device='cuda:0')
Training Output torch.Size([2]) tensor([5.2954e-04, 9.9947e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0045, 0.9955], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0028, 0.9972], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9158, 0.0842], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0114, 0.9886], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0031, 0.9969], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1406, 0.8594], device='cuda:0')
Training Output torch.Size([2]) tensor([2.3505e-04, 9.9976e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0077, 0.9923], device='cuda:0')
Training Output torch.Size([2]) tensor([3.2695e-04, 9.9967e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0184, 0.9816], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9929, 0.0071], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 4.8986e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1662, 0.8338], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0083, 0.9917], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0926, 0.9074], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0053, 0.9947], device='cuda:0')
Training Output torch.Size([2]) tensor([9.6221e-04, 9.9904e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9281, 0.0719], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 5.7598e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9959e-01, 4.1085e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0114, 0.9886], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9983, 0.0017], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0492, 0.9508], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2655, 0.7345], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9514, 0.0486], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0058, 0.9942], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0099, 0.9901], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3082, 0.6918], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9990e-01, 1.0190e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([9.7419e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0099, 0.9901], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0029, 0.9971], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 28, Training ones: 69 / 77
outputs torch.Size([24]) tensor([0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5270, 0.4730], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9790, 0.0210], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0705, 0.9295], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2081, 0.7919], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9912, 0.0088], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1277, 0.8723], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0169, 0.9831], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.1821e-04, 9.9988e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8626, 0.1374], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0721, 0.9279], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7266, 0.2734], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0043, 0.9957], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0243, 0.9757], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0054, 0.9946], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0253, 0.9747], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9998e-01, 1.8559e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8934, 0.1066], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9997e-01, 2.5566e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0052, 0.9948], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3348, 0.6652], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4868, 0.5132], device='cuda:0')
Validation Output torch.Size([2]) tensor([7.8089e-04, 9.9922e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0984, 0.9016], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1080, 0.8920], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 54.167% (loss: 1.925) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0189, 0.9811], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1167, 0.8833], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 8, Training ones: 16 / 18
INFO:root:[  136] train: 87.222% test: 52.083%
INFO:root:Accuracy: 0.88571, Precision: 0.87013, Recall: 0.97101, F1: 0.91781
INFO:root:Val Accuracy: 0.53846, Precision: 0.61111, Recall: 0.68750, F1: 0.64706
INFO:root:F1: 0.64706 did not improve from 0.800000011920929
INFO:root:Epoch 137
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9881, 0.0119], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0645, 0.9355], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0697, 0.9303], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0080, 0.9920], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0072, 0.9928], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1164, 0.8836], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0042, 0.9958], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1502e-04, 9.9988e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0028, 0.9972], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0383, 0.9617], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0238, 0.9762], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0176, 0.9824], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0389, 0.9611], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9922e-01, 7.7785e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0043, 0.9957], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0039, 0.9961], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 7.4694e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0284, 0.9716], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9944, 0.0056], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0282, 0.9718], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.021) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0039, 0.9961], device='cuda:0')
Training Output torch.Size([2]) tensor([7.3361e-04, 9.9927e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0044, 0.9956], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.3340e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3191, 0.6809], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9995e-01, 4.7206e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0926, 0.9074], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9966e-01, 3.3930e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0102, 0.9898], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0025, 0.9975], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0081, 0.9919], device='cuda:0')
Training Output torch.Size([2]) tensor([1.5237e-04, 9.9985e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.3645e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0212, 0.9788], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0071, 0.9929], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9931e-01, 6.8651e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0388, 0.9612], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9973e-01, 2.7319e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0053, 0.9947], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9974, 0.0026], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0073, 0.9927], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0688, 0.9312], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0469, 0.9531], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0134, 0.9866], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1466, 0.8534], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9985e-01, 1.5267e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1515, 0.8485], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9938e-01, 6.2389e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1329, 0.8671], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0623, 0.9377], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0862, 0.9138], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9989e-01, 1.0932e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1186, 0.8814], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5579, 0.4421], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0103, 0.9897], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0099, 0.9901], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0360, 0.9640], device='cuda:0')
Training Output torch.Size([2]) tensor([1.8741e-04, 9.9981e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0071, 0.9929], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0457, 0.9543], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0544, 0.9456], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0171, 0.9829], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0023, 0.9977], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0658, 0.9342], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8952, 0.1048], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0078, 0.9922], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0134, 0.9866], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9933e-01, 6.6670e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 1.5628e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0126, 0.9874], device='cuda:0')
Training Output torch.Size([2]) tensor([9.2719e-04, 9.9907e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0031, 0.9969], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0228, 0.9772], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0130, 0.9870], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9992e-01, 7.6025e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 3.8670e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9961e-01, 3.8521e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([4.4509e-04, 9.9955e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9963e-01, 3.7191e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([1.9373e-04, 9.9981e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0288, 0.9712], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9926e-01, 7.4081e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 6.5404e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0056, 0.9944], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0045, 0.9955], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9952, 0.0048], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.2829e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1497, 0.8503], device='cuda:0')
Training Output torch.Size([2]) tensor([5.7143e-04, 9.9943e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.4972e-04, 9.9975e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.2933e-04, 9.9927e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0030, 0.9970], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.1189e-06], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 26, Training ones: 69 / 79
outputs torch.Size([24]) tensor([0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.5702, 0.4298], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9831, 0.0169], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0792, 0.9208], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2264, 0.7736], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9858, 0.0142], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1412, 0.8588], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0184, 0.9816], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.3552e-04, 9.9986e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8806, 0.1194], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0812, 0.9188], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7614, 0.2386], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0049, 0.9951], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0268, 0.9732], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0061, 0.9939], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0056, 0.9944], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9998e-01, 1.6442e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9113, 0.0887], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9998e-01, 2.2299e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3543, 0.6457], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5189, 0.4811], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1124, 0.8876], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1228, 0.8772], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 58.333% (loss: 1.902) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0208, 0.9792], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1247, 0.8753], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 9, Training ones: 16 / 17
INFO:root:[  137] train: 90.000% test: 54.167%
INFO:root:Accuracy: 0.88571, Precision: 0.86076, Recall: 0.98551, F1: 0.91892
INFO:root:Val Accuracy: 0.57692, Precision: 0.64706, Recall: 0.68750, F1: 0.66667
INFO:root:F1: 0.66667 did not improve from 0.800000011920929
INFO:root:Epoch 138
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.1569e-04, 9.9958e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9571, 0.0429], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0362, 0.9638], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1057, 0.8943], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0137, 0.9863], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0101, 0.9899], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0173, 0.9827], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0123, 0.9877], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0061, 0.9939], device='cuda:0')
Training Output torch.Size([2]) tensor([3.8597e-04, 9.9961e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0086, 0.9914], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0054, 0.9946], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 9.4792e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([2.0825e-04, 9.9979e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0029, 0.9971], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3428, 0.6572], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1645, 0.8355], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0171, 0.9829], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9118, 0.0882], device='cuda:0')
Training Output torch.Size([2]) tensor([6.8117e-04, 9.9932e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0234, 0.9766], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0236, 0.9764], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 95.833% (loss: 0.070) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.9460e-04, 9.9931e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0096, 0.9904], device='cuda:0')
Training Output torch.Size([2]) tensor([1.6475e-04, 9.9984e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0121, 0.9879], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 5.6484e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 1.1126e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9800, 0.0200], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9645, 0.0355], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5331, 0.4669], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0040, 0.9960], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0332, 0.9668], device='cuda:0')
Training Output torch.Size([2]) tensor([4.9942e-04, 9.9950e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0188, 0.9812], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0318, 0.9682], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.1865e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0120, 0.9880], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9958e-01, 4.1650e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9978, 0.0022], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4143, 0.5857], device='cuda:0')
Training Output torch.Size([2]) tensor([7.2225e-04, 9.9928e-01], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2175, 0.7825], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1729, 0.8271], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9469, 0.0531], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9971, 0.0029], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0236, 0.9764], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9986, 0.0014], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2507, 0.7493], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0256, 0.9744], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0092, 0.9908], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0336, 0.9664], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0030, 0.9970], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9962e-01, 3.7629e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7097, 0.2903], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0042, 0.9958], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8652, 0.1348], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0058, 0.9942], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2058, 0.7942], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0071, 0.9929], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0123, 0.9877], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0054, 0.9946], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0353, 0.9647], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8099, 0.1901], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0305, 0.9695], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1247, 0.8753], device='cuda:0')
Training Output torch.Size([2]) tensor([2.2517e-04, 9.9977e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0077, 0.9923], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0218, 0.9782], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0285, 0.9715], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9991e-01, 9.1702e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9930, 0.0070], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0080, 0.9920], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0036, 0.9964], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0420, 0.9580], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0123, 0.9877], device='cuda:0')
Training Output torch.Size([2]) tensor([3.0238e-04, 9.9970e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9988e-01, 1.2461e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9996e-01, 3.6054e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9982e-01, 1.8023e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0033, 0.9967], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9829, 0.0171], device='cuda:0')
Training Output torch.Size([2]) tensor([7.9939e-04, 9.9920e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0172, 0.9828], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9945e-01, 5.5170e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.7811e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0284, 0.9716], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0127, 0.9873], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0083, 0.9917], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9982, 0.0018], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9975, 0.0025], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0228, 0.9772], device='cuda:0')
Training Output torch.Size([2]) tensor([1.6964e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Output torch.Size([2]) tensor([9.6034e-04, 9.9904e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1733, 0.8267], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 28, Training ones: 69 / 77
outputs torch.Size([24]) tensor([0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.6288, 0.3712], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9875, 0.0125], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0904, 0.9096], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2555, 0.7445], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9998e-01, 1.7097e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1594, 0.8406], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0200, 0.9800], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.5356e-04, 9.9985e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8993, 0.1007], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0925, 0.9075], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8044, 0.1956], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0056, 0.9944], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0297, 0.9703], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0069, 0.9931], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0334, 0.9666], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9999e-01, 1.3420e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9310, 0.0690], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9998e-01, 1.8487e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0063, 0.9937], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3910, 0.6090], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5698, 0.4302], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1278, 0.8722], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1422, 0.8578], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 58.333% (loss: 1.926) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0230, 0.9770], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1379, 0.8621], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 9, Training ones: 16 / 17
INFO:root:[  138] train: 88.611% test: 54.167%
INFO:root:Accuracy: 0.88571, Precision: 0.87013, Recall: 0.97101, F1: 0.91781
INFO:root:Val Accuracy: 0.57692, Precision: 0.64706, Recall: 0.68750, F1: 0.66667
INFO:root:F1: 0.66667 did not improve from 0.800000011920929
INFO:root:Epoch 139
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0074, 0.9926], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8349, 0.1651], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0074, 0.9926], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0087, 0.9913], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0169, 0.9831], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0130, 0.9870], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0159, 0.9841], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0054, 0.9946], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0029, 0.9971], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9988e-01, 1.1890e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([1.6571e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0159, 0.9841], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 2.3369e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0038, 0.9962], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0765, 0.9235], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0241, 0.9759], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0093, 0.9907], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0300, 0.9700], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 95.833% (loss: 0.122) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0068, 0.9932], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0062, 0.9938], device='cuda:0')
Training Output torch.Size([2]) tensor([9.0634e-05, 9.9991e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0321, 0.9679], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9964e-01, 3.6401e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7654, 0.2346], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0471, 0.9529], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 2.6737e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9808, 0.0192], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2965, 0.7035], device='cuda:0')
Training Output torch.Size([2]) tensor([6.3001e-04, 9.9937e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1317, 0.8683], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([7.5728e-05, 9.9992e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0191, 0.9809], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0155, 0.9845], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 2.8181e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0109, 0.9891], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9984e-01, 1.5537e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6493, 0.3507], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 4.9370e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0588, 0.9412], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0613, 0.9387], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0985, 0.9015], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0033, 0.9967], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2629, 0.7371], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9833, 0.0167], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0781, 0.9219], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9866, 0.0134], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1551, 0.8449], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0474, 0.9526], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7613, 0.2387], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0425, 0.9575], device='cuda:0')
Training Output torch.Size([2]) tensor([9.2719e-04, 9.9907e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9986, 0.0014], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1291, 0.8709], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0948, 0.9052], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9097, 0.0903], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0301, 0.9699], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0151, 0.9849], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9675, 0.0325], device='cuda:0')
Training Output torch.Size([2]) tensor([4.1977e-04, 9.9958e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0320, 0.9680], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0715, 0.9285], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1056, 0.8944], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0029, 0.9971], device='cuda:0')
Training Output torch.Size([2]) tensor([1.9602e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0213, 0.9787], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0239, 0.9761], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0725, 0.9275], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 5.0632e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9995e-01, 5.1242e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0112, 0.9888], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0043, 0.9957], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0084, 0.9916], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0102, 0.9898], device='cuda:0')
Training Output torch.Size([2]) tensor([2.1402e-04, 9.9979e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9679, 0.0321], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 7.8727e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9989, 0.0011], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9988, 0.0012], device='cuda:0')
Training Output torch.Size([2]) tensor([2.5070e-04, 9.9975e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0125, 0.9875], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9965, 0.0035], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 2.7853e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0113, 0.9887], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0130, 0.9870], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9695, 0.0305], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 3.4064e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2120, 0.7880], device='cuda:0')
Training Output torch.Size([2]) tensor([1.4064e-05, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.1381e-04, 9.9969e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.4546e-05, 9.9995e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0051, 0.9949], device='cuda:0')
Training Output torch.Size([2]) tensor([8.5423e-04, 9.9915e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 2.6370e-07], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 28, Training ones: 69 / 77
outputs torch.Size([24]) tensor([0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7125, 0.2875], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9915, 0.0085], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1159, 0.8841], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3163, 0.6837], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9958e-01, 4.2388e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1911, 0.8089], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0232, 0.9768], device='cuda:0')
Validation Output torch.Size([2]) tensor([1.8307e-04, 9.9982e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9223, 0.0777], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1204, 0.8796], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8518, 0.1482], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0067, 0.9933], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0353, 0.9647], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0083, 0.9917], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0098, 0.9902], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9999e-01, 1.0534e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9515, 0.0485], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9999e-01, 1.4398e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0074, 0.9926], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4632, 0.5368], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6479, 0.3521], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1570, 0.8430], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1805, 0.8195], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 58.333% (loss: 1.942) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0273, 0.9727], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1592, 0.8408], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 9, Training ones: 16 / 17
INFO:root:[  139] train: 91.667% test: 54.167%
INFO:root:Accuracy: 0.90476, Precision: 0.88312, Recall: 0.98551, F1: 0.93151
INFO:root:Val Accuracy: 0.57692, Precision: 0.64706, Recall: 0.68750, F1: 0.66667
INFO:root:F1: 0.66667 did not improve from 0.800000011920929
INFO:root:Epoch 140
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0051, 0.9949], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9994e-01, 5.8291e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0083, 0.9917], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0706, 0.9294], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0058, 0.9942], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0169, 0.9831], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0133, 0.9867], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0369, 0.9631], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1451, 0.8549], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0081, 0.9919], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0147, 0.9853], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0105, 0.9895], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9981, 0.0019], device='cuda:0')
Training Output torch.Size([2]) tensor([2.4111e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0104, 0.9896], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3636, 0.6364], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0422, 0.9578], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1866, 0.8134], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0144, 0.9856], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2074, 0.7926], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0109, 0.9891], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 91.667% (loss: 0.140) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0120, 0.9880], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0298, 0.9702], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0759, 0.9241], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0092, 0.9908], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 7.8893e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9825, 0.0175], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9980e-01, 1.9872e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9978, 0.0022], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1363, 0.8637], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0270, 0.9730], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0046, 0.9954], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0252, 0.9748], device='cuda:0')
Training Output torch.Size([2]) tensor([6.3001e-04, 9.9937e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.2141e-04, 9.9958e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0161, 0.9839], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0039, 0.9961], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9978, 0.0022], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0148, 0.9852], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4294, 0.5706], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0250, 0.9750], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9921e-01, 7.8547e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0843, 0.9157], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0191, 0.9809], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2549, 0.7451], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0512, 0.9488], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9956, 0.0044], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3022, 0.6978], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0811, 0.9189], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2187, 0.7813], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0116, 0.9884], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0912, 0.9088], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3403, 0.6597], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0132, 0.9868], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0117, 0.9883], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9948, 0.0052], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0143, 0.9857], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4950, 0.5050], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1083, 0.8917], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0412, 0.9588], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0067, 0.9933], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0122, 0.9878], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0045, 0.9955], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9988, 0.0012], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0304, 0.9696], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0639, 0.9361], device='cuda:0')
Training Output torch.Size([2]) tensor([7.0719e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.0566e-04, 9.9919e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0368, 0.9632], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0343, 0.9657], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 6.9351e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 4.0452e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0898, 0.9102], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Training Output torch.Size([2]) tensor([7.0141e-04, 9.9930e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0067, 0.9933], device='cuda:0')
Training Output torch.Size([2]) tensor([3.9666e-04, 9.9960e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9928e-01, 7.1803e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.6408e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 2.2562e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0523, 0.9477], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9993e-01, 7.4993e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([5.3474e-04, 9.9947e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0346, 0.9654], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8775, 0.1225], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2203, 0.7797], device='cuda:0')
Training Output torch.Size([2]) tensor([7.7222e-05, 9.9992e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0029, 0.9971], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0573, 0.9427], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9986, 0.0014], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 4.4777e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6054, 0.3946], device='cuda:0')
Training Output torch.Size([2]) tensor([4.1246e-04, 9.9959e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.5021e-04, 9.9975e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.6539e-04, 9.9983e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0527, 0.9473], device='cuda:0')
Training Output torch.Size([2]) tensor([9.1105e-04, 9.9909e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2062, 0.7938], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 21, Training ones: 69 / 84
outputs torch.Size([24]) tensor([0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7956, 0.2044], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9946, 0.0054], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1558, 0.8442], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3997, 0.6003], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9956e-01, 4.4076e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2326, 0.7674], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0272, 0.9728], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.1995e-04, 9.9978e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9429, 0.0571], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1628, 0.8372], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.8958, 0.1042], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0083, 0.9917], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0428, 0.9572], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0102, 0.9898], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0060, 0.9940], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9999e-01, 7.8585e-06], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9682, 0.0318], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9999e-01, 1.0699e-05], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0088, 0.9912], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5583, 0.4417], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7344, 0.2656], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1995, 0.8005], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2342, 0.7658], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 62.500% (loss: 1.982) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0328, 0.9672], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1888, 0.8112], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 10, Training ones: 16 / 16
INFO:root:[  140] train: 83.056% test: 56.250%
INFO:root:Accuracy: 0.83810, Precision: 0.80952, Recall: 0.98551, F1: 0.88889
INFO:root:Val Accuracy: 0.61538, Precision: 0.68750, Recall: 0.68750, F1: 0.68750
INFO:root:F1: 0.68750 did not improve from 0.800000011920929
INFO:root:Epoch 141
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9990, 0.0010], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1503, 0.8497], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0295, 0.9705], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1011, 0.8989], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0189, 0.9811], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0213, 0.9787], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0260, 0.9740], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0088, 0.9912], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0064, 0.9936], device='cuda:0')
Training Output torch.Size([2]) tensor([6.4873e-04, 9.9935e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.6800e-04, 9.9983e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0072, 0.9928], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0056, 0.9944], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9973e-01, 2.7106e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([4.5033e-04, 9.9955e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9027, 0.0973], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0020, 0.9980], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0135, 0.9865], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9879, 0.0121], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0074, 0.9926], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0041, 0.9959], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.023) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1615, 0.8385], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1680, 0.8320], device='cuda:0')
Training Output torch.Size([2]) tensor([5.0432e-04, 9.9950e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0174, 0.9826], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9436, 0.0564], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9960e-01, 3.9744e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9936e-01, 6.4118e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9986, 0.0014], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 2.3278e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0035, 0.9965], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0076, 0.9924], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0063, 0.9937], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0031, 0.9969], device='cuda:0')
Training Output torch.Size([2]) tensor([2.9596e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0189, 0.9811], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0039, 0.9961], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 1.2124e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.6409e-04, 9.9904e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1477, 0.8523], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8524, 0.1476], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0182, 0.9818], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 5.6927e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0937, 0.9063], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3181, 0.6819], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0658, 0.9342], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9525, 0.0475], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0550, 0.9450], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9928, 0.0072], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0711, 0.9289], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4423, 0.5577], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3277, 0.6723], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0552, 0.9448], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6175, 0.3825], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0361, 0.9639], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0094, 0.9906], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9892, 0.0108], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0218, 0.9782], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3088, 0.6912], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3005, 0.6995], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9937, 0.0063], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0412, 0.9588], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1009, 0.8991], device='cuda:0')
Training Output torch.Size([2]) tensor([9.4983e-05, 9.9990e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0079, 0.9921], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0195, 0.9805], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1323, 0.8677], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0143, 0.9857], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Training Output torch.Size([2]) tensor([1.7779e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.3399e-05, 9.9993e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0223, 0.9777], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0140, 0.9860], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9988, 0.0012], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9640, 0.0360], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0439, 0.9561], device='cuda:0')
Training Output torch.Size([2]) tensor([4.1488e-04, 9.9959e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0396, 0.9604], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0076, 0.9924], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0029, 0.9971], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 3.9825e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.0430e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9994e-01, 6.1089e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0162, 0.9838], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 1.7571e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([1.4314e-04, 9.9986e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0381, 0.9619], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9970e-01, 3.0120e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 3.4064e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0036, 0.9964], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0081, 0.9919], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0134, 0.9866], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9953e-01, 4.6553e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.4940e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0055, 0.9945], device='cuda:0')
Training Output torch.Size([2]) tensor([4.1497e-05, 9.9996e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0230e-04, 9.9990e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0029, 0.9971], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9967e-01, 3.3144e-04], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 28, Training ones: 69 / 77
outputs torch.Size([24]) tensor([0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.8382, 0.1618], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9959, 0.0041], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1857, 0.8143], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4543, 0.5457], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9926, 0.0074], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2608, 0.7392], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0297, 0.9703], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.4537e-04, 9.9975e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9527, 0.0473], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1992, 0.8008], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9189, 0.0811], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0095, 0.9905], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0478, 0.9522], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0116, 0.9884], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0062, 0.9938], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9999e-01, 6.4390e-06], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9753, 0.0247], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9999e-01, 8.8011e-06], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0098, 0.9902], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6180, 0.3820], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7827, 0.2173], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2326, 0.7674], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2721, 0.7279], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 62.500% (loss: 2.005) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0366, 0.9634], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2118, 0.7882], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 10, Training ones: 16 / 16
INFO:root:[  141] train: 91.667% test: 56.250%
INFO:root:Accuracy: 0.90476, Precision: 0.88312, Recall: 0.98551, F1: 0.93151
INFO:root:Val Accuracy: 0.61538, Precision: 0.68750, Recall: 0.68750, F1: 0.68750
INFO:root:F1: 0.68750 did not improve from 0.800000011920929
INFO:root:Epoch 142
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0587, 0.9413], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 1.9074e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0424, 0.9576], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0141, 0.9859], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0155, 0.9845], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0099, 0.9901], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1070, 0.8930], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0031, 0.9969], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0526, 0.9474], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0023, 0.9977], device='cuda:0')
Training Output torch.Size([2]) tensor([6.8149e-05, 9.9993e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0069, 0.9931], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0081, 0.9919], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9934, 0.0066], device='cuda:0')
Training Output torch.Size([2]) tensor([8.3171e-05, 9.9992e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0166, 0.9834], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 1.6964e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0206, 0.9794], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9596, 0.0404], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0773, 0.9227], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0119, 0.9881], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0326, 0.9674], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.023) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0094, 0.9906], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0179, 0.9821], device='cuda:0')
Training Output torch.Size([2]) tensor([2.6738e-04, 9.9973e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2537, 0.7463], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 3.5979e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9996e-01, 3.9289e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9963e-01, 3.7410e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9848, 0.0152], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9994e-01, 6.0142e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0413, 0.9587], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0400, 0.9600], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0186, 0.9814], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0081, 0.9919], device='cuda:0')
Training Output torch.Size([2]) tensor([2.3553e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0215, 0.9785], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0079, 0.9921], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.0553e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0049, 0.9951], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1747, 0.8253], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9947e-01, 5.2851e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0065, 0.9935], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9946e-01, 5.4421e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0804, 0.9196], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2529, 0.7471], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1566, 0.8434], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9565, 0.0435], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9833, 0.0167], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3370, 0.6630], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0141, 0.9859], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9812, 0.0188], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0389, 0.9611], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0619, 0.9381], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0698, 0.9302], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0170, 0.9830], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0132, 0.9868], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8407, 0.1593], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0255, 0.9745], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0152, 0.9848], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0389, 0.9611], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0155, 0.9845], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0219, 0.9781], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1027, 0.8973], device='cuda:0')
Training Output torch.Size([2]) tensor([2.1486e-04, 9.9979e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0390, 0.9610], device='cuda:0')
Training Output torch.Size([2]) tensor([6.7984e-04, 9.9932e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9985, 0.0015], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9965, 0.0035], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0063, 0.9937], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0087, 0.9913], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0051, 0.9949], device='cuda:0')
Training Output torch.Size([2]) tensor([2.1153e-04, 9.9979e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0720, 0.9280], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2709, 0.7291], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.2980e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 5.1631e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0115, 0.9885], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0432e-04, 9.9990e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0173, 0.9827], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0521, 0.9479], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0027, 0.9973], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9884, 0.0116], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.0148e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9976e-01, 2.4110e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0198, 0.9802], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9896, 0.0104], device='cuda:0')
Training Output torch.Size([2]) tensor([4.7656e-04, 9.9952e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0155, 0.9845], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9983e-01, 1.7265e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9922, 0.0078], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0173, 0.9827], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9975, 0.0025], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9995e-01, 5.4546e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0124, 0.9876], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0149, 0.9851], device='cuda:0')
Training Output torch.Size([2]) tensor([5.5494e-04, 9.9945e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0070, 0.9930], device='cuda:0')
Training Output torch.Size([2]) tensor([5.3161e-04, 9.9947e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0095, 0.9905], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 28, Training ones: 69 / 77
outputs torch.Size([24]) tensor([0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.8442, 0.1558], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9961, 0.0039], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1922, 0.8078], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4651, 0.5349], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9857, 0.0143], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2652, 0.7348], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0299, 0.9701], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.5021e-04, 9.9975e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9542, 0.0458], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2059, 0.7941], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9223, 0.0777], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0097, 0.9903], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0484, 0.9516], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0118, 0.9882], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0210, 0.9790], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9999e-01, 6.1442e-06], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9764, 0.0236], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9999e-01, 8.3981e-06], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0099, 0.9901], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6310, 0.3690], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7893, 0.2107], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0029, 0.9971], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2414, 0.7586], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2814, 0.7186], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 62.500% (loss: 2.017) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0371, 0.9629], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2133, 0.7867], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 10, Training ones: 16 / 16
INFO:root:[  142] train: 90.278% test: 56.250%
INFO:root:Accuracy: 0.90476, Precision: 0.88312, Recall: 0.98551, F1: 0.93151
INFO:root:Val Accuracy: 0.61538, Precision: 0.68750, Recall: 0.68750, F1: 0.68750
INFO:root:F1: 0.68750 did not improve from 0.800000011920929
INFO:root:Epoch 143
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9969e-01, 3.1442e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0310, 0.9690], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1073, 0.8927], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0209, 0.9791], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0215, 0.9785], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0109, 0.9891], device='cuda:0')
Training Output torch.Size([2]) tensor([2.7106e-04, 9.9973e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0193, 0.9807], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Output torch.Size([2]) tensor([1.6865e-04, 9.9983e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0249, 0.9751], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9986, 0.0014], device='cuda:0')
Training Output torch.Size([2]) tensor([3.5558e-04, 9.9964e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9798, 0.0202], device='cuda:0')
Training Output torch.Size([2]) tensor([6.4747e-04, 9.9935e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0134, 0.9866], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9997e-01, 2.5268e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0020, 0.9980], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0888, 0.9112], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0823, 0.9177], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.020) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0028, 0.9972], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0186, 0.9814], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0193, 0.9807], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0381, 0.9619], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9840, 0.0160], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9866, 0.0134], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0455, 0.9545], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9967, 0.0033], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0534, 0.9466], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0105, 0.9895], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1754, 0.8246], device='cuda:0')
Training Output torch.Size([2]) tensor([8.8650e-04, 9.9911e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.2293e-05, 9.9994e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0180, 0.9820], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0030, 0.9970], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3449, 0.6551], device='cuda:0')
Training Output torch.Size([2]) tensor([3.5697e-04, 9.9964e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0560, 0.9440], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9927e-01, 7.2507e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0162, 0.9838], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9996e-01, 4.1014e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0095, 0.9905], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0934, 0.9066], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0539, 0.9461], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3616, 0.6384], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9922e-01, 7.7633e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9824, 0.0176], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0170, 0.9830], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9372, 0.0628], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1278, 0.8722], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2019, 0.7981], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0433, 0.9567], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8157, 0.1843], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5447, 0.4553], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3076, 0.6924], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3573, 0.6427], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4111, 0.5889], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0268, 0.9732], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0028, 0.9972], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0109, 0.9891], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0064, 0.9936], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0113, 0.9887], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0127, 0.9873], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7033, 0.2967], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0308, 0.9692], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0138, 0.9862], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0108, 0.9892], device='cuda:0')
Training Output torch.Size([2]) tensor([5.7032e-04, 9.9943e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.7193e-04, 9.9953e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0281, 0.9719], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0572, 0.9428], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9978e-01, 2.1782e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9929e-01, 7.0691e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0577, 0.9423], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0250, 0.9750], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0027, 0.9973], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0063, 0.9937], device='cuda:0')
Training Output torch.Size([2]) tensor([5.7703e-04, 9.9942e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9996e-01, 4.3489e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9996e-01, 4.4173e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 1.2805e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0204, 0.9796], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 8.6647e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0212, 0.9788], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9930e-01, 7.0141e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9949e-01, 5.1026e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0248, 0.9752], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2498, 0.7502], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0182, 0.9818], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9989e-01, 1.1457e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9983, 0.0017], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0036, 0.9964], device='cuda:0')
Training Output torch.Size([2]) tensor([1.6156e-04, 9.9984e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0020, 0.9980], device='cuda:0')
Training Output torch.Size([2]) tensor([3.4537e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.4480e-06], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 26, Training ones: 69 / 79
outputs torch.Size([24]) tensor([0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.8473, 0.1527], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9962, 0.0038], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1967, 0.8033], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4713, 0.5287], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9918, 0.0082], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2683, 0.7317], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0302, 0.9698], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.5916e-04, 9.9974e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9556, 0.0444], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2121, 0.7879], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9245, 0.0755], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0101, 0.9899], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0489, 0.9511], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0122, 0.9878], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0083, 0.9917], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9999e-01, 6.0253e-06], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9768, 0.0232], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9999e-01, 8.2356e-06], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0101, 0.9899], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6390, 0.3610], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7935, 0.2065], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0030, 0.9970], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2514, 0.7486], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2886, 0.7114], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 62.500% (loss: 2.017) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0376, 0.9624], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2158, 0.7842], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 10, Training ones: 16 / 16
INFO:root:[  143] train: 90.000% test: 56.250%
INFO:root:Accuracy: 0.88571, Precision: 0.86076, Recall: 0.98551, F1: 0.91892
INFO:root:Val Accuracy: 0.61538, Precision: 0.68750, Recall: 0.68750, F1: 0.68750
INFO:root:F1: 0.68750 did not improve from 0.800000011920929
INFO:root:Epoch 144
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.6686e-04, 9.9963e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9958e-01, 4.1977e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0212, 0.9788], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0522, 0.9478], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0338, 0.9662], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0054, 0.9946], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0194, 0.9806], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0126, 0.9874], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1009, 0.8991], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0123, 0.9877], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([4.5754e-05, 9.9995e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0466, 0.9534], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0168, 0.9832], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9990, 0.0010], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0029, 0.9971], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1669, 0.8331], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9980e-01, 1.9872e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([5.6588e-04, 9.9943e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0103, 0.9897], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 8.5303e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0056, 0.9944], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0125, 0.9875], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0353, 0.9647], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.024) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0786, 0.9214], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4056, 0.5944], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9995e-01, 5.1442e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9668, 0.0332], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9924e-01, 7.5688e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9577, 0.0423], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9979, 0.0021], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0051, 0.9949], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0138, 0.9862], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0999, 0.9001], device='cuda:0')
Training Output torch.Size([2]) tensor([2.1030e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0088, 0.9912], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0062, 0.9938], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 2.8240e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([7.3075e-04, 9.9927e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1936, 0.8064], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9909e-01, 9.1461e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0034, 0.9966], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.2829e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2508, 0.7492], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0244, 0.9756], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0223, 0.9777], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9955, 0.0045], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0724, 0.9276], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8136, 0.1864], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0538, 0.9462], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9375, 0.0625], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0114, 0.9886], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6139, 0.3861], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4807, 0.5193], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0145, 0.9855], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0069, 0.9931], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 1.1479e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0041, 0.9959], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0230, 0.9770], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3760, 0.6240], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0150, 0.9850], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0173, 0.9827], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0124, 0.9876], device='cuda:0')
Training Output torch.Size([2]) tensor([3.6259e-04, 9.9964e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0111, 0.9889], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0173, 0.9827], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9184, 0.0816], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0020, 0.9980], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0121, 0.9879], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([3.1202e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0178, 0.9822], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0820, 0.9180], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9433, 0.0567], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 1.0575e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0113, 0.9887], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0326, 0.9674], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0069, 0.9931], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9966, 0.0034], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.0635e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9851, 0.0149], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9911, 0.0089], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3658e-04, 9.9986e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0270, 0.9730], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9977, 0.0023], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 1.5690e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0138, 0.9862], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0186, 0.9814], device='cuda:0')
Training Output torch.Size([2]) tensor([7.7633e-04, 9.9922e-01], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9996e-01, 3.9597e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.8593e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([5.3683e-04, 9.9946e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.2342e-04, 9.9978e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1018, 0.8982], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0170, 0.9830], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0030, 0.9970], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9979e-01, 2.0866e-04], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 29, Training ones: 69 / 76
outputs torch.Size([24]) tensor([0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.8418, 0.1582], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9960, 0.0040], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1929, 0.8071], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4641, 0.5359], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9306, 0.0694], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2644, 0.7356], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0298, 0.9702], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.5714e-04, 9.9974e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9547, 0.0453], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2071, 0.7929], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9222, 0.0778], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0101, 0.9899], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0481, 0.9519], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0121, 0.9879], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0083, 0.9917], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9999e-01, 6.1202e-06], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9761, 0.0239], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9999e-01, 8.3653e-06], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0100, 0.9900], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6335, 0.3665], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7870, 0.2130], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2516, 0.7484], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2863, 0.7137], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 62.500% (loss: 2.044) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0371, 0.9629], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2114, 0.7886], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 10, Training ones: 16 / 16
INFO:root:[  144] train: 92.500% test: 56.250%
INFO:root:Accuracy: 0.91429, Precision: 0.89474, Recall: 0.98551, F1: 0.93793
INFO:root:Val Accuracy: 0.61538, Precision: 0.68750, Recall: 0.68750, F1: 0.68750
INFO:root:F1: 0.68750 did not improve from 0.800000011920929
INFO:root:Epoch 145
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.8823e-04, 9.9911e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.7331e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0363, 0.9637], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0082, 0.9918], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0043, 0.9957], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0241, 0.9759], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0058, 0.9942], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0346, 0.9654], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0154, 0.9846], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0062, 0.9938], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3201, 0.6799], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0078, 0.9922], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9994e-01, 5.9674e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([5.8156e-04, 9.9942e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1720, 0.8280], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9969e-01, 3.0774e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0257, 0.9743], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0047, 0.9953], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9993e-01, 6.6311e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1216, 0.8784], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9396, 0.0604], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 95.833% (loss: 0.154) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0072, 0.9928], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0347, 0.9653], device='cuda:0')
Training Output torch.Size([2]) tensor([3.5144e-04, 9.9965e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0161, 0.9839], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 6.0726e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9979e-01, 2.1360e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5778, 0.4222], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9053, 0.0947], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 1.0090e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0064, 0.9936], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0093, 0.9907], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0763e-04, 9.9989e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0280, 0.9720], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9818, 0.0182], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0042, 0.9958], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0748, 0.9252], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9995e-01, 5.3075e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3172, 0.6828], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9995e-01, 4.9087e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0170, 0.9830], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0262, 0.9738], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0027, 0.9973], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7444, 0.2556], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8961, 0.1039], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9962e-01, 3.8371e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0136, 0.9864], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5195, 0.4805], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0624, 0.9376], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7168, 0.2832], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9673, 0.0327], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0638, 0.9362], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1264, 0.8736], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5630, 0.4370], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0044, 0.9956], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1487, 0.8513], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1078, 0.8922], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0671, 0.9329], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0754, 0.9246], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0673, 0.9327], device='cuda:0')
Training Output torch.Size([2]) tensor([2.0027e-04, 9.9980e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0858, 0.9142], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0123, 0.9877], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1243, 0.8757], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1073, 0.8927], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0029, 0.9971], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0244, 0.9756], device='cuda:0')
Training Output torch.Size([2]) tensor([9.2958e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.2436e-04, 9.9988e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0187, 0.9813], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0258, 0.9742], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9926e-01, 7.4370e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9992e-01, 7.6621e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0160, 0.9840], device='cuda:0')
Training Output torch.Size([2]) tensor([7.7222e-05, 9.9992e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1361, 0.8639], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0066, 0.9934], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0010, 0.9990], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 2.0225e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9907e-01, 9.2719e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9967, 0.0033], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0097, 0.9903], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1178, 0.8822], device='cuda:0')
Training Output torch.Size([2]) tensor([6.5000e-04, 9.9935e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9921e-01, 7.9163e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 7.6167e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1609, 0.8391], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0031, 0.9969], device='cuda:0')
Training Output torch.Size([2]) tensor([4.4596e-04, 9.9955e-01], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8747, 0.1253], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 8.8171e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Output torch.Size([2]) tensor([5.0843e-05, 9.9995e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.1105e-04, 9.9909e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0052, 0.9948], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1615, 0.8385], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0085, 0.9915], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 4.9370e-06], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 30, Training ones: 69 / 75
outputs torch.Size([24]) tensor([0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.8385, 0.1615], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9960, 0.0040], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1915, 0.8085], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4609, 0.5391], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9922e-01, 7.7937e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2609, 0.7391], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0295, 0.9705], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.5514e-04, 9.9974e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9541, 0.0459], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2044, 0.7956], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9200, 0.0800], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0100, 0.9900], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0477, 0.9523], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0121, 0.9879], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1702, 0.8298], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9999e-01, 6.1924e-06], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9757, 0.0243], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9999e-01, 8.4971e-06], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0100, 0.9900], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6297, 0.3703], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7837, 0.2163], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0029, 0.9971], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2512, 0.7488], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2854, 0.7146], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 62.500% (loss: 2.018) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0369, 0.9631], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2087, 0.7913], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 10, Training ones: 16 / 16
INFO:root:[  145] train: 91.667% test: 56.250%
INFO:root:Accuracy: 0.90476, Precision: 0.89333, Recall: 0.97101, F1: 0.93056
INFO:root:Val Accuracy: 0.61538, Precision: 0.68750, Recall: 0.68750, F1: 0.68750
INFO:root:F1: 0.68750 did not improve from 0.800000011920929
INFO:root:Epoch 146
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8677, 0.1323], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0361, 0.9639], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0439, 0.9561], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0039, 0.9961], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0133, 0.9867], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0080, 0.9920], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0821, 0.9179], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0087, 0.9913], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0081, 0.9919], device='cuda:0')
Training Output torch.Size([2]) tensor([8.4100e-04, 9.9916e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.3819e-04, 9.9956e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0047, 0.9953], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0281, 0.9719], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9959, 0.0041], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0226, 0.9774], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 3.2126e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0354, 0.9646], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0275, 0.9725], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8864, 0.1136], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0167, 0.9833], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0704, 0.9296], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0920, 0.9080], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.033) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0020, 0.9980], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0055, 0.9945], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0047, 0.9953], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0120, 0.9880], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 6.9351e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9990e-01, 9.7235e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9831, 0.0169], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9873, 0.0127], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9881, 0.0119], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2323, 0.7677], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0056, 0.9944], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0117, 0.9883], device='cuda:0')
Training Output torch.Size([2]) tensor([2.1697e-04, 9.9978e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.8814e-04, 9.9981e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0126, 0.9874], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0069, 0.9931], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 2.2828e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0444, 0.9556], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0193, 0.9807], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9915, 0.0085], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2906, 0.7094], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 3.5146e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1040, 0.8960], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0527, 0.9473], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1230, 0.8770], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0257, 0.9743], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9477, 0.0523], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1854, 0.8146], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0366, 0.9634], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4603, 0.5397], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0242, 0.9758], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2310, 0.7690], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0794, 0.9206], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2234, 0.7766], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0517, 0.9483], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9988e-01, 1.1502e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0054, 0.9946], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0094, 0.9906], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4088, 0.5912], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2727, 0.7273], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0366, 0.9634], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4782, 0.5218], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0806, 0.9194], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0097, 0.9903], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4246, 0.5754], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4472, 0.5528], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9977e-01, 2.3186e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0054, 0.9946], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0150, 0.9850], device='cuda:0')
Training Output torch.Size([2]) tensor([6.9868e-04, 9.9930e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0847e-04, 9.9989e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0110, 0.9890], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4683, 0.5317], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9977e-01, 2.2517e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 3.3275e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0068, 0.9932], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1054, 0.8946], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0045, 0.9955], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 1.1936e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.6894e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 9.4422e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0229, 0.9771], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 5.3800e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([7.9939e-04, 9.9920e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0517, 0.9483], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9953, 0.0047], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 3.8449e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([2.2782e-04, 9.9977e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3138, 0.6862], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9689, 0.0311], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9996e-01, 4.2151e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0062, 0.9938], device='cuda:0')
Training Output torch.Size([2]) tensor([2.6119e-04, 9.9974e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.8691e-04, 9.9951e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.2782e-04, 9.9977e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2138, 0.7862], device='cuda:0')
Training Output torch.Size([2]) tensor([3.8073e-04, 9.9962e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 4.0525e-07], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 26, Training ones: 69 / 79
outputs torch.Size([24]) tensor([0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.8367, 0.1633], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9960, 0.0040], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1905, 0.8095], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4603, 0.5397], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9957e-01, 4.3478e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2582, 0.7418], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0293, 0.9707], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.5316e-04, 9.9975e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9536, 0.0464], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2028, 0.7972], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9184, 0.0816], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0100, 0.9900], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0473, 0.9527], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0120, 0.9880], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0097, 0.9903], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9999e-01, 6.1682e-06], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9756, 0.0244], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9999e-01, 8.4971e-06], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0099, 0.9901], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6274, 0.3726], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7826, 0.2174], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0029, 0.9971], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2502, 0.7498], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2851, 0.7149], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 62.500% (loss: 2.012) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0366, 0.9634], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2067, 0.7933], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 10, Training ones: 16 / 16
INFO:root:[  146] train: 90.000% test: 56.250%
INFO:root:Accuracy: 0.88571, Precision: 0.86076, Recall: 0.98551, F1: 0.91892
INFO:root:Val Accuracy: 0.61538, Precision: 0.68750, Recall: 0.68750, F1: 0.68750
INFO:root:F1: 0.68750 did not improve from 0.800000011920929
INFO:root:Epoch 147
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9997e-01, 3.1080e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3789, 0.6211], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0957, 0.9043], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0118, 0.9882], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0503, 0.9497], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0434, 0.9566], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7637, 0.2363], device='cuda:0')
Training Output torch.Size([2]) tensor([5.4209e-04, 9.9946e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0039, 0.9961], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0814, 0.9186], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3394e-04, 9.9987e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0937, 0.9063], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0059, 0.9941], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.8812e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([4.7936e-04, 9.9952e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0058, 0.9942], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9923e-01, 7.6580e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0257, 0.9743], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1080, 0.8920], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9985e-01, 1.5416e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0761, 0.9239], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1705, 0.8295], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0549, 0.9451], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 95.833% (loss: 0.116) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0469, 0.9531], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0167, 0.9833], device='cuda:0')
Training Output torch.Size([2]) tensor([3.5907e-04, 9.9964e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0366, 0.9634], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 2.8291e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9875, 0.0125], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8570, 0.1430], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9954, 0.0046], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9997e-01, 3.4002e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0087, 0.9913], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0040, 0.9960], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0155, 0.9845], device='cuda:0')
Training Output torch.Size([2]) tensor([3.9204e-04, 9.9961e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.5283e-05, 9.9993e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0173, 0.9827], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0069, 0.9931], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 3.9279e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0054, 0.9946], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1202, 0.8798], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9964e-01, 3.6259e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0812, 0.9188], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9908e-01, 9.2358e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0223, 0.9777], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0732, 0.9268], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2898, 0.7102], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0332, 0.9668], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2681, 0.7319], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0996, 0.9004], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0146, 0.9854], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1327, 0.8673], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2413, 0.7587], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2461, 0.7539], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8941, 0.1059], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0071, 0.9929], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0422, 0.9578], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9908, 0.0092], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1454, 0.8546], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1854, 0.8146], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2849, 0.7151], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3656, 0.6344], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0639, 0.9361], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0219, 0.9781], device='cuda:0')
Training Output torch.Size([2]) tensor([5.2049e-05, 9.9995e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0072, 0.9928], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0086, 0.9914], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7390, 0.2610], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0091, 0.9909], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0843, 0.9157], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0277, 0.9723], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0030, 0.9970], device='cuda:0')
Training Output torch.Size([2]) tensor([2.5021e-04, 9.9975e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0220, 0.9780], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0323, 0.9677], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 2.3049e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9978, 0.0022], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0301, 0.9699], device='cuda:0')
Training Output torch.Size([2]) tensor([9.1998e-04, 9.9908e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0116, 0.9884], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1084, 0.8916], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0024, 0.9976], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9957e-01, 4.2637e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 3.0471e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 2.2603e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([7.7029e-04, 9.9923e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9935e-01, 6.4873e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0094, 0.9906], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0448, 0.9552], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9925e-01, 7.4807e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9990e-01, 9.6856e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2950, 0.7050], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0283, 0.9717], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0056, 0.9944], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9968e-01, 3.2314e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 2.0580e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Training Output torch.Size([2]) tensor([1.5598e-04, 9.9984e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.3496e-05, 9.9992e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0817, 0.9183], device='cuda:0')
Training Output torch.Size([2]) tensor([7.3361e-04, 9.9927e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 9.9521e-07], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 27, Training ones: 69 / 78
outputs torch.Size([24]) tensor([0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.8321, 0.1679], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9959, 0.0041], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1869, 0.8131], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4548, 0.5452], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9980e-01, 2.0106e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2536, 0.7464], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0289, 0.9711], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.4826e-04, 9.9975e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9524, 0.0476], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1981, 0.8019], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9153, 0.0847], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0098, 0.9902], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0466, 0.9534], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0118, 0.9882], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0179, 0.9821], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9999e-01, 6.2654e-06], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9749, 0.0251], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9999e-01, 8.6986e-06], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0098, 0.9902], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6212, 0.3788], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7774, 0.2226], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2468, 0.7532], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2816, 0.7184], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 62.500% (loss: 2.036) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0361, 0.9639], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2028, 0.7972], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 10, Training ones: 16 / 16
INFO:root:[  147] train: 90.833% test: 56.250%
INFO:root:Accuracy: 0.89524, Precision: 0.87179, Recall: 0.98551, F1: 0.92517
INFO:root:Val Accuracy: 0.61538, Precision: 0.68750, Recall: 0.68750, F1: 0.68750
INFO:root:F1: 0.68750 did not improve from 0.800000011920929
INFO:root:Epoch 148
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 1.3420e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0096, 0.9904], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0101, 0.9899], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0144, 0.9856], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0371, 0.9629], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0199, 0.9801], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0020, 0.9980], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0117, 0.9883], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0122, 0.9878], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0420, 0.9580], device='cuda:0')
Training Output torch.Size([2]) tensor([7.0278e-04, 9.9930e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0068, 0.9932], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0063, 0.9937], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 2.1030e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1292, 0.8708], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9987, 0.0013], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0165, 0.9835], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5028, 0.4972], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8484, 0.1516], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0394, 0.9606], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0307, 0.9693], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 95.833% (loss: 0.053) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0230, 0.9770], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0465, 0.9535], device='cuda:0')
Training Output torch.Size([2]) tensor([1.6346e-04, 9.9984e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0874, 0.9126], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6487, 0.3513], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 8.3981e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1676, 0.8324], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9979, 0.0021], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 1.2077e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5351, 0.4649], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0123, 0.9877], device='cuda:0')
Training Output torch.Size([2]) tensor([5.8156e-04, 9.9942e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.2171e-05, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0293, 0.9707], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0630, 0.9370], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 2.5513e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0930, 0.9070], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9954e-01, 4.6371e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0433, 0.9567], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9989e-01, 1.0805e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0104, 0.9896], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0106, 0.9894], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9441, 0.0559], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4824, 0.5176], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3981, 0.6019], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9966e-01, 3.3666e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0627, 0.9373], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0815, 0.9185], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0098, 0.9902], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3537, 0.6463], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0253, 0.9747], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0160, 0.9840], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0605, 0.9395], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9988, 0.0012], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0782, 0.9218], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0399, 0.9601], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6714, 0.3286], device='cuda:0')
Training Output torch.Size([2]) tensor([6.8920e-04, 9.9931e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0272, 0.9728], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2267, 0.7733], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0057, 0.9943], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0812, 0.9188], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0383, 0.9617], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7134, 0.2866], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0217, 0.9783], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0187, 0.9813], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0145, 0.9855], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6816, 0.3184], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0195, 0.9805], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 1.6378e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 4.6925e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0221, 0.9779], device='cuda:0')
Training Output torch.Size([2]) tensor([7.9628e-04, 9.9920e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0040, 0.9960], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0267, 0.9733], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9889, 0.0111], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 2.8573e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9994e-01, 5.8291e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3091, 0.6909], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8761, 0.1239], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0115, 0.9885], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 2.4780e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.2005e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0040, 0.9960], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4537, 0.5463], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0062, 0.9938], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9986, 0.0014], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9975e-01, 2.4633e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Output torch.Size([2]) tensor([5.7816e-04, 9.9942e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Output torch.Size([2]) tensor([2.1739e-04, 9.9978e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0036, 0.9964], device='cuda:0')
Training Output torch.Size([2]) tensor([6.9731e-04, 9.9930e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.9334e-06], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 30, Training ones: 69 / 75
outputs torch.Size([24]) tensor([0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.8299, 0.1701], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9958, 0.0042], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1858, 0.8142], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4530, 0.5470], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9968e-01, 3.2251e-04], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2518, 0.7482], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0288, 0.9712], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.4729e-04, 9.9975e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9519, 0.0481], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1964, 0.8036], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9140, 0.0860], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0098, 0.9902], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0463, 0.9537], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0118, 0.9882], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0214, 0.9786], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9999e-01, 6.2899e-06], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9747, 0.0253], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9999e-01, 8.7668e-06], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0097, 0.9903], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6190, 0.3810], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7751, 0.2249], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2455, 0.7545], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2805, 0.7195], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 62.500% (loss: 2.035) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0358, 0.9642], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2010, 0.7990], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 10, Training ones: 16 / 16
INFO:root:[  148] train: 90.000% test: 56.250%
INFO:root:Accuracy: 0.88571, Precision: 0.88000, Recall: 0.95652, F1: 0.91667
INFO:root:Val Accuracy: 0.61538, Precision: 0.68750, Recall: 0.68750, F1: 0.68750
INFO:root:F1: 0.68750 did not improve from 0.800000011920929
INFO:root:Epoch 149
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9831, 0.0169], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0073, 0.9927], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0481, 0.9519], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1724, 0.8276], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0044, 0.9956], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0523, 0.9477], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3246, 0.6754], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0075, 0.9925], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1880, 0.8120], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0095, 0.9905], device='cuda:0')
Training Output torch.Size([2]) tensor([1.9872e-04, 9.9980e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0169, 0.9831], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0137, 0.9863], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 2.4683e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0173, 0.9827], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9920, 0.0080], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0140, 0.9860], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0460, 0.9540], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9988e-01, 1.2054e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0085, 0.9915], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3575, 0.6425], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0579, 0.9421], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.065) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0056, 0.9944], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0121, 0.9879], device='cuda:0')
Training Output torch.Size([2]) tensor([5.8841e-04, 9.9941e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0087, 0.9913], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0468, 0.9532], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9997e-01, 2.8299e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9352, 0.0648], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9997e-01, 2.8970e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9987e-01, 1.2982e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5870, 0.4130], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0067, 0.9933], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0272, 0.9728], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1108, 0.8892], device='cuda:0')
Training Output torch.Size([2]) tensor([4.0378e-05, 9.9996e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0129, 0.9871], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0087, 0.9913], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 7.4829e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0781, 0.9219], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1393, 0.8607], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9975, 0.0025], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0148, 0.9852], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 7.3536e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0204, 0.9796], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0356, 0.9644], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4489, 0.5511], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0162, 0.9838], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5654, 0.4346], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9180, 0.0820], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0376, 0.9624], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6600, 0.3400], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0980, 0.9020], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1344, 0.8656], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9551, 0.0449], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0224, 0.9776], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0670, 0.9330], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6821, 0.3179], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1548, 0.8452], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0512, 0.9488], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3473, 0.6527], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0299, 0.9701], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0291, 0.9709], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0704, 0.9296], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0172, 0.9828], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0035, 0.9965], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6890, 0.3110], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4420, 0.5580], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0011, 0.9989], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.8132e-04, 9.9912e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.7675e-04, 9.9982e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9887, 0.0113], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1798, 0.8202], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9997e-01, 2.9657e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 3.2126e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0439, 0.9561], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0016, 0.9984], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0042, 0.9958], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0154, 0.9846], device='cuda:0')
Training Output torch.Size([2]) tensor([4.0854e-05, 9.9996e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9970, 0.0030], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 3.5347e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9967e-01, 3.3144e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0140, 0.9860], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9909e-01, 9.0573e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0017, 0.9983], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2422, 0.7578], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9997e-01, 3.4002e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 2.4395e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0371, 0.9629], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0083, 0.9917], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0171, 0.9829], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9995e-01, 4.5576e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9966e-01, 3.3864e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0044, 0.9956], device='cuda:0')
Training Output torch.Size([2]) tensor([7.6322e-05, 9.9992e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0110, 0.9890], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0179, 0.9821], device='cuda:0')
Training Output torch.Size([2]) tensor([7.6580e-04, 9.9923e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9923, 0.0077], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 30, Training ones: 69 / 75
outputs torch.Size([24]) tensor([0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.8290, 0.1710], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9958, 0.0042], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1852, 0.8148], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4519, 0.5481], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9961, 0.0039], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2511, 0.7489], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0287, 0.9713], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.4633e-04, 9.9975e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9517, 0.0483], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1957, 0.8043], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9134, 0.0866], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0097, 0.9903], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0462, 0.9538], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0117, 0.9883], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0119, 0.9881], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9999e-01, 6.3392e-06], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9746, 0.0254], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9999e-01, 8.8011e-06], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0097, 0.9903], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6181, 0.3819], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7742, 0.2258], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2449, 0.7551], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2798, 0.7202], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 62.500% (loss: 2.034) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0357, 0.9643], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2003, 0.7997], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 10, Training ones: 16 / 16
INFO:root:[  149] train: 91.667% test: 56.250%
INFO:root:Accuracy: 0.90476, Precision: 0.89333, Recall: 0.97101, F1: 0.93056
INFO:root:Val Accuracy: 0.61538, Precision: 0.68750, Recall: 0.68750, F1: 0.68750
INFO:root:F1: 0.68750 did not improve from 0.800000011920929
INFO:root:Epoch 150
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9997e-01, 2.6275e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0177, 0.9823], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0446, 0.9554], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9613, 0.0387], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0079, 0.9921], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0803, 0.9197], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0842, 0.9158], device='cuda:0')
Training Output torch.Size([2]) tensor([1.2007e-04, 9.9988e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0082, 0.9918], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0155, 0.9845], device='cuda:0')
Training Output torch.Size([2]) tensor([1.7031e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0221, 0.9779], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9987, 0.0013], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0041, 0.9959], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4974, 0.5026], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9981e-01, 1.9373e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0206, 0.9794], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8879, 0.1121], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9508, 0.0492], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0499, 0.9501], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0722, 0.9278], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0190, 0.9810], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
INFO:root:[    0] 91.667% (loss: 0.277) [mem: 1.77e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0098, 0.9902], device='cuda:0')
Training Output torch.Size([2]) tensor([3.2251e-04, 9.9968e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0028, 0.9972], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0044, 0.9956], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 3.1137e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9995e-01, 5.4974e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9996e-01, 4.2151e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9547, 0.0453], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9976e-01, 2.3551e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1037, 0.8963], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0051, 0.9949], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0311, 0.9689], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0503, 0.9497], device='cuda:0')
Training Output torch.Size([2]) tensor([2.8299e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0287, 0.9713], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0164, 0.9836], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 1.3792e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0087, 0.9913], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0415, 0.9585], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9948e-01, 5.2235e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1636, 0.8364], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9963e-01, 3.7191e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0282, 0.9718], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0964, 0.9036], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4116, 0.5884], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9901, 0.0099], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9961, 0.0039], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0374, 0.9626], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9985, 0.0015], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0495, 0.9505], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0300, 0.9700], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3098, 0.6902], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0072, 0.9928], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0073, 0.9927], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9980e-01, 2.0462e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0051, 0.9949], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0121, 0.9879], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2229, 0.7771], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3267, 0.6733], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0296, 0.9704], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0645, 0.9355], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0041, 0.9959], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0222, 0.9778], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0132, 0.9868], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1022, 0.8978], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0893, 0.9107], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0030, 0.9970], device='cuda:0')
Training Labels torch.Size([24]) tensor([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0025, 0.9975], device='cuda:0')
Training Output torch.Size([2]) tensor([2.4876e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.3578e-04, 9.9946e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0092, 0.9908], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0625, 0.9375], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9992e-01, 7.9362e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 9.2235e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0268, 0.9732], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0053, 0.9947], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0156, 0.9844], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0081, 0.9919], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9996e-01, 4.2316e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 4.3308e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9995e-01, 5.3283e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0041, 0.9959], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9925, 0.0075], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0046, 0.9954], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9993e-01, 6.8415e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9995e-01, 5.2049e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0107, 0.9893], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0045, 0.9955], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0047, 0.9953], device='cuda:0')
Training Labels torch.Size([24]) tensor([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9998e-01, 1.5690e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9902e-01, 9.7735e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([4.7101e-04, 9.9953e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.3075e-05, 9.9995e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0189, 0.9811], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0096, 0.9904], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0026, 0.9974], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 8.4462e-07], device='cuda:0')
Training Labels torch.Size([9]) tensor([0, 0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
[Label/Prediction] Training zeros: 36 / 29, Training ones: 69 / 76
outputs torch.Size([24]) tensor([0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.8288, 0.1712], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9958, 0.0042], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1852, 0.8148], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4517, 0.5483], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9910, 0.0090], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2510, 0.7490], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0287, 0.9713], device='cuda:0')
Validation Output torch.Size([2]) tensor([2.4633e-04, 9.9975e-01], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9517, 0.0483], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1956, 0.8044], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9133, 0.0867], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0097, 0.9903], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0462, 0.9538], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0117, 0.9883], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0301, 0.9699], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9999e-01, 6.3392e-06], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9745, 0.0255], device='cuda:0')
Validation Output torch.Size([2]) tensor([9.9999e-01, 8.8011e-06], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0097, 0.9903], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6180, 0.3820], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7741, 0.2259], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0031, 0.9969], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2448, 0.7552], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2797, 0.7203], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
       device='cuda:0')
INFO:root:[    0] 62.500% (loss: 2.004) [mem: 1.77e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0357, 0.9643], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2003, 0.7997], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 10 / 10, Training ones: 16 / 16
INFO:root:[  150] train: 90.833% test: 56.250%
INFO:root:Accuracy: 0.89524, Precision: 0.88158, Recall: 0.97101, F1: 0.92414
INFO:root:Val Accuracy: 0.61538, Precision: 0.68750, Recall: 0.68750, F1: 0.68750
INFO:root:F1: 0.68750 did not improve from 0.800000011920929
INFO:root:VideoDataset dataset created
INFO:root:VideoDataset unsupervised data loader created
INFO:root:loaded best validation dice from epoch 28 with f1: 0.800000011920929
INFO:root:loaded pretrained encoder from epoch 28 with msg: <All keys matched successfully>
INFO:root:loaded pretrained classifier from epoch 28 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 28
INFO:root:read-path: /home/gridsan/nchutisilp/projects/jepa/pretrain_models/video_classification_frozen/cf-pres-from-vjepa-16x2x3-fold2/jepa-best.pth.tar
/home/gridsan/nchutisilp/.local/lib/python3.9/site-packages/torch/backends/cuda/__init__.py:342: FutureWarning: torch.backends.cuda.sdp_kernel() is deprecated. In the future, this context manager will be removed. Please see, torch.nn.attention.sdpa_kernel() for the new context manager, with updated signature.
  warnings.warn(
outputs torch.Size([24]) tensor([1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1],
       device='cuda:0')
labels torch.Size([24]) tensor([1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1],
       device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.4314, 0.5686], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5183, 0.4817], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4316, 0.5684], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3265, 0.6735], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3152, 0.6848], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6716, 0.3284], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3983, 0.6017], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2224, 0.7776], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5896, 0.4104], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1731, 0.8269], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6165, 0.3835], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2561, 0.7439], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5044, 0.4956], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6496, 0.3504], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3191, 0.6809], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2827, 0.7173], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4194, 0.5806], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5569, 0.4431], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2498, 0.7502], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2610, 0.7390], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5160, 0.4840], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3912, 0.6088], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2620, 0.7380], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3524, 0.6476], device='cuda:0')
Validation Labels torch.Size([24]) tensor([1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1],
       device='cuda:0')
INFO:root:[    0] 66.667% (loss: 0.560) [mem: 1.77e+04]
outputs torch.Size([9]) tensor([1, 1, 0, 1, 0, 0, 1, 1, 1], device='cuda:0')
labels torch.Size([9]) tensor([0, 0, 0, 1, 0, 1, 0, 1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2937, 0.7063], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2033, 0.7967], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5488, 0.4512], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.4844, 0.5156], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.5811, 0.4189], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.6965, 0.3035], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2307, 0.7693], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.3696, 0.6304], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2436, 0.7564], device='cuda:0')
Validation Labels torch.Size([9]) tensor([0, 0, 0, 1, 0, 1, 0, 1, 0], device='cuda:0')
[Label/Prediction] Validation zeros: 12 / 11, Training ones: 21 / 22
INFO:root:Test Accuracy: 0.60606, Precision: 0.68182, Recall: 0.71429, F1: 0.69767
