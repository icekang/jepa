/home/gridsan/nchutisilp/.conda/envs/jepa/bin/python
INFO:root:called-params configs/evals/vitl16_cf_pres_16x2x3_from_vjepa_fold1.yaml
INFO:root:loaded params...
{   'data': {   'dataset_test': '/home/gridsan/nchutisilp/projects/ModelsGenesis/notebooks/tabular_data/cf_pres_test.csv',
                'dataset_train': '/home/gridsan/nchutisilp/projects/ModelsGenesis/notebooks/tabular_data/cf_pres_train_fold1.csv',
                'dataset_type': 'VideoDataset',
                'dataset_val': '/home/gridsan/nchutisilp/projects/ModelsGenesis/notebooks/tabular_data/cf_pres_val_fold1.csv',
                'frame_step': 3,
                'frames_per_clip': 128,
                'num_classes': 2,
                'num_segments': 1,
                'num_views_per_segment': 1},
    'eval_name': 'video_classification_frozen',
    'nodes': 8,
    'optimization': {   'attend_across_segments': True,
                        'batch_size': 2,
                        'final_lr': 0.0,
                        'freeze_encoder': False,
                        'lr': 0.001,
                        'num_epochs': 150,
                        'resolution': 224,
                        'start_lr': 0.001,
                        'use_bfloat16': True,
                        'warmup': 0.0,
                        'weight_decay': 0.01},
    'pretrain': {   'checkpoint': 'jepa-latest.pth.tar',
                    'checkpoint_key': 'target_encoder',
                    'clip_duration': None,
                    'folder': '/home/gridsan/nchutisilp/projects/jepa/pretrain_models',
                    'frames_per_clip': 16,
                    'model_name': 'vit_large',
                    'patch_size': 16,
                    'tight_silu': False,
                    'tubelet_size': 2,
                    'uniform_power': True,
                    'use_sdpa': True,
                    'use_silu': False,
                    'write_tag': 'jepa'},
    'resume_checkpoint': False,
    'tag': 'cf-pres-from-vjepa-16x2x3-fold1',
    'tasks_per_node': 8}
Random port is ... 10792
INFO:root:Running... (rank: 0/1)
INFO:root:Running evaluation: video_classification_frozen
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:Loading pretrained model from /home/gridsan/nchutisilp/projects/jepa/pretrain_models/jepa-latest.pth.tar
VisionTransformer(
  (patch_embed): PatchEmbed3D(
    (proj): Conv3d(3, 1024, kernel_size=(2, 16, 16), stride=(2, 16, 16))
  )
  (blocks): ModuleList(
    (0-23): 24 x Block(
      (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
      (attn): Attention(
        (qkv): Linear(in_features=1024, out_features=3072, bias=True)
        (attn_drop): Dropout(p=0.0, inplace=False)
        (proj): Linear(in_features=1024, out_features=1024, bias=True)
        (proj_drop): Dropout(p=0.0, inplace=False)
      )
      (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
      (mlp): MLP(
        (fc1): Linear(in_features=1024, out_features=4096, bias=True)
        (act): GELU(approximate='none')
        (fc2): Linear(in_features=4096, out_features=1024, bias=True)
        (drop): Dropout(p=0.0, inplace=False)
      )
    )
  )
  (norm): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
)
INFO:root:loaded pretrained model with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch: 300
 path: /home/gridsan/nchutisilp/projects/jepa/pretrain_models/jepa-latest.pth.tar
INFO:root:VideoDataset dataset created
INFO:root:VideoDataset unsupervised data loader created
INFO:root:VideoDataset dataset created
INFO:root:VideoDataset unsupervised data loader created
INFO:root:Dataloader created... iterations per epoch: 53
INFO:root:Unfreezing encoder...
INFO:root:Using AdamW
INFO:root:Epoch 1
/home/gridsan/nchutisilp/.local/lib/python3.9/site-packages/torch/backends/cuda/__init__.py:342: FutureWarning: torch.backends.cuda.sdp_kernel() is deprecated. In the future, this context manager will be removed. Please see, torch.nn.attention.sdpa_kernel() for the new context manager, with updated signature.
  warnings.warn(
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4235, 0.5765], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4546, 0.5454], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 0.670) [mem: 2.39e+04]
Training min-max: tensor(0.) tensor(0.8794)
Training Output torch.Size([2]) tensor([0.0019, 0.9981], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0021, 0.9979], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.1928e-13, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.9656e-13, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.4524e-12, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.1166e-13, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.4482e-11, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0754e-10, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.2290e-11, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.0050e-11, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.1177e-11, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.0525e-11, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.1777e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.8660e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0076, 0.9924], device='cuda:0')
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 3.9185e-23], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Output torch.Size([2]) tensor([0., 1.], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.9668e-29, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.2747e-29, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 9.9253e-12], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 9.9253e-12], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.7021e-09, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0491e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 52.381% (loss: 16.977) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 1.5761e-14], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.2371e-14], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9995e-01, 5.0595e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9994e-01, 5.5459e-05], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.2792e-15, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([5.1974e-15, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.5598e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.5690e-05, 9.9998e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 2.7744e-20], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 3.0951e-20], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 1.8588e-21], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 2.0736e-21], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 6.9540e-14], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 6.5839e-14], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8917, 0.1083], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8909, 0.1091], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.2664e-14, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.2664e-14, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.7195e-20, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.7195e-20, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.3964e-24, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.4657e-24, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.8254e-27, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.7661e-27, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.6384e-29, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.6642e-29, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.3370e-31, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.2651e-31, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.7447e-26, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.8636e-26, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.2932e-21, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([9.2932e-21, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.4761e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.5410e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9988e-01, 1.2342e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9986e-01, 1.4296e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 3.9202e-07], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 3.9587e-07], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9577, 0.0423], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9570, 0.0430], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 53.659% (loss: 1.603) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.8649e-10, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([8.8649e-10, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.3028e-12, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.4134e-12, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.7041e-14, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.7446e-14, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.8346e-11, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.8647e-11, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0023, 0.9977], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0023, 0.9977], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 1.3517e-09], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.3360e-09], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 1.5039e-14], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 1.5039e-14], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 6.3813e-14], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 6.1369e-14], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0000e+00, 2.8505e-09], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0000e+00, 2.9640e-09], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9636, 0.0364], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9636, 0.0364], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0836, 0.9164], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0827, 0.9173], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.0000)
Training Output torch.Size([2]) tensor([0.3648, 0.6352], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 31, Training ones: 65 / 74
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0107, 0.9893], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0107, 0.9893], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.011) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0108, 0.9892], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0107, 0.9893], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0107, 0.9893], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0108, 0.9892], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0107, 0.9893], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0108, 0.9892], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0108, 0.9892], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0108, 0.9892], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0108, 0.9892], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0108, 0.9892], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0107, 0.9893], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0108, 0.9892], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0107, 0.9893], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0108, 0.9892], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0107, 0.9893], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0107, 0.9893], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0108, 0.9892], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0107, 0.9893], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0107, 0.9893], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0108, 0.9892], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0108, 0.9892], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0107, 0.9893], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.0108, 0.9892], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.0108, 0.9892], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 0, Training ones: 20 / 26
INFO:root:[    1] train: 51.887% test: 76.923%
INFO:root:Accuracy: 0.51429, Precision: 0.59459, Recall: 0.67692, F1: 0.63309
INFO:root:Val Accuracy: 0.76923, Precision: 0.76923, Recall: 1.00000, F1: 0.86957
INFO:root:New best F1: 0.86957 improved from 0.0, saving to /home/gridsan/nchutisilp/projects/jepa/pretrain_models/video_classification_frozen/cf-pres-from-vjepa-16x2x3-fold1/jepa-best.pth.tar
INFO:root:Epoch 2
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0108, 0.9892], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0106, 0.9894], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 2.281) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0816, 0.9184], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0833, 0.9167], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0051, 0.9949], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0050, 0.9950], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.0489e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.1202e-06, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.3132e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.3223e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.8660e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.8660e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.7596e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([9.7215e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.6793e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.6845e-05, 9.9997e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0125, 0.9875], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0125, 0.9875], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0690, 0.9310], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0691, 0.9309], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8692, 0.1308], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8690, 0.1310], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9286, 0.0714], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9287, 0.0713], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5404, 0.4596], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5401, 0.4599], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0101, 0.9899], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0102, 0.9898], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.3792e-05, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.3738e-05, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([1.4824e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.4766e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.0763e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.0763e-06, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.4315e-04, 9.9946e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.4315e-04, 9.9946e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0074, 0.9926], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0073, 0.9927], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1311, 0.8689], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1309, 0.8691], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0082, 0.9918], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0081, 0.9919], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 50.000% (loss: 4.811) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1697, 0.8303], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1701, 0.8299], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9838, 0.0162], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9835, 0.0165], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9682, 0.0318], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9682, 0.0318], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6940)
Training Output torch.Size([2]) tensor([0.9021, 0.0979], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9021, 0.0979], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5138, 0.4862], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5139, 0.4861], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0268, 0.9732], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0268, 0.9732], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0042, 0.9958], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0042, 0.9958], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0053, 0.9947], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0051, 0.9949], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0015, 0.9985], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0036, 0.9964], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0037, 0.9963], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0027, 0.9973], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0027, 0.9973], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.3283e-04, 9.9917e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.5757e-04, 9.9914e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.9988e-04, 9.9980e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.0382e-04, 9.9980e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.7950e-05, 9.9995e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.8515e-05, 9.9995e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.3551e-04, 9.9976e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.4110e-04, 9.9976e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.5473e-04, 9.9905e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.5473e-04, 9.9905e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0488, 0.9512], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0492, 0.9508], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0692, 0.9308], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0690, 0.9310], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0022, 0.9978], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0034, 0.9966], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0033, 0.9967], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 57.317% (loss: 2.853) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2310, 0.7690], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2320, 0.7680], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9992e-01, 7.7828e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9993e-01, 7.0312e-05], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9997e-01, 3.1447e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 2.4206e-05], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9972, 0.0028], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9972, 0.0028], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9864, 0.0136], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9861, 0.0139], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8864)
Training Output torch.Size([2]) tensor([0.8403, 0.1597], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8391, 0.1609], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3018, 0.6982], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3018, 0.6982], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2792, 0.7208], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2786, 0.7214], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6939, 0.3061], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6918, 0.3082], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8294, 0.1706], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8277, 0.1723], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9807, 0.0193], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9807, 0.0193], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9911, 0.0089], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 31, Training ones: 65 / 74
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9755, 0.0245], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9754, 0.0246], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: 3.708) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9754, 0.0246], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9755, 0.0245], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9755, 0.0245], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9754, 0.0246], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9755, 0.0245], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9754, 0.0246], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9754, 0.0246], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9754, 0.0246], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9754, 0.0246], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9754, 0.0246], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9755, 0.0245], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9754, 0.0246], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9754, 0.0246], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9754, 0.0246], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9754, 0.0246], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9754, 0.0246], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9754, 0.0246], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9755, 0.0245], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9754, 0.0246], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9754, 0.0246], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9754, 0.0246], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9754, 0.0246], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.9755, 0.0245], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.9755, 0.0245], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[    2] train: 52.830% test: 23.077%
INFO:root:Accuracy: 0.53333, Precision: 0.60811, Recall: 0.69231, F1: 0.64748
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 3
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9759, 0.0241], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9761, 0.0239], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 1.874) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7684, 0.2316], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7690, 0.2310], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6824)
Training Output torch.Size([2]) tensor([0.0854, 0.9146], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0856, 0.9144], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0013, 0.9987], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.0007e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.0007e-05, 9.9997e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.1833e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.1274e-06, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.5813e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.5751e-05, 9.9998e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.4173e-05, 9.9996e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.2647e-05, 9.9996e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.7789e-04, 9.9912e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.8997e-04, 9.9911e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0120, 0.9880], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0127, 0.9873], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2055, 0.7945], device='cuda:0')
Training Output torch.Size([2]) tensor([4.9087e-05, 9.9995e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0891, 0.9109], device='cuda:0')
Training Output torch.Size([2]) tensor([7.1803e-04, 9.9928e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0163, 0.9837], device='cuda:0')
Training Output torch.Size([2]) tensor([1.0511e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.3736e-04, 9.9976e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([8.2797e-04, 9.9917e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8235)
Training Output torch.Size([2]) tensor([8.0763e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.4230e-05, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1079, 0.8921], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1079, 0.8921], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9910, 0.0090], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9909, 0.0091], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9873, 0.0127], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9880, 0.0120], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.0974e-23, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.8010e-23, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.0575e-18, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([6.6177e-19, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.5133e-15, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.1666e-15, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 50.000% (loss: 33.688) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.9383e-15, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.1497e-15, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.5657e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.5474e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9333)
Training Output torch.Size([2]) tensor([0.7050, 0.2950], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6753, 0.3247], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8242, 0.1758], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8267, 0.1733], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0025, 0.9975], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0025, 0.9975], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7564, 0.2436], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7556, 0.2444], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7009, 0.2991], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6984, 0.3016], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6938)
Training Output torch.Size([2]) tensor([0.0052, 0.9948], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0051, 0.9949], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0064, 0.9936], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0064, 0.9936], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.6384e-05, 9.9995e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.6384e-05, 9.9995e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.7148e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.7425e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.6843e-09, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([7.7522e-09, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.9247e-10, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.9190e-10, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.5477e-09, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.5967e-09, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7987)
Training Output torch.Size([2]) tensor([3.1618e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.1219e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.7469e-04, 9.9983e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.7744e-04, 9.9982e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4007, 0.5993], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1264, 0.8736], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9987, 0.0013], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9987, 0.0013], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9956, 0.0044], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9957, 0.0043], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 57.317% (loss: 2.711) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5293, 0.4707], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5370, 0.4630], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7170, 0.2830], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7402, 0.2598], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0421, 0.9579], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0408, 0.9592], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1002, 0.8998], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0950, 0.9050], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9624, 0.0376], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9668, 0.0332], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9757, 0.0243], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9756, 0.0244], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3752, 0.6248], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3766, 0.6234], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4330, 0.5670], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4330, 0.5670], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9731, 0.0269], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9740, 0.0260], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9399, 0.0601], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9399, 0.0601], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9966, 0.0034], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9966, 0.0034], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9861, 0.0139], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 35, Training ones: 65 / 70
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2705, 0.7295], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2702, 0.7298], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.315) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2695, 0.7305], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2702, 0.7298], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2704, 0.7296], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2700, 0.7300], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2700, 0.7300], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2699, 0.7301], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2699, 0.7301], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2699, 0.7301], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2697, 0.7303], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2700, 0.7300], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2705, 0.7295], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2697, 0.7303], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2701, 0.7299], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2699, 0.7301], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2702, 0.7298], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2700, 0.7300], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2700, 0.7300], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2701, 0.7299], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2699, 0.7301], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2700, 0.7300], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2704, 0.7296], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2701, 0.7299], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.2701, 0.7299], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.2701, 0.7299], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 0, Training ones: 20 / 26
INFO:root:[    3] train: 52.830% test: 76.923%
INFO:root:Accuracy: 0.53333, Precision: 0.61429, Recall: 0.66154, F1: 0.63704
INFO:root:Val Accuracy: 0.76923, Precision: 0.76923, Recall: 1.00000, F1: 0.86957
INFO:root:F1: 0.86957 did not improve from 0.8695651888847351
INFO:root:Epoch 4
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2800, 0.7200], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2769, 0.7231], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 0.806) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1774, 0.8226], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1792, 0.8208], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0043, 0.9957], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0044, 0.9956], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.3781e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.2825e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.2404e-09, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.2748e-09, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.7536e-10, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.6667e-10, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.2980) tensor(1.)
Training Output torch.Size([2]) tensor([2.6315e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.6212e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.2764e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([9.3491e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.1880e-04, 9.9948e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.2440e-04, 9.9948e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.8157)
Training Output torch.Size([2]) tensor([0.0321, 0.9679], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0322, 0.9678], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9253, 0.0747], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9249, 0.0751], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9751, 0.0249], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9753, 0.0247], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6246, 0.3754], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6242, 0.3758], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0031, 0.9969], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0032, 0.9968], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.5789e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.6271e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.7582e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.7771e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.0312e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.0106e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0018, 0.9982], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0695, 0.9305], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0693, 0.9307], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9905, 0.0095], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9905, 0.0095], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9960e-01, 4.0134e-04], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9960e-01, 3.9977e-04], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 50.000% (loss: 0.000) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(0.5098)
Training Output torch.Size([2]) tensor([9.9999e-01, 8.0763e-06], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 8.0763e-06], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9998e-01, 1.5148e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 1.5030e-05], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9986, 0.0014], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9986, 0.0014], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3200, 0.6800], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3217, 0.6783], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.3059) tensor(0.9834)
Training Output torch.Size([2]) tensor([0.0276, 0.9724], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0277, 0.9723], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0522, 0.9478], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0518, 0.9482], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6549, 0.3451], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6558, 0.3442], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9702)
Training Output torch.Size([2]) tensor([0.6715, 0.3285], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6715, 0.3285], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1074, 0.8926], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1074, 0.8926], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.1451, 0.8549], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1446, 0.8554], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0161, 0.9839], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0160, 0.9840], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.9678e-04, 9.9980e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.9794e-04, 9.9980e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.0829e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.0571e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.2191) tensor(1.)
Training Output torch.Size([2]) tensor([1.5412e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.5314e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.1599e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1577e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.8155e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([9.8155e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.4710e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([8.4051e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.1487e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.1412e-06, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.3581e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.3558e-05, 9.9998e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9278)
Training Output torch.Size([2]) tensor([4.7656e-04, 9.9952e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.7913e-04, 9.9952e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 54.878% (loss: 3.823) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0227, 0.9773], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0227, 0.9773], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.6438, 0.3562], device='cuda:0')
Training Output torch.Size([2]) tensor([0.6442, 0.3558], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9163, 0.0837], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9162, 0.0838], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7984)
Training Output torch.Size([2]) tensor([0.8756, 0.1244], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8757, 0.1243], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9532, 0.0468], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9534, 0.0466], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8420, 0.1580], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8415, 0.1585], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1007, 0.8993], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1040, 0.8960], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0510, 0.9490], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0529, 0.9471], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2227, 0.7773], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2197, 0.7803], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1298, 0.8702], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1292, 0.8708], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3285, 0.6715], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3277, 0.6723], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7753, 0.2247], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 31, Training ones: 65 / 74
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7909, 0.2091], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7907, 0.2093], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 0.000% (loss: 1.564) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7907, 0.2093], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7908, 0.2092], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7908, 0.2092], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7907, 0.2093], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7907, 0.2093], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7907, 0.2093], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7907, 0.2093], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7907, 0.2093], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7907, 0.2093], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7907, 0.2093], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7907, 0.2093], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7907, 0.2093], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7909, 0.2091], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7907, 0.2093], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7907, 0.2093], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7907, 0.2093], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7907, 0.2093], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7908, 0.2092], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7908, 0.2092], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7909, 0.2091], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7908, 0.2092], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7908, 0.2092], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([0, 0], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.7907, 0.2093], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.7908, 0.2092], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 26, Training ones: 20 / 0
INFO:root:[    4] train: 50.943% test: 23.077%
INFO:root:Accuracy: 0.51429, Precision: 0.59459, Recall: 0.67692, F1: 0.63309
INFO:root:Val Accuracy: 0.23077, Precision: 0.00000, Recall: 0.00000, F1: 0.00000
INFO:root:F1: 0.00000 did not improve from 0.8695651888847351
INFO:root:Epoch 5
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7910, 0.2090], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7923, 0.2077], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 0.899) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5887, 0.4113], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5885, 0.4115], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2160, 0.7840], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2160, 0.7840], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0161, 0.9839], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0161, 0.9839], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([7.0553e-05, 9.9993e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([7.0484e-05, 9.9993e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.2706) tensor(1.)
Training Output torch.Size([2]) tensor([3.1995e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.1987e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.2318e-06, 9.9999e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.2333e-06, 9.9999e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6901)
Training Output torch.Size([2]) tensor([1.7014e-05, 9.9998e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([1.6998e-05, 9.9998e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0036, 0.9964], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0035, 0.9965], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.0353) tensor(1.)
Training Output torch.Size([2]) tensor([0.0332, 0.9668], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0328, 0.9672], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9717, 0.0283], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9719, 0.0281], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9945, 0.0055], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9944, 0.0056], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8679, 0.1321], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8675, 0.1325], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0071, 0.9929], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0072, 0.9928], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.1405e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.1416e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.0111e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.0053e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.3916e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([5.3210e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.5268e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.5699e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.5691e-05, 9.9997e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.6403e-05, 9.9997e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7240)
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0014, 0.9986], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0184, 0.9816], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0184, 0.9816], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 45.238% (loss: 3.996) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3141, 0.6859], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3115, 0.6885], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9399, 0.0601], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9404, 0.0596], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7932)
Training Output torch.Size([2]) tensor([0.9789, 0.0211], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9788, 0.0212], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.9409, 0.0591], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9395, 0.0605], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5699, 0.4301], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5689, 0.4311], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0620, 0.9380], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0609, 0.9391], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0583, 0.9417], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0578, 0.9422], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3132, 0.6868], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3162, 0.6838], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.6705)
Training Output torch.Size([2]) tensor([0.2555, 0.7445], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2552, 0.7448], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3757, 0.6243], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3755, 0.6245], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3166, 0.6834], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3168, 0.6832], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1738, 0.8262], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1734, 0.8266], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0455, 0.9545], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0450, 0.9550], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0035, 0.9965], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0036, 0.9964], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.2719e-04, 9.9907e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.1461e-04, 9.9909e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.1528e-04, 9.9978e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([2.1486e-04, 9.9979e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([3.1016e-04, 9.9969e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([3.1259e-04, 9.9969e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.4858e-04, 9.9955e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([4.4422e-04, 9.9956e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.9071e-04, 9.9941e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([5.9071e-04, 9.9941e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0046, 0.9954], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0046, 0.9954], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 54.878% (loss: 2.690) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1466, 0.8534], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1465, 0.8535], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9670, 0.0330], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9669, 0.0331], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9958, 0.0042], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9958, 0.0042], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9919, 0.0081], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9919, 0.0081], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9978, 0.0022], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9978, 0.0022], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9940, 0.0060], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9939, 0.0061], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9304, 0.0696], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9315, 0.0685], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.4595, 0.5405], device='cuda:0')
Training Output torch.Size([2]) tensor([0.4590, 0.5410], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2842, 0.7158], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2840, 0.7160], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0968, 0.9032], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0968, 0.9032], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0855, 0.9145], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0855, 0.9145], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1587, 0.8413], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 30, Training ones: 65 / 75
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1453, 0.8547], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1454, 0.8546], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.157) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1454, 0.8546], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1454, 0.8546], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1454, 0.8546], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1454, 0.8546], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1453, 0.8547], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1454, 0.8546], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1454, 0.8546], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1453, 0.8547], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1454, 0.8546], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1454, 0.8546], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1454, 0.8546], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1454, 0.8546], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1454, 0.8546], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1454, 0.8546], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1453, 0.8547], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1454, 0.8546], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1454, 0.8546], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1454, 0.8546], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1454, 0.8546], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1454, 0.8546], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1453, 0.8547], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1455, 0.8545], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1454, 0.8546], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1453, 0.8547], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 0, Training ones: 20 / 26
INFO:root:[    5] train: 52.830% test: 76.923%
INFO:root:Accuracy: 0.52381, Precision: 0.60000, Recall: 0.69231, F1: 0.64286
INFO:root:Val Accuracy: 0.76923, Precision: 0.76923, Recall: 1.00000, F1: 0.86957
INFO:root:F1: 0.86957 did not improve from 0.8695651888847351
INFO:root:Epoch 6
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1448, 0.8552], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1445, 0.8555], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 1.046) [mem: 2.63e+04]
Training min-max: tensor(0.0886) tensor(1.)
Training Output torch.Size([2]) tensor([0.2286, 0.7714], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2287, 0.7713], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2031, 0.7969], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2037, 0.7963], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1106, 0.8894], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1103, 0.8897], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0315, 0.9685], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0315, 0.9685], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0209, 0.9791], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0209, 0.9791], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0344, 0.9656], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0345, 0.9655], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0255, 0.9745], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0255, 0.9745], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0449, 0.9551], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0449, 0.9551], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0330, 0.9670], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0330, 0.9670], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0582, 0.9418], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0579, 0.9421], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1743, 0.8257], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1745, 0.8255], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.2036, 0.7964], device='cuda:0')
Training Output torch.Size([2]) tensor([0.2033, 0.7967], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.5020)
Training Output torch.Size([2]) tensor([0.0996, 0.9004], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0997, 0.9003], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0161, 0.9839], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0162, 0.9838], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7437, 0.2563], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7434, 0.2566], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9999e-01, 1.3846e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 1.3846e-05], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9999e-01, 1.2982e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9999e-01, 1.2706e-05], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9241, 0.0759], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9254, 0.0746], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.7484e-06, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.7407e-06, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.6330e-12, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.6139e-12, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
INFO:root:[   20] 59.524% (loss: 27.148) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([1.6458e-12, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([1.6458e-12, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.4898e-14, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.4549e-14, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([5.4468e-15, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([5.4895e-15, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([2.5391e-12, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([2.4997e-12, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.6599e-07, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.6645e-07, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7886, 0.2114], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7905, 0.2095], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9992e-01, 7.6322e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9992e-01, 7.9053e-05], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([9.9998e-01, 1.9756e-05], device='cuda:0')
Training Output torch.Size([2]) tensor([9.9998e-01, 1.9989e-05], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.9989, 0.0011], device='cuda:0')
Training Output torch.Size([2]) tensor([0.9988, 0.0012], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.3414, 0.6586], device='cuda:0')
Training Output torch.Size([2]) tensor([0.3400, 0.6600], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([6.1568e-05, 9.9994e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([6.2050e-05, 9.9994e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.2978e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([8.3629e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.4118)
Training Output torch.Size([2]) tensor([7.7020e-10, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([7.7020e-10, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.7644)
Training Output torch.Size([2]) tensor([3.1053e-11, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([3.1053e-11, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([8.2630e-10, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([8.1987e-10, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([4.0126e-08, 1.0000e+00], device='cuda:0')
Training Output torch.Size([2]) tensor([4.1077e-08, 1.0000e+00], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9991)
Training Output torch.Size([2]) tensor([9.2719e-04, 9.9907e-01], device='cuda:0')
Training Output torch.Size([2]) tensor([9.3264e-04, 9.9907e-01], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5073, 0.4927], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5075, 0.4925], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.5059, 0.4941], device='cuda:0')
Training Output torch.Size([2]) tensor([0.5079, 0.4921], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0027, 0.9973], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0027, 0.9973], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[   40] 59.756% (loss: 2.954) [mem: 2.63e+04]
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0054, 0.9946], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0054, 0.9946], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7919, 0.2081], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7923, 0.2077], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7611, 0.2389], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7609, 0.2391], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0126, 0.9874], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0126, 0.9874], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0223, 0.9777], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0223, 0.9777], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.8323, 0.1677], device='cuda:0')
Training Output torch.Size([2]) tensor([0.8321, 0.1679], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.7734, 0.2266], device='cuda:0')
Training Output torch.Size([2]) tensor([0.7733, 0.2267], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(0.9196)
Training Output torch.Size([2]) tensor([0.0284, 0.9716], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0284, 0.9716], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0358, 0.9642], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0359, 0.9641], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0012, 0.9988], device='cuda:0')
Training Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.0025, 0.9975], device='cuda:0')
Training Output torch.Size([2]) tensor([0.0025, 0.9975], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Training min-max: tensor(0.) tensor(1.)
Training Output torch.Size([2]) tensor([0.1125, 0.8875], device='cuda:0')
Training Labels torch.Size([1]) tensor([1], device='cuda:0')
[Label/Prediction] Training zeros: 40 / 28, Training ones: 65 / 77
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1201, 0.8799], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1200, 0.8800], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
INFO:root:[    0] 100.000% (loss: 0.128) [mem: 2.63e+04]
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1201, 0.8799], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1200, 0.8800], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1200, 0.8800], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1200, 0.8800], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1200, 0.8800], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1201, 0.8799], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1201, 0.8799], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1200, 0.8800], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1200, 0.8800], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1199, 0.8801], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1201, 0.8799], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1200, 0.8800], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1200, 0.8800], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1200, 0.8800], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1200, 0.8800], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1200, 0.8800], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1201, 0.8799], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1200, 0.8800], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([0, 0], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1200, 0.8800], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1200, 0.8800], device='cuda:0')
Validation Labels torch.Size([2]) tensor([0, 0], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1200, 0.8800], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1201, 0.8799], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
outputs torch.Size([2]) tensor([1, 1], device='cuda:0')
labels torch.Size([2]) tensor([1, 1], device='cuda:0')
Validation min-max: tensor(0.) tensor(1.)
Validation Output torch.Size([2]) tensor([0.1199, 0.8801], device='cuda:0')
Validation Output torch.Size([2]) tensor([0.1200, 0.8800], device='cuda:0')
Validation Labels torch.Size([2]) tensor([1, 1], device='cuda:0')
[Label/Prediction] Validation zeros: 6 / 0, Training ones: 20 / 26
INFO:root:[    6] train: 54.717% test: 76.923%
INFO:root:Accuracy: 0.54286, Precision: 0.61039, Recall: 0.72308, F1: 0.66197
INFO:root:Val Accuracy: 0.76923, Precision: 0.76923, Recall: 1.00000, F1: 0.86957
INFO:root:F1: 0.86957 did not improve from 0.8695651888847351
INFO:root:Epoch 7
Training min-max: tensor(0.) tensor(0.7529)
Training Output torch.Size([2]) tensor([0.1204, 0.8796], device='cuda:0')
Training Output torch.Size([2]) tensor([0.1202, 0.8798], device='cuda:0')
Training Labels torch.Size([2]) tensor([1, 0], device='cuda:0')
INFO:root:[    0] 50.000% (loss: 1.124) [mem: 2.63e+04]
slurmstepd-d-10-4-2: error: *** JOB 26358958 ON d-10-4-2 CANCELLED AT 2024-06-25T13:23:53 ***
